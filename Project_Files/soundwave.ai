%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 18.0.0
%%For: (fosin) ()
%%Title: (sound wave 2.eps)
%%CreationDate: 7/13/2015 4:04 AM
%%Canvassize: 16383
%%BoundingBox: 0 -500 500 0
%%HiResBoundingBox: 0 -500 500 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 250.5 -250.5 250.5 -250.5
%AI3_TileBox: -56 -646 556 146
%AI3_DocumentPreview: Header
%AI5_ArtSize: 500 500
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -273 55.678 1.18 1243 612 18 0 0 78 111 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-150 -550
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 0
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Blue Sky)
(Blue Sky) 0 2 Bd
[
0.877287
0
0.19675
0
0.239216
0.870588
0.929412
4 %_Br
[
0.877287 0 0.19675 0 0.239216 0.870588 0.929412 2 50 100 %_BS
%_0.877287 0 0.19675 0 0.239216 0.870588 0.929412 2 50 100 Bs
0.877287 0 0.19675 0 0.239216 0.870588 0.929412 2 50 0 %_BS
%_0.877287 0 0.19675 0 0.239216 0.870588 0.929412 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Gold Dust)
(Gold Dust) 0 4 Bd
[
<
1918191819191A191A1A1A1B1A1B1B1B1B1C1B1B1C1C1C1C1D1D1D1D1E1D1C1D1D1E1D1E1E1F1E1E
1F1E1F1F201F20201F20202120212122222122222323232324232424242525252526252626252626
262627272727
>
<
2E2F30323334353637393A3B3C3D3F4041424445464748494A4C4D4E4F515253555657585A5B5C5E
5F6162656668696A6C6D6F707173747677797A7C7D7F8082838586888A8B8D8E9091939496989A9C
9EA0A2A4A5A8
>
1
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000010101010101010101020202020202020202
030303030303
>
<
E5E5E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDDDDDDDCDCDBDBDADAD9D9D8D8D8D7D7D6D6D5D5D4D4D4
D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCCCBCBCACAC9C9C8C8C7C7C7C6C6C5C5C4C4C3C3C3C2C2
C1C1C0C0BFBF
>
<
C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
9D9C9B999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675
74737271706F
>
0
4 %_Br
<
0909090A0A0A0B0B0C0C0D0D0D0E0E0E0F0F101111121213131314141515151616161717171819
>
<
6362605F5E5C5B59585755545352504F4E4C4B484745444241403E3D3C3A393836353332312F2E
>
1
0
0.898039
<
9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5
>
<
030303030303030202020202020202020202020101010101010101010101010100000000000000
>
4 %_Br
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000010102020404050606070809
>
<
A0A0A09E9E9D9D9C9C9B9B9999989797959494939191908F8D8D8B8A8989878685848282817F7E7C
7B7978787776747371706E6C6B6968666563
>
1
0
<
FFFFFFFEFEFEFEFDFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EF
EFEEEEEDEDECEBEBEAEAE9E9E8E7E7E6E6E5
>
<
73737374747575767677777878797A7A7B7C7C7D7E7E7F808181828384848586878889898A8B8C8D
8E8F90909192939495969798999A9B9C9D9E
>
<
00000000000000000000000000000001010101010101010101010101010101010101020202020202
020202020202020202020303030303030303
>
4 %_Br
[
0.153445 0.656916 1 0.013123 0.74902 0.435294 0 2 50 99.4382 %_BS
%_0.153445 0.656916 1 0.013123 0.74902 0.435294 0 2 50 99.4382 Bs
0.096529 0.181765 1 0 0.898039 0.772549 0 2 50 86.5168 %_BS
%_0.096529 0.181765 1 0 0.898039 0.772549 0 2 50 86.5168 Bs
0.034791 0.387579 1 0 0.898039 0.619608 0.011765 2 50 55.211 %_BS
%_0.034791 0.387579 1 0 0.898039 0.619608 0.011765 2 50 55.211 Bs
0 0.629023 1 0 1 0.45098 0 2 59.5506 0 %_BS
%_0 0.629023 1 0 1 0.45098 0 2 59.5506 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
00000001020304040506070809090A0B0C0D0E0E0F101112131415161718191A1B1C1D1E1F202122
23232425262728292A2B2D2E2F303132333435363738393A3B3C3D3E3F41424344454647484A4B4C
4D4E4F51525354555657585A5B5D5E5F61626364656668696A6B6C6D6E6F6F707172737475767778
797A7B7C7D7D7E7F808182828384858686878889898A8B8B8C8D8D8E8E8F8F909091919292939394
94949495959595959696969797989898989898989898989898999999999999999999999999999999
99999999999999999999999999999898989898989898989898989898989897979797979696969695
95959595959595959494949494949494
>
<
0000000001020203030404050606070808090A0A0B0C0D0D0E0F0F10111212131414151616171819
191A1B1C1C1D1E1F1F20212223242525262728292A2B2C2C2D2E2F303132333434363738393A3B3C
3D3E3F4041424344454647484A4B4C4D4E4F5051525354555758595A5B5C5D5E5F61616263646565
666768696A6A6B6C6D6E6E6F6F70717172737374757676777878797A7A7B7C7C7D7D7E7E7F7F7F80
8081818282838384848485858586868686878787878788888989898A8A8A8A8A8A8A8A8A8A8A8B8B
8B8B8B8B8B8B8B8B8B8A8A8A8A898989898888888787868685848483828281807F7E7D7C7B7B7A79
79787878787877777777777676767675
>
<
0000000102020304040506060708090A0A0B0C0D0E0E0F101111121313141516171819191A1B1C1D
1E1E1F20212223242425262728292A2A2B2C2D2E2F3031313233343536373839393B3C3D3E3F4041
42434445464748494A4C4D4E4F5051525354555657585A5B5C5D5E5F60616162636465666768696A
6B6C6D6E6F6F70717273737475757677777879797A7B7B7C7D7D7E7F808081828283838484858586
868787878888888989898A8A8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8A8A898989
88888888878787878686858584848382828181807F7E7E7D7C7B7A797877767574737271706F6E6E
6D6C6C6C6B6B6B6B6A6A6A6A69696969
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000010101010102020203030304040506070708
090A0B0B0C0D0E0F1011121314151718191A1C1D1E1F212223252628292B2C2E2F3133343637393B
3C3E4041434547484A4C4E5052545557595B5C5E60626466686A6B6D70727476787A7C7E81838587
898B8E909395989A9D9FA2A4A7AAADB0B3B6B9BBBEC1C3C6C9CBCED1D3D5D8DADCDEDFE1E3E4E6E8
E9EAEBEBECECEDEDEEEFEFF0F0F1F1F2
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.580072 0.46009 0.410468 0.949004 0 0 0 2 50 100 %_BS
%_0.580072 0.46009 0.410468 0.949004 0 0 0 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Jive)
(Jive) 47.5615 109.6396 155.9004 219.2813 [
%AI3_Tile
(0 O 0 R 1 0.810819 0.225376 0.184237 0 0.258824 0.494118 Xa
 1 0.810819 0.225376 0.184237 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0352 74.9453 m
135.0566 75.0645 135.1602 75.1504 135.2813 75.1523 c
148.1875 75.2871 160.0352 78.4199 169.2529 86.667 C
161.2227 81.1094 146.3105 79.1563 137.7256 83.0488 c
137.6152 83.0986 137.5566 83.2188 137.584 83.3369 c
137.6104 83.4551 137.7168 83.5371 137.8379 83.5332 c
148.5176 83.2441 157.1172 86.54 163.8223 92.498 C
156.9531 92.9199 151.248 97.2383 151.2656 102.3428 c
151.2656 102.4619 151.3496 102.5645 151.4668 102.5898 c
151.583 102.6152 151.7012 102.5547 151.75 102.4463 c
152.8711 99.957 156.498 98.666 160.333 99.5664 c
164.5127 100.5469 167.333 103.7559 166.6338 106.7314 c
166.1621 108.7461 164.1973 110.1348 161.6816 110.5186 c
161.5547 110.5371 161.4619 110.6484 161.4648 110.7764 c
161.4688 110.9043 161.5674 111.0098 161.6953 111.0215 c
162.7637 111.124 163.875 111.1279 165.0127 111.0195 c
171.5029 110.4023 176.5264 106.4238 176.9619 101.8418 C
181.6748 102.3887 185.8457 104.998 187.3398 108.6152 c
187.3848 108.7236 187.5 108.7871 187.6152 108.7695 c
187.7305 108.75 187.8184 108.6553 187.8281 108.5391 c
188.2051 103.7871 186.5703 100.7002 182.8584 97.6846 C
188.2422 99.7441 194.3027 99.8496 200.1133 97.1465 c
200.2188 97.0977 200.2773 96.9824 200.2559 96.8672 c
200.2324 96.752 200.1328 96.668 200.0156 96.6641 c
195.1367 96.4736 191.5996 94.9082 188.2852 91.5918 C
206.5391 96.7256 221.3711 85.3906 216.2383 68.5391 c
216.2031 68.4238 216.0918 68.3486 215.9707 68.3613 c
215.8496 68.373 215.7539 68.4688 215.7441 68.5898 c
214.8262 78.3037 208.041 84.7051 197.8828 85.666 C
203.2695 83.6055 208.8828 78.6895 209.4395 70.1318 c
209.4473 70.0098 209.3672 69.8984 209.248 69.8691 c
209.1289 69.8398 209.0059 69.8984 208.9551 70.0098 c
206.1563 76.1641 200.6582 79.2754 194.7949 79.8223 C
201.1289 77.2422 205.1914 71.2207 206.3652 63.4023 c
206.3848 63.2793 206.3105 63.1602 206.1914 63.123 c
206.0742 63.084 205.9453 63.1387 205.8887 63.248 c
202.0234 70.8311 193.7324 76.042 183.4424 72.0605 c
172.8252 67.9512 168.168 55.6738 167.1387 47.0195 c
167.124 46.8984 167.0234 46.8047 166.9004 46.7969 c
166.7783 46.7891 166.668 46.8711 166.6396 46.9922 c
162.9199 62.6797 170.2227 78.9414 183.2764 85.832 C
176.1807 83.8291 169.8369 79.5723 166.249 72.4775 C
157.9551 71.459 152.2451 68.6152 149.3916 63.2383 c
149.335 63.1309 149.2109 63.0781 149.0957 63.1133 c
148.9805 63.1465 148.9043 63.2578 148.9141 63.3789 c
149.0967 65.4883 149.8555 69.709 152.9883 71.6494 C
146.0234 71.6387 140.4824 72.543 135.1895 74.6621 c
135.0781 74.708 135.0127 74.8262 135.0352 74.9453 c
f
164.5215 21.4746 m
164.4229 21.541 164.293 21.5293 164.2061 21.4492 c
164.1201 21.3672 164.1016 21.2383 164.1602 21.1367 c
165.7803 18.3398 164.3008 14.3223 161.1094 14.3223 c
155.3887 14.3223 152.6387 25.0918 153.5137 34.916 C
155.6768 29.1602 157.5469 26.8613 160.8613 24.1211 c
160.9551 24.043 161.0898 24.043 161.1836 24.1191 c
161.2773 24.1973 161.3047 24.3281 161.2471 24.4355 c
156.3906 33.5156 155.3496 40.502 155.3496 48.5215 C
156.8125 42.5625 158.5449 39.1992 163.4766 34.1406 c
163.5625 34.0527 163.6992 34.0391 163.8018 34.1074 c
163.9033 34.1777 163.9404 34.3105 163.8887 34.4238 c
158.5908 46.0137 158.9951 58.8711 162.9414 68.6875 c
162.9805 68.7852 162.9561 68.8965 162.8789 68.9688 c
162.8018 69.0391 162.6895 69.0566 162.5938 69.0098 c
157.3887 66.459 154.3301 64.7832 149.8418 58.6211 C
151.1992 51.2227 150.0703 47.5723 146.6699 41.4258 C
150.6074 51.3438 148.5117 65.3203 138.4824 71.0176 c
138.373 71.0791 138.2344 71.0518 138.1582 70.9531 c
138.0801 70.8535 138.0869 70.7119 138.1738 70.6211 c
141.9551 66.666 144.7051 59.9863 142.3301 52.6934 C
143.8594 63.082 134.7344 71.8086 124.5508 71.8086 c
114.9512 71.8086 108.4004 64.2988 108.9414 56.8672 c
109.4785 49.502 114.3848 45.8984 118.6133 44.3691 c
118.7246 44.3301 118.8496 44.3711 118.9131 44.4707 c
118.9766 44.5723 118.9629 44.7012 118.8799 44.7871 c
113.2695 50.4785 112.502 61.2793 122.4629 64.5469 C
116.6035 59.4902 118.7734 47.7168 128.1523 46.8223 c
128.2695 46.8105 128.3789 46.8809 128.417 46.9922 c
128.4551 47.1035 128.4121 47.2266 128.3135 47.2891 c
126.3047 48.5664 124.6348 51.0605 124.6348 53.8633 c
124.6348 58.5371 128.0566 60.373 130.3105 60.373 c
133.7324 60.373 136.5703 57.1172 136.5703 52.1934 c
136.5703 46.3496 131.3105 41.5098 124.5508 40.7578 c
117.9248 40.0234 111.7686 42.9121 108.8008 47.2168 c
108.7314 47.3184 108.5996 47.3555 108.4873 47.3047 c
108.375 47.2539 108.3164 47.1289 108.3467 47.0098 c
111.3652 35.3066 125.1426 30.1328 135.2344 37.5039 C
128.6211 30.002 118.2285 29.8984 109.5127 37.5898 c
109.4219 37.6699 109.2871 37.6738 109.1904 37.5996 c
109.0938 37.5273 109.0635 37.3945 109.1172 37.2871 c
111.7842 31.8789 118.3701 25.4668 127.7227 26.4023 c
136.2793 27.2578 141.2441 35.416 142.2461 42.0938 C
142.8027 33.5723 140.8525 27.5566 133.4922 21.9473 c
133.3955 21.873 133.3652 21.7402 133.4199 21.6309 c
133.4746 21.5234 133.5996 21.4688 133.7168 21.502 c
140.502 23.4629 145.9473 26.9277 148.7656 34.0469 C
148.7656 27.8848 146.627 21.6738 141.2402 17.5352 c
141.1426 17.4609 141.1133 17.3301 141.168 17.2207 c
141.2227 17.1113 141.3467 17.0566 141.4639 17.0898 c
144.917 18.0742 147.6348 19.5781 149.6016 22.2754 C
150.9121 11.1758 156.123 4.58398 162.127 4.58398 c
166.252 4.58398 169.332 7.61719 169.332 12.4551 c
169.332 15.2852 167.8438 19.2578 164.5215 21.4746 c
f
263.748 113.0938 m
260.5859 116.998 254.209 118.4863 247.3164 117.082 C
247.8262 121.3828 246.9824 125.873 245.7051 128.5664 c
245.6523 128.6758 245.5313 128.7334 245.4141 128.7051 c
245.2969 128.6758 245.2168 128.5684 245.2207 128.4473 c
245.5957 119.6807 240.5977 112.6035 231.7715 109.5371 C
238.6777 114.293 240.6973 123.7305 237.4102 128.6035 c
237.3418 128.7021 237.2148 128.7412 237.1035 128.6953 c
236.9922 128.6504 236.9277 128.5332 236.9492 128.416 c
237.3223 126.3555 236.3438 123.7314 234.2363 121.6895 c
231.3301 118.875 227.3867 118.2363 225.4258 120.2598 c
223.4648 122.2852 224.2285 126.207 227.1328 129.0215 c
228.1934 130.0488 229.3926 130.7832 230.582 131.2061 c
230.6953 131.2461 230.7637 131.3594 230.748 131.4775 c
230.7344 131.5967 230.6387 131.6885 230.5195 131.6982 c
224.1309 132.2529 219.75 128.4463 217.0039 123.8203 c
214.209 119.1152 209.4336 115.4102 203.793 116.1504 c
203.6738 116.166 203.5605 116.0957 203.5195 115.9824 c
203.4805 115.8691 203.5254 115.7422 203.6289 115.6807 c
206.4258 113.9961 209.5 113.2969 213.4922 114.6289 C
207.6973 109.7197 199.4453 106.8867 191.6523 109.4014 c
191.543 109.4375 191.4238 109.3945 191.3613 109.2979 c
191.2988 109.2012 191.3105 109.0752 191.3867 108.9902 c
197.2949 102.4258 209.0762 102.2949 216.4961 107.6172 C
213.459 103.3008 209.4277 100.1328 202.2031 99.1387 c
202.0879 99.123 201.998 99.0313 201.9844 98.916 c
201.9727 98.7998 202.0391 98.6904 202.1484 98.6504 c
210.4395 95.5723 218.748 98.6953 225.5938 106.8652 C
222.6016 100.4883 217.6875 95.3809 210.8262 92.8535 c
210.7109 92.8115 210.6426 92.6934 210.6641 92.5742 c
210.6836 92.4531 210.7871 92.3643 210.9082 92.3613 c
214.8516 92.2803 218.3945 93.2188 223.1738 95.9316 C
219.666 90.2422 220.4336 80.293 225.543 73.6738 c
225.6133 73.582 225.7383 73.5498 225.8457 73.5957 c
225.9512 73.6426 226.0137 73.7549 225.9941 73.8691 c
224.8145 81.0703 227.293 89.1992 231.6035 93.5117 C
229.4512 85.8799 231.5977 78.9355 237.5 73.8672 c
237.5703 73.8066 237.6699 73.79 237.7559 73.8232 c
237.8438 73.8564 237.9043 73.9355 237.918 74.0273 c
239.1523 83.4453 249.6875 93.002 258.5195 93.8027 c
258.6445 93.8135 258.7422 93.9141 258.75 94.0381 c
258.7578 94.1621 258.6758 94.2754 258.5527 94.3027 c
254.2734 95.2715 249.8613 94.793 246.1641 93.2715 C
248.8242 96.2051 252.1035 98.3828 255.7188 99.5176 c
255.8359 99.5537 255.9082 99.668 255.8945 99.7891 c
255.8809 99.9102 255.7813 100.0039 255.6602 100.0127 c
251.1504 100.3242 246.7363 99.0068 242.9297 96.4746 C
247.291 103.0957 253.9102 108.0195 262.3574 109.9805 c
262.4785 110.0088 262.5605 110.1191 262.5547 110.2432 c
262.5469 110.3672 262.4512 110.4668 262.3281 110.4805 c
250.4102 111.7822 240.582 107.1621 234.1074 98.5625 C
235.7559 103.4629 240.4727 108.3184 247.0527 111.1816 c
252.8984 113.7266 258.9023 114.1279 263.4746 112.6914 c
263.5801 112.6582 263.6973 112.6982 263.7598 112.791 c
263.8223 112.8828 263.8184 113.0059 263.748 113.0938 c
f
210.8438 37.5215 m
215.6504 48.0078 215.3086 56.207 211.4375 66.5762 c
211.3926 66.6934 211.2715 66.7607 211.1484 66.7363 c
211.0254 66.7109 210.9395 66.5996 210.9453 66.4746 c
211.5664 53.8535 208.1191 44.8203 200.6465 38.668 C
208.8965 48.5195 205 68.2275 191.8242 68.2275 c
182.2393 68.2275 174.3086 60.252 172.3691 50.7031 c
172.3447 50.582 172.4111 50.459 172.5273 50.416 c
172.6426 50.3711 172.7734 50.416 172.8359 50.5215 c
175.6787 55.2832 180.2451 58.373 185.2939 58.373 c
193.4277 58.373 195.834 51.9063 195.834 47.375 c
195.834 41.1875 190.9082 36.0313 187.127 36.0313 c
183.6904 36.0313 182.0869 38.8555 182.0869 40.959 c
182.0869 44.8574 185.085 48.125 188.4629 49.123 c
188.582 49.1582 188.6602 49.2773 188.6426 49.4023 c
188.623 49.5273 188.5176 49.6191 188.3926 49.6211 c
184.2861 49.6465 180.8154 47.7656 178.7627 44.0527 C
178.4932 46.9277 178.4902 48.7383 179.4033 51.7754 c
179.4385 51.8926 179.3848 52.0176 179.2773 52.0742 c
179.168 52.1309 179.0352 52.1016 178.9609 52.0059 c
171.6045 42.6133 175.125 26.3809 180.9404 19.6484 C
175.4082 23.6309 170.5234 32.2813 170.6006 44.041 c
170.6016 44.1641 170.5156 44.2676 170.3955 44.291 c
170.2754 44.3164 170.1563 44.25 170.1113 44.1367 c
166.0029 33.8848 168.1826 14.8887 179.3926 4.28516 C
176.5088 3.88867 173.5254 3.93945 170.2676 4.97852 c
170.1523 5.01367 170.0273 4.96484 169.9688 4.85938 c
169.9102 4.75195 169.9336 4.61914 170.0273 4.54102 c
174.1191 1.08594 179.8418 0 185.2939 0 C
180.5967 5.5 182.1572 16.5547 189.6484 16.5547 c
194.9961 16.5547 197.4238 8.25586 193.2949 3.77344 c
193.2168 3.6875 193.207 3.55859 193.2695 3.46289 c
193.334 3.36523 193.4551 3.32227 193.5664 3.36133 c
198.3457 5.01563 203.5117 9.15039 203.5117 14.377 c
203.5117 19.4199 198.6992 23.7715 191.7109 23.4277 C
200.5293 25.9336 209.7617 23.1602 214.5918 17.1758 c
214.666 17.082 214.7969 17.0547 214.9023 17.1074 c
215.0098 17.1621 215.0645 17.2832 215.0352 17.3984 c
212.2441 28.1152 203.0684 32.5977 191.5957 31.1055 C
200.877 34.8613 214.8457 31.5859 221.0195 23.7949 c
221.0918 23.7031 221.2188 23.6738 221.3262 23.7227 c
221.4316 23.7734 221.4902 23.8906 221.4668 24.0039 c
220.0957 30.6191 216.6035 35.5664 210.8438 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.421485 0 0.046937 0 0.615686 0.862745 0.976471 Xa
 0.421485 0 0.046937 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2266 56.8086 m
237.2051 56.6895 237.1016 56.6016 236.9805 56.6016 c
224.0742 56.4648 212.2266 53.334 203.0098 45.0859 C
211.0391 50.6445 225.9512 52.5957 234.5371 48.7051 c
234.6465 48.6543 234.7051 48.5332 234.6777 48.416 c
234.6523 48.2988 234.5449 48.2168 234.4238 48.2188 c
223.7441 48.5098 215.1445 45.2129 208.4395 39.2559 C
215.3086 38.832 221.0137 34.5156 220.9961 29.4102 c
220.9961 29.291 220.9121 29.1875 220.7949 29.1621 c
220.6797 29.1387 220.5605 29.1973 220.5117 29.3066 c
219.3906 31.7949 215.7637 33.0879 211.9297 32.1875 c
207.75 31.2051 204.9297 27.998 205.6289 25.0215 c
206.0996 23.0078 208.0645 21.6191 210.5801 21.2344 c
210.707 21.2148 210.8008 21.1055 210.7969 20.9766 c
210.793 20.8496 210.6953 20.7441 210.5664 20.7305 c
209.498 20.6289 208.3867 20.625 207.25 20.7344 c
200.7598 21.3516 195.7363 25.3281 195.3008 29.9121 C
190.5879 29.3652 186.416 26.7539 184.9229 23.1387 c
184.8779 23.0293 184.7646 22.9668 184.6475 22.9844 c
184.5322 23.002 184.4443 23.0977 184.4346 23.2148 c
184.0576 27.9648 185.6924 31.0527 189.4043 34.0684 C
184.0205 32.0098 177.959 31.9043 172.1484 34.6055 c
172.043 34.6563 171.9844 34.7715 172.0059 34.8867 c
172.0293 35.002 172.1289 35.0859 172.2461 35.0898 c
177.125 35.2793 180.6631 36.8457 183.9795 40.1621 C
165.7227 35.0273 150.8906 46.3633 156.0234 63.2129 c
156.0586 63.3301 156.1699 63.4043 156.291 63.3926 c
156.4121 63.3809 156.5078 63.2852 156.5176 63.1641 c
157.4355 53.4492 164.2207 47.0469 174.3789 46.0879 C
168.9922 48.1465 163.3789 53.0625 162.8223 61.6211 c
162.8145 61.7441 162.8945 61.8535 163.0137 61.8848 c
163.1328 61.9141 163.2559 61.8535 163.3066 61.7422 c
166.1055 55.5879 171.6035 52.4785 177.4668 51.9297 C
171.1328 54.5117 167.0703 60.5332 165.8965 68.3516 c
165.877 68.4746 165.9512 68.5918 166.0703 68.6309 c
166.1875 68.668 166.3164 68.6152 166.373 68.5039 c
170.2383 60.9219 178.5293 55.7109 188.8203 59.6934 c
199.4375 63.8027 204.0938 76.0781 205.123 84.7324 c
205.1387 84.8555 205.2383 84.9492 205.3613 84.957 c
205.4844 84.9629 205.5938 84.8809 205.623 84.7617 c
209.3418 69.0723 202.0391 52.8125 188.9863 45.9219 C
196.082 47.9238 202.4258 52.1816 206.0137 59.2754 C
214.3066 60.293 220.0176 63.1387 222.8711 68.5156 c
222.9277 68.6211 223.0508 68.6738 223.166 68.6406 c
223.2813 68.6055 223.3574 68.4941 223.3477 68.375 c
223.166 66.2656 222.4063 62.0449 219.2734 60.1035 C
226.2383 60.1152 231.7793 59.2109 237.0723 57.0898 c
237.1836 57.0449 237.25 56.9277 237.2266 56.8086 c
f
207.7402 110.2773 m
207.8398 110.2129 207.9688 110.2227 208.0566 110.3047 c
208.1426 110.3848 208.1602 110.5137 208.1016 110.6172 c
206.4824 113.4141 207.9609 117.4297 211.1523 117.4297 c
216.873 117.4297 219.623 106.6602 218.748 96.8379 C
216.5859 102.5918 214.7148 104.8926 211.4004 107.6328 c
211.3066 107.709 211.1719 107.7109 211.0781 107.6328 c
210.9844 107.5566 210.957 107.4238 211.0156 107.3164 c
215.8711 98.2383 216.9121 91.252 216.9121 83.2324 C
215.4492 89.1895 213.7168 92.5527 208.7852 97.6133 c
208.6992 97.7012 208.5625 97.7148 208.4609 97.6445 c
208.3594 97.5742 208.3223 97.4414 208.373 97.3301 c
213.6719 85.7383 213.2676 72.8828 209.3203 63.0664 c
209.2813 62.9688 209.3066 62.8574 209.3828 62.7852 c
209.4609 62.7129 209.5723 62.6973 209.668 62.7422 c
214.873 65.293 217.9316 66.9688 222.4199 73.1328 C
221.0625 80.5313 222.1914 84.1797 225.5918 90.3262 C
221.6543 80.4102 223.75 66.4336 233.7793 60.7363 c
233.8887 60.6738 234.0273 60.7012 234.1035 60.8008 c
234.1816 60.9004 234.1758 61.041 234.0879 61.1328 c
230.3066 65.0879 227.5566 71.7676 229.9316 79.0586 C
228.4023 68.6699 237.5273 59.9453 247.7109 59.9453 c
257.3105 59.9453 263.8613 67.4531 263.3203 74.8848 c
262.7832 82.25 257.877 85.8555 253.6484 87.3828 c
253.5371 87.4238 253.4121 87.3809 253.3496 87.2813 c
253.2852 87.1816 253.2988 87.0508 253.3828 86.9668 c
258.9922 81.2734 259.7598 70.4746 249.7988 67.207 C
255.6582 72.2637 253.4883 84.0352 244.1094 84.9316 c
243.9922 84.9414 243.8828 84.8711 243.8457 84.7598 c
243.8066 84.6504 243.8496 84.5273 243.9492 84.4648 c
245.957 83.1855 247.627 80.6934 247.627 77.8906 c
247.627 73.2168 244.2051 71.3789 241.9512 71.3789 c
238.5293 71.3789 235.6914 74.6348 235.6914 79.5605 c
235.6914 85.4023 240.9512 90.2441 247.7109 90.9941 c
254.3379 91.7305 260.4941 88.8398 263.4609 84.5352 c
263.5313 84.4336 263.6621 84.3984 263.7754 84.4492 c
263.8867 84.5 263.9453 84.623 263.916 84.7422 c
260.8965 96.4453 247.1191 101.6191 237.0273 94.25 C
243.6406 101.75 254.0332 101.8555 262.75 94.1641 c
262.8398 94.084 262.9746 94.0781 263.0723 94.1523 c
263.168 94.2266 263.1992 94.3574 263.1445 94.4668 c
260.4785 99.873 253.8926 106.2852 244.5391 105.3516 c
235.9824 104.4961 231.0176 96.3359 230.0156 89.6602 C
229.459 98.1816 231.4102 104.1953 238.7695 109.8047 c
238.8672 109.8789 238.8965 110.0117 238.8418 110.1211 c
238.7871 110.2305 238.6621 110.2852 238.5449 110.25 c
231.7598 108.291 226.3145 104.8262 223.4961 97.707 C
223.4961 103.8672 225.6348 110.0781 231.0215 114.2168 c
231.1191 114.291 231.1484 114.4238 231.0938 114.5332 c
231.0391 114.6406 230.916 114.6953 230.7988 114.6621 c
227.3457 113.6797 224.627 112.1738 222.6602 109.4785 C
221.3496 120.5781 216.1387 127.168 210.1348 127.168 c
206.0098 127.168 202.9297 124.1348 202.9297 119.2988 c
202.9297 116.4688 204.418 112.4961 207.7402 110.2773 c
f
108.5137 18.6602 m
111.6758 14.7559 118.0527 13.2676 124.9453 14.6719 C
124.4355 10.3691 125.2793 5.88086 126.5566 3.18555 c
126.6094 3.07813 126.7305 3.01953 126.8477 3.04883 c
126.9648 3.07813 127.0449 3.18555 127.041 3.30664 c
126.666 12.0723 131.6641 19.1484 140.4902 22.2148 C
133.584 17.459 131.5645 8.02148 134.8516 3.15039 c
134.9199 3.05078 135.0469 3.01172 135.1582 3.05664 c
135.2695 3.10156 135.334 3.21875 135.3125 3.33789 c
134.9395 5.39844 135.918 8.02148 138.0254 10.0625 c
140.9316 12.877 144.875 13.5156 146.8359 11.4922 c
148.7969 9.4668 148.0332 5.54492 145.1289 2.73242 c
144.0684 1.70508 142.8691 0.96875 141.6797 0.546875 c
141.5664 0.505859 141.498 0.392578 141.5137 0.275391 c
141.5273 0.15625 141.623 0.064453 141.7422 0.054688 c
148.1309 -0.5 152.5117 3.30664 155.2578 7.93164 c
158.0527 12.6367 162.8281 16.3438 168.4688 15.6035 c
168.5879 15.5879 168.7012 15.6582 168.7422 15.7715 c
168.7813 15.8848 168.7363 16.0098 168.6328 16.0723 c
165.8359 17.7559 162.7617 18.4551 158.7695 17.125 C
164.5645 22.0332 172.8164 24.8652 180.6104 22.3516 c
180.7197 22.3164 180.8389 22.3594 180.9014 22.4551 c
180.9639 22.5508 180.9541 22.6777 180.876 22.7637 c
174.9668 29.3281 163.1855 29.459 155.7656 24.1348 C
158.8027 28.4512 162.834 31.6211 170.0586 32.6133 c
170.1738 32.6289 170.2637 32.7227 170.2773 32.8379 c
170.2891 32.9531 170.2227 33.0625 170.1133 33.1035 c
161.8223 36.1797 153.5137 33.0586 146.668 24.8867 C
149.6602 31.2656 154.5742 36.373 161.4355 38.9004 c
161.5508 38.9414 161.6191 39.0586 161.5977 39.1797 c
161.5781 39.3008 161.4746 39.3887 161.3535 39.3906 c
157.4102 39.4727 153.8672 38.5332 149.0879 35.8203 C
152.5957 41.5117 151.8281 51.459 146.7188 58.0801 c
146.6484 58.1719 146.5234 58.2031 146.416 58.1582 c
146.3105 58.1113 146.248 57.998 146.2676 57.8828 c
147.4473 50.6836 144.9688 42.5547 140.6582 38.2422 C
142.8105 45.873 140.6641 52.8184 134.7617 57.8848 c
134.6914 57.9453 134.5918 57.9629 134.5059 57.9297 c
134.418 57.8965 134.3574 57.8184 134.3438 57.7266 c
133.1094 48.3086 122.5742 38.752 113.7422 37.9512 c
113.6172 37.9395 113.5195 37.8398 113.5117 37.7148 c
113.5039 37.5898 113.5859 37.4785 113.709 37.4512 c
117.9883 36.4824 122.4004 36.9609 126.0977 38.4805 C
123.4375 35.5488 120.1582 33.3711 116.543 32.2363 c
116.4258 32.1992 116.3535 32.0859 116.3672 31.9648 c
116.3809 31.8438 116.4805 31.748 116.6016 31.7402 c
121.1113 31.4297 125.5254 32.7461 129.332 35.2793 C
124.9707 28.6582 118.3516 23.7344 109.9043 21.7715 c
109.7832 21.7441 109.7012 21.6328 109.707 21.5098 c
109.7148 21.3867 109.8105 21.2871 109.9336 21.2734 c
121.8516 19.9707 131.6797 24.5918 138.1543 33.1914 C
136.5059 28.2891 131.7891 23.4355 125.209 20.5723 c
119.3633 18.0273 113.3594 17.625 108.7871 19.0625 c
108.6816 19.0957 108.5645 19.0547 108.502 18.9629 c
108.4395 18.8691 108.4434 18.7461 108.5137 18.6602 c
f
161.418 94.2324 m
156.6113 83.7461 156.9531 75.5469 160.8242 65.1777 c
160.8691 65.0605 160.9902 64.9922 161.1133 65.0176 c
161.2363 65.043 161.3223 65.1543 161.3164 65.2773 c
160.6953 77.9004 164.1426 86.9316 171.6152 93.0859 C
163.3652 83.2324 167.2617 63.5254 180.4385 63.5254 c
190.0234 63.5254 197.9531 71.502 199.8926 81.0508 c
199.918 81.1719 199.8516 81.293 199.7344 81.3379 c
199.6191 81.3828 199.4883 81.3379 199.4258 81.2305 c
196.584 76.4688 192.0176 73.3789 186.9688 73.3789 c
178.834 73.3789 176.4277 79.8457 176.4277 84.3789 c
176.4277 90.5645 181.3545 95.7207 185.1357 95.7207 c
188.5723 95.7207 190.1758 92.8984 190.1758 90.7949 c
190.1758 86.8965 187.1777 83.6289 183.8018 82.6309 c
183.6807 82.5938 183.6045 82.4766 183.6221 82.3516 c
183.6396 82.2266 183.7451 82.1328 183.8721 82.1328 c
187.9766 82.1074 191.4473 83.9863 193.5 87.7012 C
193.7695 84.8262 193.7715 83.0156 192.8594 79.9766 c
192.8242 79.8594 192.877 79.7344 192.9844 79.6777 c
193.0938 79.623 193.2266 79.6504 193.3008 79.748 c
200.6582 89.1406 197.1367 105.3711 191.3223 112.1055 C
196.8535 108.123 201.7383 99.4707 201.6621 87.7109 c
201.6602 87.5898 201.7461 87.4844 201.8672 87.4609 c
201.9863 87.4375 202.1055 87.502 202.1504 87.6152 c
206.2598 97.8691 204.0801 116.8633 192.8691 127.4668 C
195.7539 127.8652 198.7363 127.8145 201.9941 126.7754 c
202.1094 126.7383 202.2344 126.7891 202.293 126.8945 c
202.3516 127 202.3281 127.1328 202.2344 127.2109 c
198.1426 130.666 192.4199 131.752 186.9688 131.752 C
191.666 126.252 190.1055 115.1992 182.6162 115.1992 c
177.2656 115.1992 174.8379 123.498 178.9668 127.9805 c
179.0449 128.0664 179.0547 128.1934 178.9922 128.291 c
178.9277 128.3887 178.8066 128.4297 178.6953 128.3926 c
173.916 126.7363 168.75 122.6035 168.75 117.375 c
168.75 112.334 173.5625 107.9805 180.5537 108.3242 C
171.7324 105.8203 162.5 108.5918 157.6699 114.5781 c
157.5957 114.6699 157.4648 114.6992 157.3594 114.6445 c
157.252 114.5918 157.1973 114.4707 157.2266 114.3535 c
160.0176 103.6387 169.1934 99.1543 180.667 100.6484 C
171.3848 96.8906 157.416 100.166 151.2422 107.957 c
151.1699 108.0488 151.043 108.0801 150.9355 108.0293 c
150.8301 107.9805 150.7715 107.8633 150.7949 107.748 c
152.166 101.1328 155.6582 96.1875 161.418 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.810819 0.225376 0.184237 0 0.258824 0.494118 Xa
 1 0.810819 0.225376 0.184237 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 74.9453 m
26.7178 75.0645 26.8213 75.1504 26.9424 75.1523 c
39.8486 75.2871 51.6963 78.4199 60.9141 86.667 C
52.8838 81.1094 37.9717 79.1563 29.3867 83.0488 c
29.2764 83.0986 29.2178 83.2188 29.2451 83.3369 c
29.2715 83.4551 29.3779 83.5371 29.499 83.5332 c
40.1787 83.2441 48.7783 86.54 55.4834 92.498 C
48.6143 92.9199 42.9092 97.2383 42.9268 102.3428 c
42.9268 102.4619 43.0107 102.5645 43.1279 102.5898 c
43.2441 102.6152 43.3623 102.5547 43.4111 102.4463 c
44.5322 99.957 48.1592 98.666 51.9941 99.5664 c
56.1738 100.5469 58.9941 103.7559 58.2949 106.7314 c
57.8232 108.7461 55.8584 110.1348 53.3428 110.5186 c
53.2158 110.5371 53.123 110.6484 53.126 110.7764 c
53.1299 110.9043 53.2285 111.0098 53.3564 111.0215 c
54.4248 111.124 55.5361 111.1279 56.6738 111.0195 c
63.1641 110.4023 68.1875 106.4238 68.623 101.8418 C
73.3359 102.3887 77.5078 104.998 79.002 108.6152 c
79.0469 108.7236 79.1621 108.7871 79.2773 108.7695 c
79.3926 108.75 79.4805 108.6553 79.4902 108.5391 c
79.8672 103.7871 78.2324 100.7002 74.5195 97.6846 C
79.9043 99.7441 85.9648 99.8496 91.7754 97.1465 c
91.8809 97.0977 91.9395 96.9824 91.918 96.8672 c
91.8945 96.752 91.7949 96.668 91.6777 96.6641 c
86.7988 96.4736 83.2617 94.9082 79.9473 91.5918 C
98.2012 96.7256 113.0332 85.3906 107.9004 68.5391 c
107.8652 68.4238 107.7539 68.3486 107.6328 68.3613 c
107.5117 68.373 107.416 68.4688 107.4063 68.5898 c
106.4883 78.3037 99.7031 84.7051 89.5449 85.666 C
94.9316 83.6055 100.5449 78.6895 101.1016 70.1318 c
101.1094 70.0098 101.0293 69.8984 100.9102 69.8691 c
100.791 69.8398 100.668 69.8984 100.6172 70.0098 c
97.8184 76.1641 92.3203 79.2754 86.457 79.8223 C
92.791 77.2422 96.8535 71.2207 98.0273 63.4023 c
98.0469 63.2793 97.9727 63.1602 97.8535 63.123 c
97.7363 63.084 97.6074 63.1387 97.5508 63.248 c
93.6855 70.8311 85.3945 76.042 75.1035 72.0605 c
64.4863 67.9512 59.8291 55.6738 58.7998 47.0195 c
58.7852 46.8984 58.6846 46.8047 58.5615 46.7969 c
58.4395 46.7891 58.3291 46.8711 58.3008 46.9922 c
54.5811 62.6797 61.8838 78.9414 74.9375 85.832 C
67.8418 83.8291 61.498 79.5723 57.9102 72.4775 C
49.6162 71.459 43.9063 68.6152 41.0527 63.2383 c
40.9961 63.1309 40.8721 63.0781 40.7568 63.1133 c
40.6416 63.1465 40.5654 63.2578 40.5752 63.3789 c
40.7578 65.4883 41.5166 69.709 44.6494 71.6494 C
37.6846 71.6387 32.1436 72.543 26.8506 74.6621 c
26.7393 74.708 26.6738 74.8262 26.6963 74.9453 c
f
56.1826 21.4746 m
56.084 21.541 55.9541 21.5293 55.8672 21.4492 c
55.7813 21.3672 55.7627 21.2383 55.8213 21.1367 c
57.4414 18.3398 55.9619 14.3223 52.7705 14.3223 c
47.0498 14.3223 44.2998 25.0918 45.1748 34.916 C
47.3379 29.1602 49.208 26.8613 52.5225 24.1211 c
52.6162 24.043 52.751 24.043 52.8447 24.1191 c
52.9385 24.1973 52.9658 24.3281 52.9082 24.4355 c
48.0518 33.5156 47.0107 40.502 47.0107 48.5215 C
48.4736 42.5625 50.2061 39.1992 55.1377 34.1406 c
55.2236 34.0527 55.3604 34.0391 55.4629 34.1074 c
55.5645 34.1777 55.6016 34.3105 55.5498 34.4238 c
50.252 46.0137 50.6563 58.8711 54.6025 68.6875 c
54.6416 68.7852 54.6172 68.8965 54.54 68.9688 c
54.4629 69.0391 54.3506 69.0566 54.2549 69.0098 c
49.0498 66.459 45.9912 64.7832 41.5029 58.6211 C
42.8604 51.2227 41.7314 47.5723 38.3311 41.4258 C
42.2686 51.3438 40.1729 65.3203 30.1436 71.0176 c
30.0342 71.0791 29.8955 71.0518 29.8193 70.9531 c
29.7412 70.8535 29.748 70.7119 29.835 70.6211 c
33.6162 66.666 36.3662 59.9863 33.9912 52.6934 C
35.5205 63.082 26.3955 71.8086 16.2119 71.8086 c
6.6123 71.8086 0.061523 64.2988 0.602539 56.8672 c
1.13965 49.502 6.0459 45.8984 10.2744 44.3691 c
10.3857 44.3301 10.5107 44.3711 10.5742 44.4707 c
10.6377 44.5723 10.624 44.7012 10.541 44.7871 c
4.93066 50.4785 4.16309 61.2793 14.124 64.5469 C
8.26465 59.4902 10.4346 47.7168 19.8135 46.8223 c
19.9307 46.8105 20.04 46.8809 20.0781 46.9922 c
20.1162 47.1035 20.0732 47.2266 19.9746 47.2891 c
17.9658 48.5664 16.2959 51.0605 16.2959 53.8633 c
16.2959 58.5371 19.7178 60.373 21.9717 60.373 c
25.3936 60.373 28.2314 57.1172 28.2314 52.1934 c
28.2314 46.3496 22.9717 41.5098 16.2119 40.7578 c
9.58594 40.0234 3.42969 42.9121 0.461914 47.2168 c
0.392578 47.3184 0.260742 47.3555 0.148438 47.3047 c
0.036133 47.2539 -0.022461 47.1289 0.007813 47.0098 c
3.02637 35.3066 16.8037 30.1328 26.8955 37.5039 C
20.2822 30.002 9.88965 29.8984 1.17383 37.5898 c
1.08301 37.6699 0.948242 37.6738 0.851563 37.5996 c
0.754883 37.5273 0.724609 37.3945 0.77832 37.2871 c
3.44531 31.8789 10.0313 25.4668 19.3838 26.4023 c
27.9404 27.2578 32.9053 35.416 33.9072 42.0938 C
34.4639 33.5723 32.5137 27.5566 25.1533 21.9473 c
25.0566 21.873 25.0264 21.7402 25.0811 21.6309 c
25.1357 21.5234 25.2607 21.4688 25.3779 21.502 c
32.1631 23.4629 37.6084 26.9277 40.4268 34.0469 C
40.4268 27.8848 38.2881 21.6738 32.9014 17.5352 c
32.8037 17.4609 32.7744 17.3301 32.8291 17.2207 c
32.8838 17.1113 33.0078 17.0566 33.125 17.0898 c
36.5781 18.0742 39.2959 19.5781 41.2627 22.2754 C
42.5732 11.1758 47.7842 4.58398 53.7881 4.58398 c
57.9131 4.58398 60.9932 7.61719 60.9932 12.4551 c
60.9932 15.2852 59.5049 19.2578 56.1826 21.4746 c
f
155.4102 113.0938 m
152.248 116.998 145.8711 118.4863 138.9785 117.082 C
139.4883 121.3828 138.6445 125.873 137.3672 128.5664 c
137.3145 128.6758 137.1934 128.7334 137.0762 128.7051 c
136.959 128.6758 136.8789 128.5684 136.8828 128.4473 c
137.2578 119.6807 132.2598 112.6035 123.4336 109.5371 C
130.3398 114.293 132.3594 123.7305 129.0723 128.6035 c
129.0039 128.7021 128.877 128.7412 128.7656 128.6953 c
128.6543 128.6504 128.5898 128.5332 128.6113 128.416 c
128.9844 126.3555 128.0059 123.7314 125.8984 121.6895 c
122.9922 118.875 119.0488 118.2363 117.0879 120.2598 c
115.127 122.2852 115.8906 126.207 118.7949 129.0215 c
119.8555 130.0488 121.0547 130.7832 122.2441 131.2061 c
122.3574 131.2461 122.4258 131.3594 122.4102 131.4775 c
122.3965 131.5967 122.3008 131.6885 122.1816 131.6982 c
115.793 132.2529 111.4121 128.4463 108.666 123.8203 c
105.8711 119.1152 101.0957 115.4102 95.4551 116.1504 c
95.3359 116.166 95.2227 116.0957 95.1816 115.9824 c
95.1426 115.8691 95.1875 115.7422 95.291 115.6807 c
98.0879 113.9961 101.1621 113.2969 105.1543 114.6289 C
99.3594 109.7197 91.1074 106.8867 83.3145 109.4014 c
83.2051 109.4375 83.0859 109.3945 83.0234 109.2979 c
82.9609 109.2012 82.9727 109.0752 83.0488 108.9902 c
88.957 102.4258 100.7383 102.2949 108.1582 107.6172 C
105.1211 103.3008 101.0898 100.1328 93.8652 99.1387 c
93.75 99.123 93.6602 99.0313 93.6465 98.916 c
93.6348 98.7998 93.7012 98.6904 93.8105 98.6504 c
102.1016 95.5723 110.4102 98.6953 117.2559 106.8652 C
114.2637 100.4883 109.3496 95.3809 102.4883 92.8535 c
102.373 92.8115 102.3047 92.6934 102.3262 92.5742 c
102.3457 92.4531 102.4492 92.3643 102.5703 92.3613 c
106.5137 92.2803 110.0566 93.2188 114.8359 95.9316 C
111.3281 90.2422 112.0957 80.293 117.2051 73.6738 c
117.2754 73.582 117.4004 73.5498 117.5078 73.5957 c
117.6133 73.6426 117.6758 73.7549 117.6563 73.8691 c
116.4766 81.0703 118.9551 89.1992 123.2656 93.5117 C
121.1133 85.8799 123.2598 78.9355 129.1621 73.8672 c
129.2324 73.8066 129.332 73.79 129.418 73.8232 c
129.5059 73.8564 129.5664 73.9355 129.5801 74.0273 c
130.8145 83.4453 141.3496 93.002 150.1816 93.8027 c
150.3066 93.8135 150.4043 93.9141 150.4121 94.0381 c
150.4199 94.1621 150.3379 94.2754 150.2148 94.3027 c
145.9355 95.2715 141.5234 94.793 137.8262 93.2715 C
140.4863 96.2051 143.7656 98.3828 147.3809 99.5176 c
147.498 99.5537 147.5703 99.668 147.5566 99.7891 c
147.543 99.9102 147.4434 100.0039 147.3223 100.0127 c
142.8125 100.3242 138.3984 99.0068 134.5918 96.4746 C
138.9531 103.0957 145.5723 108.0195 154.0195 109.9805 c
154.1406 110.0088 154.2227 110.1191 154.2168 110.2432 c
154.209 110.3672 154.1133 110.4668 153.9902 110.4805 c
142.0723 111.7822 132.2441 107.1621 125.7695 98.5625 C
127.418 103.4629 132.1348 108.3184 138.7148 111.1816 c
144.5605 113.7266 150.5645 114.1279 155.1367 112.6914 c
155.2422 112.6582 155.3594 112.6982 155.4219 112.791 c
155.4844 112.8828 155.4805 113.0059 155.4102 113.0938 c
f
102.5059 37.5215 m
107.3125 48.0078 106.9707 56.207 103.0996 66.5762 c
103.0547 66.6934 102.9336 66.7607 102.8105 66.7363 c
102.6875 66.7109 102.6016 66.5996 102.6074 66.4746 c
103.2285 53.8535 99.7813 44.8203 92.3086 38.668 C
100.5586 48.5195 96.6621 68.2275 83.4863 68.2275 c
73.9004 68.2275 65.9697 60.252 64.0303 50.7031 c
64.0059 50.582 64.0723 50.459 64.1885 50.416 c
64.3037 50.3711 64.4346 50.416 64.4971 50.5215 c
67.3398 55.2832 71.9063 58.373 76.9551 58.373 c
85.0898 58.373 87.4961 51.9063 87.4961 47.375 c
87.4961 41.1875 82.5703 36.0313 78.7891 36.0313 c
75.3516 36.0313 73.748 38.8555 73.748 40.959 c
73.748 44.8574 76.7461 48.125 80.125 49.123 c
80.2441 49.1582 80.3223 49.2773 80.3047 49.4023 c
80.2852 49.5273 80.1797 49.6191 80.0547 49.6211 c
75.9473 49.6465 72.4766 47.7656 70.4238 44.0527 C
70.1543 46.9277 70.1514 48.7383 71.0645 51.7754 c
71.0996 51.8926 71.0459 52.0176 70.9385 52.0742 c
70.8291 52.1309 70.6963 52.1016 70.6221 52.0059 c
63.2656 42.6133 66.7861 26.3809 72.6016 19.6484 C
67.0693 23.6309 62.1846 32.2813 62.2617 44.041 c
62.2627 44.1641 62.1768 44.2676 62.0566 44.291 c
61.9365 44.3164 61.8174 44.25 61.7725 44.1367 c
57.6641 33.8848 59.8438 14.8887 71.0537 4.28516 C
68.1699 3.88867 65.1865 3.93945 61.9287 4.97852 c
61.8135 5.01367 61.6885 4.96484 61.6299 4.85938 c
61.5713 4.75195 61.5947 4.61914 61.6885 4.54102 c
65.7803 1.08594 71.5029 0 76.9551 0 C
72.2578 5.5 73.8184 16.5547 81.3105 16.5547 c
86.6582 16.5547 89.0859 8.25586 84.957 3.77344 c
84.8789 3.6875 84.8691 3.55859 84.9316 3.46289 c
84.9961 3.36523 85.1172 3.32227 85.2285 3.36133 c
90.0078 5.01563 95.1738 9.15039 95.1738 14.377 c
95.1738 19.4199 90.3613 23.7715 83.373 23.4277 C
92.1914 25.9336 101.4238 23.1602 106.2539 17.1758 c
106.3281 17.082 106.459 17.0547 106.5645 17.1074 c
106.6719 17.1621 106.7266 17.2832 106.6973 17.3984 c
103.9063 28.1152 94.7305 32.5977 83.2578 31.1055 C
92.5391 34.8613 106.5078 31.5859 112.6816 23.7949 c
112.7539 23.7031 112.8809 23.6738 112.9883 23.7227 c
113.0938 23.7734 113.1523 23.8906 113.1289 24.0039 c
111.7578 30.6191 108.2656 35.5664 102.5059 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.421485 0 0.046937 0 0.615686 0.862745 0.976471 Xa
 0.421485 0 0.046937 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8887 56.8086 m
128.8672 56.6895 128.7637 56.6016 128.6426 56.6016 c
115.7363 56.4648 103.8887 53.334 94.6719 45.0859 C
102.7012 50.6445 117.6133 52.5957 126.1992 48.7051 c
126.3086 48.6543 126.3672 48.5332 126.3398 48.416 c
126.3145 48.2988 126.207 48.2168 126.0859 48.2188 c
115.4063 48.5098 106.8066 45.2129 100.1016 39.2559 C
106.9707 38.832 112.6758 34.5156 112.6582 29.4102 c
112.6582 29.291 112.5742 29.1875 112.457 29.1621 c
112.3418 29.1387 112.2227 29.1973 112.1738 29.3066 c
111.0527 31.7949 107.4258 33.0879 103.5918 32.1875 c
99.4121 31.2051 96.5918 27.998 97.291 25.0215 c
97.7617 23.0078 99.7266 21.6191 102.2422 21.2344 c
102.3691 21.2148 102.4629 21.1055 102.459 20.9766 c
102.4551 20.8496 102.3574 20.7441 102.2285 20.7305 c
101.1602 20.6289 100.0488 20.625 98.9121 20.7344 c
92.4219 21.3516 87.3984 25.3281 86.9629 29.9121 C
82.25 29.3652 78.0781 26.7539 76.584 23.1387 c
76.5391 23.0293 76.4258 22.9668 76.3086 22.9844 c
76.1934 23.002 76.1055 23.0977 76.0957 23.2148 c
75.7188 27.9648 77.3535 31.0527 81.0664 34.0684 C
75.6816 32.0098 69.6201 31.9043 63.8096 34.6055 c
63.7041 34.6563 63.6455 34.7715 63.667 34.8867 c
63.6904 35.002 63.79 35.0859 63.9072 35.0898 c
68.7861 35.2793 72.3242 36.8457 75.6406 40.1621 C
57.3838 35.0273 42.5518 46.3633 47.6846 63.2129 c
47.7197 63.3301 47.8311 63.4043 47.9521 63.3926 c
48.0732 63.3809 48.1689 63.2852 48.1787 63.1641 c
49.0967 53.4492 55.8818 47.0469 66.04 46.0879 C
60.6533 48.1465 55.04 53.0625 54.4834 61.6211 c
54.4756 61.7441 54.5557 61.8535 54.6748 61.8848 c
54.7939 61.9141 54.917 61.8535 54.9678 61.7422 c
57.7666 55.5879 63.2646 52.4785 69.1279 51.9297 C
62.7939 54.5117 58.7314 60.5332 57.5576 68.3516 c
57.5381 68.4746 57.6123 68.5918 57.7314 68.6309 c
57.8486 68.668 57.9775 68.6152 58.0342 68.5039 c
61.8994 60.9219 70.1904 55.7109 80.4824 59.6934 c
91.0996 63.8027 95.7559 76.0781 96.7852 84.7324 c
96.8008 84.8555 96.9004 84.9492 97.0234 84.957 c
97.1465 84.9629 97.2559 84.8809 97.2852 84.7617 c
101.0039 69.0723 93.7012 52.8125 80.6484 45.9219 C
87.7441 47.9238 94.0879 52.1816 97.6758 59.2754 C
105.9688 60.293 111.6797 63.1387 114.5332 68.5156 c
114.5898 68.6211 114.7129 68.6738 114.8281 68.6406 c
114.9434 68.6055 115.0195 68.4941 115.0098 68.375 c
114.8281 66.2656 114.0684 62.0449 110.9355 60.1035 C
117.9004 60.1152 123.4414 59.2109 128.7344 57.0898 c
128.8457 57.0449 128.9121 56.9277 128.8887 56.8086 c
f
99.4023 110.2773 m
99.502 110.2129 99.6309 110.2227 99.7188 110.3047 c
99.8047 110.3848 99.8223 110.5137 99.7637 110.6172 c
98.1445 113.4141 99.623 117.4297 102.8145 117.4297 c
108.5352 117.4297 111.2852 106.6602 110.4102 96.8379 C
108.248 102.5918 106.377 104.8926 103.0625 107.6328 c
102.9688 107.709 102.834 107.7109 102.7402 107.6328 c
102.6465 107.5566 102.6191 107.4238 102.6777 107.3164 c
107.5332 98.2383 108.5742 91.252 108.5742 83.2324 C
107.1113 89.1895 105.3789 92.5527 100.4473 97.6133 c
100.3613 97.7012 100.2246 97.7148 100.123 97.6445 c
100.0215 97.5742 99.9844 97.4414 100.0352 97.3301 c
105.334 85.7383 104.9297 72.8828 100.9824 63.0664 c
100.9434 62.9688 100.9688 62.8574 101.0449 62.7852 c
101.123 62.7129 101.2344 62.6973 101.3301 62.7422 c
106.5352 65.293 109.5938 66.9688 114.082 73.1328 C
112.7246 80.5313 113.8535 84.1797 117.2539 90.3262 C
113.3164 80.4102 115.4121 66.4336 125.4414 60.7363 c
125.5508 60.6738 125.6895 60.7012 125.7656 60.8008 c
125.8438 60.9004 125.8379 61.041 125.75 61.1328 c
121.9688 65.0879 119.2188 71.7676 121.5938 79.0586 C
120.0645 68.6699 129.1895 59.9453 139.373 59.9453 c
148.9727 59.9453 155.5234 67.4531 154.9824 74.8848 c
154.4453 82.25 149.5391 85.8555 145.3105 87.3828 c
145.1992 87.4238 145.0742 87.3809 145.0117 87.2813 c
144.9473 87.1816 144.9609 87.0508 145.0449 86.9668 c
150.6543 81.2734 151.4219 70.4746 141.4609 67.207 C
147.3203 72.2637 145.1504 84.0352 135.7715 84.9316 c
135.6543 84.9414 135.5449 84.8711 135.5078 84.7598 c
135.4688 84.6504 135.5117 84.5273 135.6113 84.4648 c
137.6191 83.1855 139.2891 80.6934 139.2891 77.8906 c
139.2891 73.2168 135.8672 71.3789 133.6133 71.3789 c
130.1914 71.3789 127.3535 74.6348 127.3535 79.5605 c
127.3535 85.4023 132.6133 90.2441 139.373 90.9941 c
146 91.7305 152.1563 88.8398 155.123 84.5352 c
155.1934 84.4336 155.3242 84.3984 155.4375 84.4492 c
155.5488 84.5 155.6074 84.623 155.5781 84.7422 c
152.5586 96.4453 138.7813 101.6191 128.6895 94.25 C
135.3027 101.75 145.6953 101.8555 154.4121 94.1641 c
154.502 94.084 154.6367 94.0781 154.7344 94.1523 c
154.8301 94.2266 154.8613 94.3574 154.8066 94.4668 c
152.1406 99.873 145.5547 106.2852 136.2012 105.3516 c
127.6445 104.4961 122.6797 96.3359 121.6777 89.6602 C
121.1211 98.1816 123.0723 104.1953 130.4316 109.8047 c
130.5293 109.8789 130.5586 110.0117 130.5039 110.1211 c
130.4492 110.2305 130.3242 110.2852 130.207 110.25 c
123.4219 108.291 117.9766 104.8262 115.1582 97.707 C
115.1582 103.8672 117.2969 110.0781 122.6836 114.2168 c
122.7813 114.291 122.8105 114.4238 122.7559 114.5332 c
122.7012 114.6406 122.5781 114.6953 122.4609 114.6621 c
119.0078 113.6797 116.2891 112.1738 114.3223 109.4785 C
113.0117 120.5781 107.8008 127.168 101.7969 127.168 c
97.6719 127.168 94.5918 124.1348 94.5918 119.2988 c
94.5918 116.4688 96.0801 112.4961 99.4023 110.2773 c
f
0.174805 18.6602 m
3.33691 14.7559 9.71387 13.2676 16.6064 14.6719 C
16.0967 10.3691 16.9404 5.88086 18.2178 3.18555 c
18.2705 3.07813 18.3916 3.01953 18.5088 3.04883 c
18.626 3.07813 18.7061 3.18555 18.7021 3.30664 c
18.3271 12.0723 23.3252 19.1484 32.1514 22.2148 C
25.2451 17.459 23.2256 8.02148 26.5127 3.15039 c
26.5811 3.05078 26.708 3.01172 26.8193 3.05664 c
26.9307 3.10156 26.9951 3.21875 26.9736 3.33789 c
26.6006 5.39844 27.5791 8.02148 29.6865 10.0625 c
32.5928 12.877 36.5361 13.5156 38.4971 11.4922 c
40.458 9.4668 39.6943 5.54492 36.79 2.73242 c
35.7295 1.70508 34.5303 0.96875 33.3408 0.546875 c
33.2275 0.505859 33.1592 0.392578 33.1748 0.275391 c
33.1885 0.15625 33.2842 0.064453 33.4033 0.054688 c
39.792 -0.5 44.1729 3.30664 46.9189 7.93164 c
49.7139 12.6367 54.4893 16.3438 60.1299 15.6035 c
60.249 15.5879 60.3623 15.6582 60.4033 15.7715 c
60.4424 15.8848 60.3975 16.0098 60.2939 16.0723 c
57.4971 17.7559 54.4229 18.4551 50.4307 17.125 C
56.2256 22.0332 64.4775 24.8652 72.2715 22.3516 c
72.3809 22.3164 72.5 22.3594 72.5625 22.4551 c
72.625 22.5508 72.6152 22.6777 72.5371 22.7637 c
66.6279 29.3281 54.8467 29.459 47.4268 24.1348 C
50.4639 28.4512 54.4951 31.6211 61.7197 32.6133 c
61.835 32.6289 61.9248 32.7227 61.9385 32.8379 c
61.9502 32.9531 61.8838 33.0625 61.7744 33.1035 c
53.4834 36.1797 45.1748 33.0586 38.3291 24.8867 C
41.3213 31.2656 46.2354 36.373 53.0967 38.9004 c
53.2119 38.9414 53.2803 39.0586 53.2588 39.1797 c
53.2393 39.3008 53.1357 39.3887 53.0146 39.3906 c
49.0713 39.4727 45.5283 38.5332 40.749 35.8203 C
44.2568 41.5117 43.4893 51.459 38.3799 58.0801 c
38.3096 58.1719 38.1846 58.2031 38.0771 58.1582 c
37.9717 58.1113 37.9092 57.998 37.9287 57.8828 c
39.1084 50.6836 36.6299 42.5547 32.3193 38.2422 C
34.4717 45.873 32.3252 52.8184 26.4229 57.8848 c
26.3525 57.9453 26.2529 57.9629 26.167 57.9297 c
26.0791 57.8965 26.0186 57.8184 26.0049 57.7266 c
24.7705 48.3086 14.2354 38.752 5.40332 37.9512 c
5.27832 37.9395 5.18066 37.8398 5.17285 37.7148 c
5.16504 37.5898 5.24707 37.4785 5.37012 37.4512 c
9.64941 36.4824 14.0615 36.9609 17.7588 38.4805 C
15.0986 35.5488 11.8193 33.3711 8.2041 32.2363 c
8.08691 32.1992 8.01465 32.0859 8.02832 31.9648 c
8.04199 31.8438 8.1416 31.748 8.2627 31.7402 c
12.7725 31.4297 17.1865 32.7461 20.9932 35.2793 C
16.6318 28.6582 10.0127 23.7344 1.56543 21.7715 c
1.44434 21.7441 1.3623 21.6328 1.36816 21.5098 c
1.37598 21.3867 1.47168 21.2871 1.59473 21.2734 c
13.5127 19.9707 23.3408 24.5918 29.8154 33.1914 C
28.167 28.2891 23.4502 23.4355 16.8701 20.5723 c
11.0244 18.0273 5.02051 17.625 0.448242 19.0625 c
0.342773 19.0957 0.225586 19.0547 0.163086 18.9629 c
0.100586 18.8691 0.104492 18.7461 0.174805 18.6602 c
f
53.0791 94.2324 m
48.2725 83.7461 48.6143 75.5469 52.4854 65.1777 c
52.5303 65.0605 52.6514 64.9922 52.7744 65.0176 c
52.8975 65.043 52.9834 65.1543 52.9775 65.2773 c
52.3564 77.9004 55.8037 86.9316 63.2764 93.0859 C
55.0264 83.2324 58.9229 63.5254 72.0996 63.5254 c
81.6855 63.5254 89.6152 71.502 91.5547 81.0508 c
91.5801 81.1719 91.5137 81.293 91.3965 81.3379 c
91.2813 81.3828 91.1504 81.3379 91.0879 81.2305 c
88.2461 76.4688 83.6797 73.3789 78.6309 73.3789 c
70.4951 73.3789 68.0889 79.8457 68.0889 84.3789 c
68.0889 90.5645 73.0156 95.7207 76.7969 95.7207 c
80.2344 95.7207 81.8379 92.8984 81.8379 90.7949 c
81.8379 86.8965 78.8398 83.6289 75.4629 82.6309 c
75.3418 82.5938 75.2656 82.4766 75.2832 82.3516 c
75.3008 82.2266 75.4063 82.1328 75.5332 82.1328 c
79.6387 82.1074 83.1094 83.9863 85.1621 87.7012 C
85.4316 84.8262 85.4336 83.0156 84.5215 79.9766 c
84.4863 79.8594 84.5391 79.7344 84.6465 79.6777 c
84.7559 79.623 84.8887 79.6504 84.9629 79.748 c
92.3203 89.1406 88.7988 105.3711 82.9844 112.1055 C
88.5156 108.123 93.4004 99.4707 93.3242 87.7109 c
93.3223 87.5898 93.4082 87.4844 93.5293 87.4609 c
93.6484 87.4375 93.7676 87.502 93.8125 87.6152 c
97.9219 97.8691 95.7422 116.8633 84.5313 127.4668 C
87.416 127.8652 90.3984 127.8145 93.6563 126.7754 c
93.7715 126.7383 93.8965 126.7891 93.9551 126.8945 c
94.0137 127 93.9902 127.1328 93.8965 127.2109 c
89.8047 130.666 84.082 131.752 78.6309 131.752 C
83.3281 126.252 81.7676 115.1992 74.2773 115.1992 c
68.9268 115.1992 66.499 123.498 70.6279 127.9805 c
70.7061 128.0664 70.7158 128.1934 70.6533 128.291 c
70.5889 128.3887 70.4678 128.4297 70.3564 128.3926 c
65.5771 126.7363 60.4111 122.6035 60.4111 117.375 c
60.4111 112.334 65.2236 107.9805 72.2148 108.3242 C
63.3936 105.8203 54.1611 108.5918 49.3311 114.5781 c
49.2568 114.6699 49.126 114.6992 49.0205 114.6445 c
48.9131 114.5918 48.8584 114.4707 48.8877 114.3535 c
51.6787 103.6387 60.8545 99.1543 72.3281 100.6484 C
63.0459 96.8906 49.0771 100.166 42.9033 107.957 c
42.8311 108.0488 42.7041 108.0801 42.5967 108.0293 c
42.4912 107.9805 42.4326 107.8633 42.4561 107.748 c
43.8271 101.1328 47.3193 96.1875 53.0791 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.810819 0.225376 0.184237 0 0.258824 0.494118 Xa
 1 0.810819 0.225376 0.184237 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0352 184.5869 m
135.0566 184.7061 135.1602 184.792 135.2813 184.7939 c
148.1875 184.9287 160.0352 188.0615 169.2529 196.3086 C
161.2227 190.751 146.3105 188.7979 137.7256 192.6904 c
137.6152 192.7402 137.5566 192.8604 137.584 192.9785 c
137.6104 193.0967 137.7168 193.1787 137.8379 193.1748 c
148.5176 192.8857 157.1172 196.1816 163.8223 202.1396 C
156.9531 202.5615 151.248 206.8799 151.2656 211.9844 c
151.2656 212.1035 151.3496 212.2061 151.4668 212.2314 c
151.583 212.2568 151.7012 212.1963 151.75 212.0879 c
152.8711 209.5986 156.498 208.3076 160.333 209.208 c
164.5127 210.1885 167.333 213.3975 166.6338 216.373 c
166.1621 218.3877 164.1973 219.7764 161.6816 220.1602 c
161.5547 220.1787 161.4619 220.29 161.4648 220.418 c
161.4688 220.5459 161.5674 220.6514 161.6953 220.6631 c
162.7637 220.7656 163.875 220.7695 165.0127 220.6611 c
171.5029 220.0439 176.5264 216.0654 176.9619 211.4834 C
181.6748 212.0303 185.8457 214.6396 187.3398 218.2568 c
187.3848 218.3652 187.5 218.4287 187.6152 218.4111 c
187.7305 218.3916 187.8184 218.2969 187.8281 218.1807 c
188.2051 213.4287 186.5703 210.3418 182.8584 207.3262 C
188.2422 209.3857 194.3027 209.4912 200.1133 206.7881 c
200.2188 206.7393 200.2773 206.624 200.2559 206.5088 c
200.2324 206.3936 200.1328 206.3096 200.0156 206.3057 c
195.1367 206.1152 191.5996 204.5498 188.2852 201.2334 C
206.5391 206.3672 221.3711 195.0322 216.2383 178.1807 c
216.2031 178.0654 216.0918 177.9902 215.9707 178.0029 c
215.8496 178.0146 215.7539 178.1104 215.7441 178.2314 c
214.8262 187.9453 208.041 194.3467 197.8828 195.3076 C
203.2695 193.2471 208.8828 188.3311 209.4395 179.7734 c
209.4473 179.6514 209.3672 179.54 209.248 179.5107 c
209.1289 179.4814 209.0059 179.54 208.9551 179.6514 c
206.1563 185.8057 200.6582 188.917 194.7949 189.4639 C
201.1289 186.8838 205.1914 180.8623 206.3652 173.0439 c
206.3848 172.9209 206.3105 172.8018 206.1914 172.7646 c
206.0742 172.7256 205.9453 172.7803 205.8887 172.8896 c
202.0234 180.4727 193.7324 185.6836 183.4424 181.7021 c
172.8252 177.5928 168.168 165.3154 167.1387 156.6611 c
167.124 156.54 167.0234 156.4463 166.9004 156.4385 c
166.7783 156.4307 166.668 156.5127 166.6396 156.6338 c
162.9199 172.3213 170.2227 188.583 183.2764 195.4736 C
176.1807 193.4707 169.8369 189.2139 166.249 182.1191 C
157.9551 181.1006 152.2451 178.2568 149.3916 172.8799 c
149.335 172.7725 149.2109 172.7197 149.0957 172.7549 c
148.9805 172.7881 148.9043 172.8994 148.9141 173.0205 c
149.0967 175.1299 149.8555 179.3506 152.9883 181.291 C
146.0234 181.2803 140.4824 182.1846 135.1895 184.3037 c
135.0781 184.3496 135.0127 184.4678 135.0352 184.5869 c
f
164.5215 131.1162 m
164.4229 131.1826 164.293 131.1709 164.2061 131.0908 c
164.1201 131.0088 164.1016 130.8799 164.1602 130.7783 c
165.7803 127.9814 164.3008 123.9639 161.1094 123.9639 c
155.3887 123.9639 152.6387 134.7334 153.5137 144.5576 C
155.6768 138.8018 157.5469 136.5029 160.8613 133.7627 c
160.9551 133.6846 161.0898 133.6846 161.1836 133.7607 c
161.2773 133.8389 161.3047 133.9697 161.2471 134.0771 c
156.3906 143.1572 155.3496 150.1436 155.3496 158.1631 C
156.8125 152.2041 158.5449 148.8408 163.4766 143.7822 c
163.5625 143.6943 163.6992 143.6807 163.8018 143.749 c
163.9033 143.8193 163.9404 143.9521 163.8887 144.0654 c
158.5908 155.6553 158.9951 168.5127 162.9414 178.3291 c
162.9805 178.4268 162.9561 178.5381 162.8789 178.6104 c
162.8018 178.6807 162.6895 178.6982 162.5938 178.6514 c
157.3887 176.1006 154.3301 174.4248 149.8418 168.2627 C
151.1992 160.8643 150.0703 157.2139 146.6699 151.0674 C
150.6074 160.9854 148.5117 174.9619 138.4824 180.6592 c
138.373 180.7207 138.2344 180.6934 138.1582 180.5947 c
138.0801 180.4951 138.0869 180.3535 138.1738 180.2627 c
141.9551 176.3076 144.7051 169.6279 142.3301 162.335 C
143.8594 172.7236 134.7344 181.4502 124.5508 181.4502 c
114.9512 181.4502 108.4004 173.9404 108.9414 166.5088 c
109.4785 159.1436 114.3848 155.54 118.6133 154.0107 c
118.7246 153.9717 118.8496 154.0127 118.9131 154.1123 c
118.9766 154.2139 118.9629 154.3428 118.8799 154.4287 c
113.2695 160.1201 112.502 170.9209 122.4629 174.1885 C
116.6035 169.1318 118.7734 157.3584 128.1523 156.4639 c
128.2695 156.4521 128.3789 156.5225 128.417 156.6338 c
128.4551 156.7451 128.4121 156.8682 128.3135 156.9307 c
126.3047 158.208 124.6348 160.7021 124.6348 163.5049 c
124.6348 168.1787 128.0566 170.0146 130.3105 170.0146 c
133.7324 170.0146 136.5703 166.7588 136.5703 161.835 c
136.5703 155.9912 131.3105 151.1514 124.5508 150.3994 c
117.9248 149.665 111.7686 152.5537 108.8008 156.8584 c
108.7314 156.96 108.5996 156.9971 108.4873 156.9463 c
108.375 156.8955 108.3164 156.7705 108.3467 156.6514 c
111.3652 144.9482 125.1426 139.7744 135.2344 147.1455 C
128.6211 139.6436 118.2285 139.54 109.5127 147.2314 c
109.4219 147.3115 109.2871 147.3154 109.1904 147.2412 c
109.0938 147.1689 109.0635 147.0361 109.1172 146.9287 c
111.7842 141.5205 118.3701 135.1084 127.7227 136.0439 c
136.2793 136.8994 141.2441 145.0576 142.2461 151.7354 C
142.8027 143.2139 140.8525 137.1982 133.4922 131.5889 c
133.3955 131.5146 133.3652 131.3818 133.4199 131.2725 c
133.4746 131.165 133.5996 131.1104 133.7168 131.1436 c
140.502 133.1045 145.9473 136.5693 148.7656 143.6885 C
148.7656 137.5264 146.627 131.3154 141.2402 127.1768 c
141.1426 127.1025 141.1133 126.9717 141.168 126.8623 c
141.2227 126.7529 141.3467 126.6982 141.4639 126.7314 c
144.917 127.7158 147.6348 129.2197 149.6016 131.917 C
150.9121 120.8174 156.123 114.2256 162.127 114.2256 c
166.252 114.2256 169.332 117.2588 169.332 122.0967 c
169.332 124.9268 167.8438 128.8994 164.5215 131.1162 c
f
263.748 222.7354 m
260.5859 226.6396 254.209 228.1279 247.3164 226.7236 C
247.8262 231.0244 246.9824 235.5146 245.7051 238.208 c
245.6523 238.3174 245.5313 238.375 245.4141 238.3467 c
245.2969 238.3174 245.2168 238.21 245.2207 238.0889 c
245.5957 229.3223 240.5977 222.2451 231.7715 219.1787 C
238.6777 223.9346 240.6973 233.3721 237.4102 238.2451 c
237.3418 238.3438 237.2148 238.3828 237.1035 238.3369 c
236.9922 238.292 236.9277 238.1748 236.9492 238.0576 c
237.3223 235.9971 236.3438 233.373 234.2363 231.3311 c
231.3301 228.5166 227.3867 227.8779 225.4258 229.9014 c
223.4648 231.9268 224.2285 235.8486 227.1328 238.6631 c
228.1934 239.6904 229.3926 240.4248 230.582 240.8477 c
230.6953 240.8877 230.7637 241.001 230.748 241.1191 c
230.7344 241.2383 230.6387 241.3301 230.5195 241.3398 c
224.1309 241.8945 219.75 238.0879 217.0039 233.4619 c
214.209 228.7568 209.4336 225.0518 203.793 225.792 c
203.6738 225.8076 203.5605 225.7373 203.5195 225.624 c
203.4805 225.5107 203.5254 225.3838 203.6289 225.3223 c
206.4258 223.6377 209.5 222.9385 213.4922 224.2705 C
207.6973 219.3613 199.4453 216.5283 191.6523 219.043 c
191.543 219.0791 191.4238 219.0361 191.3613 218.9395 c
191.2988 218.8428 191.3105 218.7168 191.3867 218.6318 c
197.2949 212.0674 209.0762 211.9365 216.4961 217.2588 C
213.459 212.9424 209.4277 209.7744 202.2031 208.7803 c
202.0879 208.7646 201.998 208.6729 201.9844 208.5576 c
201.9727 208.4414 202.0391 208.332 202.1484 208.292 c
210.4395 205.2139 218.748 208.3369 225.5938 216.5068 C
222.6016 210.1299 217.6875 205.0225 210.8262 202.4951 c
210.7109 202.4531 210.6426 202.335 210.6641 202.2158 c
210.6836 202.0947 210.7871 202.0059 210.9082 202.0029 c
214.8516 201.9219 218.3945 202.8604 223.1738 205.5732 C
219.666 199.8838 220.4336 189.9346 225.543 183.3154 c
225.6133 183.2236 225.7383 183.1914 225.8457 183.2373 c
225.9512 183.2842 226.0137 183.3965 225.9941 183.5107 c
224.8145 190.7119 227.293 198.8408 231.6035 203.1533 C
229.4512 195.5215 231.5977 188.5771 237.5 183.5088 c
237.5703 183.4482 237.6699 183.4316 237.7559 183.4648 c
237.8438 183.498 237.9043 183.5771 237.918 183.6689 c
239.1523 193.0869 249.6875 202.6436 258.5195 203.4443 c
258.6445 203.4551 258.7422 203.5557 258.75 203.6797 c
258.7578 203.8037 258.6758 203.917 258.5527 203.9443 c
254.2734 204.9131 249.8613 204.4346 246.1641 202.9131 C
248.8242 205.8467 252.1035 208.0244 255.7188 209.1592 c
255.8359 209.1953 255.9082 209.3096 255.8945 209.4307 c
255.8809 209.5518 255.7813 209.6455 255.6602 209.6543 c
251.1504 209.9658 246.7363 208.6484 242.9297 206.1162 C
247.291 212.7373 253.9102 217.6611 262.3574 219.6221 c
262.4785 219.6504 262.5605 219.7607 262.5547 219.8848 c
262.5469 220.0088 262.4512 220.1084 262.3281 220.1221 c
250.4102 221.4238 240.582 216.8037 234.1074 208.2041 C
235.7559 213.1045 240.4727 217.96 247.0527 220.8232 c
252.8984 223.3682 258.9023 223.7695 263.4746 222.333 c
263.5801 222.2998 263.6973 222.3398 263.7598 222.4326 c
263.8223 222.5244 263.8184 222.6475 263.748 222.7354 c
f
210.8438 147.1631 m
215.6504 157.6494 215.3086 165.8486 211.4375 176.2178 c
211.3926 176.335 211.2715 176.4023 211.1484 176.3779 c
211.0254 176.3525 210.9395 176.2412 210.9453 176.1162 c
211.5664 163.4951 208.1191 154.4619 200.6465 148.3096 C
208.8965 158.1611 205 177.8691 191.8242 177.8691 c
182.2393 177.8691 174.3086 169.8936 172.3691 160.3447 c
172.3447 160.2236 172.4111 160.1006 172.5273 160.0576 c
172.6426 160.0127 172.7734 160.0576 172.8359 160.1631 c
175.6787 164.9248 180.2451 168.0146 185.2939 168.0146 c
193.4277 168.0146 195.834 161.5479 195.834 157.0166 c
195.834 150.8291 190.9082 145.6729 187.127 145.6729 c
183.6904 145.6729 182.0869 148.4971 182.0869 150.6006 c
182.0869 154.499 185.085 157.7666 188.4629 158.7646 c
188.582 158.7998 188.6602 158.9189 188.6426 159.0439 c
188.623 159.1689 188.5176 159.2607 188.3926 159.2627 c
184.2861 159.2881 180.8154 157.4072 178.7627 153.6943 C
178.4932 156.5693 178.4902 158.3799 179.4033 161.417 c
179.4385 161.5342 179.3848 161.6592 179.2773 161.7158 c
179.168 161.7725 179.0352 161.7432 178.9609 161.6475 c
171.6045 152.2549 175.125 136.0225 180.9404 129.29 C
175.4082 133.2725 170.5234 141.9229 170.6006 153.6826 c
170.6016 153.8057 170.5156 153.9092 170.3955 153.9326 c
170.2754 153.958 170.1563 153.8916 170.1113 153.7783 c
166.0029 143.5264 168.1826 124.5303 179.3926 113.9268 C
176.5088 113.5303 173.5254 113.5811 170.2676 114.6201 c
170.1523 114.6553 170.0273 114.6064 169.9688 114.501 c
169.9102 114.3936 169.9336 114.2607 170.0273 114.1826 c
174.1191 110.7275 179.8418 109.6416 185.2939 109.6416 C
180.5967 115.1416 182.1572 126.1963 189.6484 126.1963 c
194.9961 126.1963 197.4238 117.8975 193.2949 113.415 c
193.2168 113.3291 193.207 113.2002 193.2695 113.1045 c
193.334 113.0068 193.4551 112.9639 193.5664 113.0029 c
198.3457 114.6572 203.5117 118.792 203.5117 124.0186 c
203.5117 129.0615 198.6992 133.4131 191.7109 133.0693 C
200.5293 135.5752 209.7617 132.8018 214.5918 126.8174 c
214.666 126.7236 214.7969 126.6963 214.9023 126.749 c
215.0098 126.8037 215.0645 126.9248 215.0352 127.04 c
212.2441 137.7568 203.0684 142.2393 191.5957 140.7471 C
200.877 144.5029 214.8457 141.2275 221.0195 133.4365 c
221.0918 133.3447 221.2188 133.3154 221.3262 133.3643 c
221.4316 133.415 221.4902 133.5322 221.4668 133.6455 c
220.0957 140.2607 216.6035 145.208 210.8438 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.421485 0 0.046937 0 0.615686 0.862745 0.976471 Xa
 0.421485 0 0.046937 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2266 166.4502 m
237.2051 166.3311 237.1016 166.2432 236.9805 166.2432 c
224.0742 166.1064 212.2266 162.9756 203.0098 154.7275 C
211.0391 160.2861 225.9512 162.2373 234.5371 158.3467 c
234.6465 158.2959 234.7051 158.1748 234.6777 158.0576 c
234.6523 157.9404 234.5449 157.8584 234.4238 157.8604 c
223.7441 158.1514 215.1445 154.8545 208.4395 148.8975 C
215.3086 148.4736 221.0137 144.1572 220.9961 139.0518 c
220.9961 138.9326 220.9121 138.8291 220.7949 138.8037 c
220.6797 138.7803 220.5605 138.8389 220.5117 138.9482 c
219.3906 141.4365 215.7637 142.7295 211.9297 141.8291 c
207.75 140.8467 204.9297 137.6396 205.6289 134.6631 c
206.0996 132.6494 208.0645 131.2607 210.5801 130.876 c
210.707 130.8564 210.8008 130.7471 210.7969 130.6182 c
210.793 130.4912 210.6953 130.3857 210.5664 130.3721 c
209.498 130.2705 208.3867 130.2666 207.25 130.376 c
200.7598 130.9932 195.7363 134.9697 195.3008 139.5537 C
190.5879 139.0068 186.416 136.3955 184.9229 132.7803 c
184.8779 132.6709 184.7646 132.6084 184.6475 132.626 c
184.5322 132.6436 184.4443 132.7393 184.4346 132.8564 c
184.0576 137.6064 185.6924 140.6943 189.4043 143.71 C
184.0205 141.6514 177.959 141.5459 172.1484 144.2471 c
172.043 144.2979 171.9844 144.4131 172.0059 144.5283 c
172.0293 144.6436 172.1289 144.7275 172.2461 144.7314 c
177.125 144.9209 180.6631 146.4873 183.9795 149.8037 C
165.7227 144.6689 150.8906 156.0049 156.0234 172.8545 c
156.0586 172.9717 156.1699 173.0459 156.291 173.0342 c
156.4121 173.0225 156.5078 172.9268 156.5176 172.8057 c
157.4355 163.0908 164.2207 156.6885 174.3789 155.7295 C
168.9922 157.7881 163.3789 162.7041 162.8223 171.2627 c
162.8145 171.3857 162.8945 171.4951 163.0137 171.5264 c
163.1328 171.5557 163.2559 171.4951 163.3066 171.3838 c
166.1055 165.2295 171.6035 162.1201 177.4668 161.5713 C
171.1328 164.1533 167.0703 170.1748 165.8965 177.9932 c
165.877 178.1162 165.9512 178.2334 166.0703 178.2725 c
166.1875 178.3096 166.3164 178.2568 166.373 178.1455 c
170.2383 170.5635 178.5293 165.3525 188.8203 169.335 c
199.4375 173.4443 204.0938 185.7197 205.123 194.374 c
205.1387 194.4971 205.2383 194.5908 205.3613 194.5986 c
205.4844 194.6045 205.5938 194.5225 205.623 194.4033 c
209.3418 178.7139 202.0391 162.4541 188.9863 155.5635 C
196.082 157.5654 202.4258 161.8232 206.0137 168.917 C
214.3066 169.9346 220.0176 172.7803 222.8711 178.1572 c
222.9277 178.2627 223.0508 178.3154 223.166 178.2822 c
223.2813 178.2471 223.3574 178.1357 223.3477 178.0166 c
223.166 175.9072 222.4063 171.6865 219.2734 169.7451 C
226.2383 169.7568 231.7793 168.8525 237.0723 166.7314 c
237.1836 166.6865 237.25 166.5693 237.2266 166.4502 c
f
207.7402 219.9189 m
207.8398 219.8545 207.9688 219.8643 208.0566 219.9463 c
208.1426 220.0264 208.1602 220.1553 208.1016 220.2588 c
206.4824 223.0557 207.9609 227.0713 211.1523 227.0713 c
216.873 227.0713 219.623 216.3018 218.748 206.4795 C
216.5859 212.2334 214.7148 214.5342 211.4004 217.2744 c
211.3066 217.3506 211.1719 217.3525 211.0781 217.2744 c
210.9844 217.1982 210.957 217.0654 211.0156 216.958 c
215.8711 207.8799 216.9121 200.8936 216.9121 192.874 C
215.4492 198.8311 213.7168 202.1943 208.7852 207.2549 c
208.6992 207.3428 208.5625 207.3564 208.4609 207.2861 c
208.3594 207.2158 208.3223 207.083 208.373 206.9717 c
213.6719 195.3799 213.2676 182.5244 209.3203 172.708 c
209.2813 172.6104 209.3066 172.499 209.3828 172.4268 c
209.4609 172.3545 209.5723 172.3389 209.668 172.3838 c
214.873 174.9346 217.9316 176.6104 222.4199 182.7744 C
221.0625 190.1729 222.1914 193.8213 225.5918 199.9678 C
221.6543 190.0518 223.75 176.0752 233.7793 170.3779 c
233.8887 170.3154 234.0273 170.3428 234.1035 170.4424 c
234.1816 170.542 234.1758 170.6826 234.0879 170.7744 c
230.3066 174.7295 227.5566 181.4092 229.9316 188.7002 C
228.4023 178.3115 237.5273 169.5869 247.7109 169.5869 c
257.3105 169.5869 263.8613 177.0947 263.3203 184.5264 c
262.7832 191.8916 257.877 195.4971 253.6484 197.0244 c
253.5371 197.0654 253.4121 197.0225 253.3496 196.9229 c
253.2852 196.8232 253.2988 196.6924 253.3828 196.6084 c
258.9922 190.915 259.7598 180.1162 249.7988 176.8486 C
255.6582 181.9053 253.4883 193.6768 244.1094 194.5732 c
243.9922 194.583 243.8828 194.5127 243.8457 194.4014 c
243.8066 194.292 243.8496 194.1689 243.9492 194.1064 c
245.957 192.8271 247.627 190.335 247.627 187.5322 c
247.627 182.8584 244.2051 181.0205 241.9512 181.0205 c
238.5293 181.0205 235.6914 184.2764 235.6914 189.2021 c
235.6914 195.0439 240.9512 199.8857 247.7109 200.6357 c
254.3379 201.3721 260.4941 198.4814 263.4609 194.1768 c
263.5313 194.0752 263.6621 194.04 263.7754 194.0908 c
263.8867 194.1416 263.9453 194.2646 263.916 194.3838 c
260.8965 206.0869 247.1191 211.2607 237.0273 203.8916 C
243.6406 211.3916 254.0332 211.4971 262.75 203.8057 c
262.8398 203.7256 262.9746 203.7197 263.0723 203.7939 c
263.168 203.8682 263.1992 203.999 263.1445 204.1084 c
260.4785 209.5146 253.8926 215.9268 244.5391 214.9932 c
235.9824 214.1377 231.0176 205.9775 230.0156 199.3018 C
229.459 207.8232 231.4102 213.8369 238.7695 219.4463 c
238.8672 219.5205 238.8965 219.6533 238.8418 219.7627 c
238.7871 219.8721 238.6621 219.9268 238.5449 219.8916 c
231.7598 217.9326 226.3145 214.4678 223.4961 207.3486 C
223.4961 213.5088 225.6348 219.7197 231.0215 223.8584 c
231.1191 223.9326 231.1484 224.0654 231.0938 224.1748 c
231.0391 224.2822 230.916 224.3369 230.7988 224.3037 c
227.3457 223.3213 224.627 221.8154 222.6602 219.1201 C
221.3496 230.2197 216.1387 236.8096 210.1348 236.8096 c
206.0098 236.8096 202.9297 233.7764 202.9297 228.9404 c
202.9297 226.1104 204.418 222.1377 207.7402 219.9189 c
f
108.5137 128.3018 m
111.6758 124.3975 118.0527 122.9092 124.9453 124.3135 C
124.4355 120.0107 125.2793 115.5225 126.5566 112.8271 c
126.6094 112.7197 126.7305 112.6611 126.8477 112.6904 c
126.9648 112.7197 127.0449 112.8271 127.041 112.9482 c
126.666 121.7139 131.6641 128.79 140.4902 131.8564 C
133.584 127.1006 131.5645 117.6631 134.8516 112.792 c
134.9199 112.6924 135.0469 112.6533 135.1582 112.6982 c
135.2695 112.7432 135.334 112.8604 135.3125 112.9795 c
134.9395 115.04 135.918 117.6631 138.0254 119.7041 c
140.9316 122.5186 144.875 123.1572 146.8359 121.1338 c
148.7969 119.1084 148.0332 115.1865 145.1289 112.374 c
144.0684 111.3467 142.8691 110.6104 141.6797 110.1885 c
141.5664 110.1475 141.498 110.0342 141.5137 109.917 c
141.5273 109.7979 141.623 109.7061 141.7422 109.6963 c
148.1309 109.1416 152.5117 112.9482 155.2578 117.5732 c
158.0527 122.2783 162.8281 125.9854 168.4688 125.2451 c
168.5879 125.2295 168.7012 125.2998 168.7422 125.4131 c
168.7813 125.5264 168.7363 125.6514 168.6328 125.7139 c
165.8359 127.3975 162.7617 128.0967 158.7695 126.7666 C
164.5645 131.6748 172.8164 134.5068 180.6104 131.9932 c
180.7197 131.958 180.8389 132.001 180.9014 132.0967 c
180.9639 132.1924 180.9541 132.3193 180.876 132.4053 c
174.9668 138.9697 163.1855 139.1006 155.7656 133.7764 C
158.8027 138.0928 162.834 141.2627 170.0586 142.2549 c
170.1738 142.2705 170.2637 142.3643 170.2773 142.4795 c
170.2891 142.5947 170.2227 142.7041 170.1133 142.7451 c
161.8223 145.8213 153.5137 142.7002 146.668 134.5283 C
149.6602 140.9072 154.5742 146.0146 161.4355 148.542 c
161.5508 148.583 161.6191 148.7002 161.5977 148.8213 c
161.5781 148.9424 161.4746 149.0303 161.3535 149.0322 c
157.4102 149.1143 153.8672 148.1748 149.0879 145.4619 C
152.5957 151.1533 151.8281 161.1006 146.7188 167.7217 c
146.6484 167.8135 146.5234 167.8447 146.416 167.7998 c
146.3105 167.7529 146.248 167.6396 146.2676 167.5244 c
147.4473 160.3252 144.9688 152.1963 140.6582 147.8838 C
142.8105 155.5146 140.6641 162.46 134.7617 167.5264 c
134.6914 167.5869 134.5918 167.6045 134.5059 167.5713 c
134.418 167.5381 134.3574 167.46 134.3438 167.3682 c
133.1094 157.9502 122.5742 148.3936 113.7422 147.5928 c
113.6172 147.5811 113.5195 147.4814 113.5117 147.3564 c
113.5039 147.2314 113.5859 147.1201 113.709 147.0928 c
117.9883 146.124 122.4004 146.6025 126.0977 148.1221 C
123.4375 145.1904 120.1582 143.0127 116.543 141.8779 c
116.4258 141.8408 116.3535 141.7275 116.3672 141.6064 c
116.3809 141.4854 116.4805 141.3896 116.6016 141.3818 c
121.1113 141.0713 125.5254 142.3877 129.332 144.9209 C
124.9707 138.2998 118.3516 133.376 109.9043 131.4131 c
109.7832 131.3857 109.7012 131.2744 109.707 131.1514 c
109.7148 131.0283 109.8105 130.9287 109.9336 130.915 c
121.8516 129.6123 131.6797 134.2334 138.1543 142.833 C
136.5059 137.9307 131.7891 133.0771 125.209 130.2139 c
119.3633 127.6689 113.3594 127.2666 108.7871 128.7041 c
108.6816 128.7373 108.5645 128.6963 108.502 128.6045 c
108.4395 128.5107 108.4434 128.3877 108.5137 128.3018 c
f
161.418 203.874 m
156.6113 193.3877 156.9531 185.1885 160.8242 174.8193 c
160.8691 174.7021 160.9902 174.6338 161.1133 174.6592 c
161.2363 174.6846 161.3223 174.7959 161.3164 174.9189 c
160.6953 187.542 164.1426 196.5732 171.6152 202.7275 C
163.3652 192.874 167.2617 173.167 180.4385 173.167 c
190.0234 173.167 197.9531 181.1436 199.8926 190.6924 c
199.918 190.8135 199.8516 190.9346 199.7344 190.9795 c
199.6191 191.0244 199.4883 190.9795 199.4258 190.8721 c
196.584 186.1104 192.0176 183.0205 186.9688 183.0205 c
178.834 183.0205 176.4277 189.4873 176.4277 194.0205 c
176.4277 200.2061 181.3545 205.3623 185.1357 205.3623 c
188.5723 205.3623 190.1758 202.54 190.1758 200.4365 c
190.1758 196.5381 187.1777 193.2705 183.8018 192.2725 c
183.6807 192.2354 183.6045 192.1182 183.6221 191.9932 c
183.6396 191.8682 183.7451 191.7744 183.8721 191.7744 c
187.9766 191.749 191.4473 193.6279 193.5 197.3428 C
193.7695 194.4678 193.7715 192.6572 192.8594 189.6182 c
192.8242 189.501 192.877 189.376 192.9844 189.3193 c
193.0938 189.2646 193.2266 189.292 193.3008 189.3896 c
200.6582 198.7822 197.1367 215.0127 191.3223 221.7471 C
196.8535 217.7646 201.7383 209.1123 201.6621 197.3525 c
201.6602 197.2314 201.7461 197.126 201.8672 197.1025 c
201.9863 197.0791 202.1055 197.1436 202.1504 197.2568 c
206.2598 207.5107 204.0801 226.5049 192.8691 237.1084 C
195.7539 237.5068 198.7363 237.4561 201.9941 236.417 c
202.1094 236.3799 202.2344 236.4307 202.293 236.5361 c
202.3516 236.6416 202.3281 236.7744 202.2344 236.8525 c
198.1426 240.3076 192.4199 241.3936 186.9688 241.3936 C
191.666 235.8936 190.1055 224.8408 182.6162 224.8408 c
177.2656 224.8408 174.8379 233.1396 178.9668 237.6221 c
179.0449 237.708 179.0547 237.835 178.9922 237.9326 c
178.9277 238.0303 178.8066 238.0713 178.6953 238.0342 c
173.916 236.3779 168.75 232.2451 168.75 227.0166 c
168.75 221.9756 173.5625 217.6221 180.5537 217.9658 C
171.7324 215.4619 162.5 218.2334 157.6699 224.2197 c
157.5957 224.3115 157.4648 224.3408 157.3594 224.2861 c
157.252 224.2334 157.1973 224.1123 157.2266 223.9951 c
160.0176 213.2803 169.1934 208.7959 180.667 210.29 C
171.3848 206.5322 157.416 209.8076 151.2422 217.5986 c
151.1699 217.6904 151.043 217.7217 150.9355 217.6709 c
150.8301 217.6221 150.7715 217.5049 150.7949 217.3896 c
152.166 210.7744 155.6582 205.8291 161.418 203.874 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.810819 0.225376 0.184237 0 0.258824 0.494118 Xa
 1 0.810819 0.225376 0.184237 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 184.5869 m
26.7178 184.7061 26.8213 184.792 26.9424 184.7939 c
39.8486 184.9287 51.6963 188.0615 60.9141 196.3086 C
52.8838 190.751 37.9717 188.7979 29.3867 192.6904 c
29.2764 192.7402 29.2178 192.8604 29.2451 192.9785 c
29.2715 193.0967 29.3779 193.1787 29.499 193.1748 c
40.1787 192.8857 48.7783 196.1816 55.4834 202.1396 C
48.6143 202.5615 42.9092 206.8799 42.9268 211.9844 c
42.9268 212.1035 43.0107 212.2061 43.1279 212.2314 c
43.2441 212.2568 43.3623 212.1963 43.4111 212.0879 c
44.5322 209.5986 48.1592 208.3076 51.9941 209.208 c
56.1738 210.1885 58.9941 213.3975 58.2949 216.373 c
57.8232 218.3877 55.8584 219.7764 53.3428 220.1602 c
53.2158 220.1787 53.123 220.29 53.126 220.418 c
53.1299 220.5459 53.2285 220.6514 53.3564 220.6631 c
54.4248 220.7656 55.5361 220.7695 56.6738 220.6611 c
63.1641 220.0439 68.1875 216.0654 68.623 211.4834 C
73.3359 212.0303 77.5078 214.6396 79.002 218.2568 c
79.0469 218.3652 79.1621 218.4287 79.2773 218.4111 c
79.3926 218.3916 79.4805 218.2969 79.4902 218.1807 c
79.8672 213.4287 78.2324 210.3418 74.5195 207.3262 C
79.9043 209.3857 85.9648 209.4912 91.7754 206.7881 c
91.8809 206.7393 91.9395 206.624 91.918 206.5088 c
91.8945 206.3936 91.7949 206.3096 91.6777 206.3057 c
86.7988 206.1152 83.2617 204.5498 79.9473 201.2334 C
98.2012 206.3672 113.0332 195.0322 107.9004 178.1807 c
107.8652 178.0654 107.7539 177.9902 107.6328 178.0029 c
107.5117 178.0146 107.416 178.1104 107.4063 178.2314 c
106.4883 187.9453 99.7031 194.3467 89.5449 195.3076 C
94.9316 193.2471 100.5449 188.3311 101.1016 179.7734 c
101.1094 179.6514 101.0293 179.54 100.9102 179.5107 c
100.791 179.4814 100.668 179.54 100.6172 179.6514 c
97.8184 185.8057 92.3203 188.917 86.457 189.4639 C
92.791 186.8838 96.8535 180.8623 98.0273 173.0439 c
98.0469 172.9209 97.9727 172.8018 97.8535 172.7646 c
97.7363 172.7256 97.6074 172.7803 97.5508 172.8896 c
93.6855 180.4727 85.3945 185.6836 75.1035 181.7021 c
64.4863 177.5928 59.8291 165.3154 58.7998 156.6611 c
58.7852 156.54 58.6846 156.4463 58.5615 156.4385 c
58.4395 156.4307 58.3291 156.5127 58.3008 156.6338 c
54.5811 172.3213 61.8838 188.583 74.9375 195.4736 C
67.8418 193.4707 61.498 189.2139 57.9102 182.1191 C
49.6162 181.1006 43.9063 178.2568 41.0527 172.8799 c
40.9961 172.7725 40.8721 172.7197 40.7568 172.7549 c
40.6416 172.7881 40.5654 172.8994 40.5752 173.0205 c
40.7578 175.1299 41.5166 179.3506 44.6494 181.291 C
37.6846 181.2803 32.1436 182.1846 26.8506 184.3037 c
26.7393 184.3496 26.6738 184.4678 26.6963 184.5869 c
f
56.1826 131.1162 m
56.084 131.1826 55.9541 131.1709 55.8672 131.0908 c
55.7813 131.0088 55.7627 130.8799 55.8213 130.7783 c
57.4414 127.9814 55.9619 123.9639 52.7705 123.9639 c
47.0498 123.9639 44.2998 134.7334 45.1748 144.5576 C
47.3379 138.8018 49.208 136.5029 52.5225 133.7627 c
52.6162 133.6846 52.751 133.6846 52.8447 133.7607 c
52.9385 133.8389 52.9658 133.9697 52.9082 134.0771 c
48.0518 143.1572 47.0107 150.1436 47.0107 158.1631 C
48.4736 152.2041 50.2061 148.8408 55.1377 143.7822 c
55.2236 143.6943 55.3604 143.6807 55.4629 143.749 c
55.5645 143.8193 55.6016 143.9521 55.5498 144.0654 c
50.252 155.6553 50.6563 168.5127 54.6025 178.3291 c
54.6416 178.4268 54.6172 178.5381 54.54 178.6104 c
54.4629 178.6807 54.3506 178.6982 54.2549 178.6514 c
49.0498 176.1006 45.9912 174.4248 41.5029 168.2627 C
42.8604 160.8643 41.7314 157.2139 38.3311 151.0674 C
42.2686 160.9854 40.1729 174.9619 30.1436 180.6592 c
30.0342 180.7207 29.8955 180.6934 29.8193 180.5947 c
29.7412 180.4951 29.748 180.3535 29.835 180.2627 c
33.6162 176.3076 36.3662 169.6279 33.9912 162.335 C
35.5205 172.7236 26.3955 181.4502 16.2119 181.4502 c
6.6123 181.4502 0.061523 173.9404 0.602539 166.5088 c
1.13965 159.1436 6.0459 155.54 10.2744 154.0107 c
10.3857 153.9717 10.5107 154.0127 10.5742 154.1123 c
10.6377 154.2139 10.624 154.3428 10.541 154.4287 c
4.93066 160.1201 4.16309 170.9209 14.124 174.1885 C
8.26465 169.1318 10.4346 157.3584 19.8135 156.4639 c
19.9307 156.4521 20.04 156.5225 20.0781 156.6338 c
20.1162 156.7451 20.0732 156.8682 19.9746 156.9307 c
17.9658 158.208 16.2959 160.7021 16.2959 163.5049 c
16.2959 168.1787 19.7178 170.0146 21.9717 170.0146 c
25.3936 170.0146 28.2314 166.7588 28.2314 161.835 c
28.2314 155.9912 22.9717 151.1514 16.2119 150.3994 c
9.58594 149.665 3.42969 152.5537 0.461914 156.8584 c
0.392578 156.96 0.260742 156.9971 0.148438 156.9463 c
0.036133 156.8955 -0.022461 156.7705 0.007813 156.6514 c
3.02637 144.9482 16.8037 139.7744 26.8955 147.1455 C
20.2822 139.6436 9.88965 139.54 1.17383 147.2314 c
1.08301 147.3115 0.948242 147.3154 0.851563 147.2412 c
0.754883 147.1689 0.724609 147.0361 0.77832 146.9287 c
3.44531 141.5205 10.0313 135.1084 19.3838 136.0439 c
27.9404 136.8994 32.9053 145.0576 33.9072 151.7354 C
34.4639 143.2139 32.5137 137.1982 25.1533 131.5889 c
25.0566 131.5146 25.0264 131.3818 25.0811 131.2725 c
25.1357 131.165 25.2607 131.1104 25.3779 131.1436 c
32.1631 133.1045 37.6084 136.5693 40.4268 143.6885 C
40.4268 137.5264 38.2881 131.3154 32.9014 127.1768 c
32.8037 127.1025 32.7744 126.9717 32.8291 126.8623 c
32.8838 126.7529 33.0078 126.6982 33.125 126.7314 c
36.5781 127.7158 39.2959 129.2197 41.2627 131.917 C
42.5732 120.8174 47.7842 114.2256 53.7881 114.2256 c
57.9131 114.2256 60.9932 117.2588 60.9932 122.0967 c
60.9932 124.9268 59.5049 128.8994 56.1826 131.1162 c
f
155.4102 222.7354 m
152.248 226.6396 145.8711 228.1279 138.9785 226.7236 C
139.4883 231.0244 138.6445 235.5146 137.3672 238.208 c
137.3145 238.3174 137.1934 238.375 137.0762 238.3467 c
136.959 238.3174 136.8789 238.21 136.8828 238.0889 c
137.2578 229.3223 132.2598 222.2451 123.4336 219.1787 C
130.3398 223.9346 132.3594 233.3721 129.0723 238.2451 c
129.0039 238.3438 128.877 238.3828 128.7656 238.3369 c
128.6543 238.292 128.5898 238.1748 128.6113 238.0576 c
128.9844 235.9971 128.0059 233.373 125.8984 231.3311 c
122.9922 228.5166 119.0488 227.8779 117.0879 229.9014 c
115.127 231.9268 115.8906 235.8486 118.7949 238.6631 c
119.8555 239.6904 121.0547 240.4248 122.2441 240.8477 c
122.3574 240.8877 122.4258 241.001 122.4102 241.1191 c
122.3965 241.2383 122.3008 241.3301 122.1816 241.3398 c
115.793 241.8945 111.4121 238.0879 108.666 233.4619 c
105.8711 228.7568 101.0957 225.0518 95.4551 225.792 c
95.3359 225.8076 95.2227 225.7373 95.1816 225.624 c
95.1426 225.5107 95.1875 225.3838 95.291 225.3223 c
98.0879 223.6377 101.1621 222.9385 105.1543 224.2705 C
99.3594 219.3613 91.1074 216.5283 83.3145 219.043 c
83.2051 219.0791 83.0859 219.0361 83.0234 218.9395 c
82.9609 218.8428 82.9727 218.7168 83.0488 218.6318 c
88.957 212.0674 100.7383 211.9365 108.1582 217.2588 C
105.1211 212.9424 101.0898 209.7744 93.8652 208.7803 c
93.75 208.7646 93.6602 208.6729 93.6465 208.5576 c
93.6348 208.4414 93.7012 208.332 93.8105 208.292 c
102.1016 205.2139 110.4102 208.3369 117.2559 216.5068 C
114.2637 210.1299 109.3496 205.0225 102.4883 202.4951 c
102.373 202.4531 102.3047 202.335 102.3262 202.2158 c
102.3457 202.0947 102.4492 202.0059 102.5703 202.0029 c
106.5137 201.9219 110.0566 202.8604 114.8359 205.5732 C
111.3281 199.8838 112.0957 189.9346 117.2051 183.3154 c
117.2754 183.2236 117.4004 183.1914 117.5078 183.2373 c
117.6133 183.2842 117.6758 183.3965 117.6563 183.5107 c
116.4766 190.7119 118.9551 198.8408 123.2656 203.1533 C
121.1133 195.5215 123.2598 188.5771 129.1621 183.5088 c
129.2324 183.4482 129.332 183.4316 129.418 183.4648 c
129.5059 183.498 129.5664 183.5771 129.5801 183.6689 c
130.8145 193.0869 141.3496 202.6436 150.1816 203.4443 c
150.3066 203.4551 150.4043 203.5557 150.4121 203.6797 c
150.4199 203.8037 150.3379 203.917 150.2148 203.9443 c
145.9355 204.9131 141.5234 204.4346 137.8262 202.9131 C
140.4863 205.8467 143.7656 208.0244 147.3809 209.1592 c
147.498 209.1953 147.5703 209.3096 147.5566 209.4307 c
147.543 209.5518 147.4434 209.6455 147.3223 209.6543 c
142.8125 209.9658 138.3984 208.6484 134.5918 206.1162 C
138.9531 212.7373 145.5723 217.6611 154.0195 219.6221 c
154.1406 219.6504 154.2227 219.7607 154.2168 219.8848 c
154.209 220.0088 154.1133 220.1084 153.9902 220.1221 c
142.0723 221.4238 132.2441 216.8037 125.7695 208.2041 C
127.418 213.1045 132.1348 217.96 138.7148 220.8232 c
144.5605 223.3682 150.5645 223.7695 155.1367 222.333 c
155.2422 222.2998 155.3594 222.3398 155.4219 222.4326 c
155.4844 222.5244 155.4805 222.6475 155.4102 222.7354 c
f
102.5059 147.1631 m
107.3125 157.6494 106.9707 165.8486 103.0996 176.2178 c
103.0547 176.335 102.9336 176.4023 102.8105 176.3779 c
102.6875 176.3525 102.6016 176.2412 102.6074 176.1162 c
103.2285 163.4951 99.7813 154.4619 92.3086 148.3096 C
100.5586 158.1611 96.6621 177.8691 83.4863 177.8691 c
73.9004 177.8691 65.9697 169.8936 64.0303 160.3447 c
64.0059 160.2236 64.0723 160.1006 64.1885 160.0576 c
64.3037 160.0127 64.4346 160.0576 64.4971 160.1631 c
67.3398 164.9248 71.9063 168.0146 76.9551 168.0146 c
85.0898 168.0146 87.4961 161.5479 87.4961 157.0166 c
87.4961 150.8291 82.5703 145.6729 78.7891 145.6729 c
75.3516 145.6729 73.748 148.4971 73.748 150.6006 c
73.748 154.499 76.7461 157.7666 80.125 158.7646 c
80.2441 158.7998 80.3223 158.9189 80.3047 159.0439 c
80.2852 159.1689 80.1797 159.2607 80.0547 159.2627 c
75.9473 159.2881 72.4766 157.4072 70.4238 153.6943 C
70.1543 156.5693 70.1514 158.3799 71.0645 161.417 c
71.0996 161.5342 71.0459 161.6592 70.9385 161.7158 c
70.8291 161.7725 70.6963 161.7432 70.6221 161.6475 c
63.2656 152.2549 66.7861 136.0225 72.6016 129.29 C
67.0693 133.2725 62.1846 141.9229 62.2617 153.6826 c
62.2627 153.8057 62.1768 153.9092 62.0566 153.9326 c
61.9365 153.958 61.8174 153.8916 61.7725 153.7783 c
57.6641 143.5264 59.8438 124.5303 71.0537 113.9268 C
68.1699 113.5303 65.1865 113.5811 61.9287 114.6201 c
61.8135 114.6553 61.6885 114.6064 61.6299 114.501 c
61.5713 114.3936 61.5947 114.2607 61.6885 114.1826 c
65.7803 110.7275 71.5029 109.6416 76.9551 109.6416 C
72.2578 115.1416 73.8184 126.1963 81.3105 126.1963 c
86.6582 126.1963 89.0859 117.8975 84.957 113.415 c
84.8789 113.3291 84.8691 113.2002 84.9316 113.1045 c
84.9961 113.0068 85.1172 112.9639 85.2285 113.0029 c
90.0078 114.6572 95.1738 118.792 95.1738 124.0186 c
95.1738 129.0615 90.3613 133.4131 83.373 133.0693 C
92.1914 135.5752 101.4238 132.8018 106.2539 126.8174 c
106.3281 126.7236 106.459 126.6963 106.5645 126.749 c
106.6719 126.8037 106.7266 126.9248 106.6973 127.04 c
103.9063 137.7568 94.7305 142.2393 83.2578 140.7471 C
92.5391 144.5029 106.5078 141.2275 112.6816 133.4365 c
112.7539 133.3447 112.8809 133.3154 112.9883 133.3643 c
113.0938 133.415 113.1523 133.5322 113.1289 133.6455 c
111.7578 140.2607 108.2656 145.208 102.5059 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.421485 0 0.046937 0 0.615686 0.862745 0.976471 Xa
 0.421485 0 0.046937 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8887 166.4502 m
128.8672 166.3311 128.7637 166.2432 128.6426 166.2432 c
115.7363 166.1064 103.8887 162.9756 94.6719 154.7275 C
102.7012 160.2861 117.6133 162.2373 126.1992 158.3467 c
126.3086 158.2959 126.3672 158.1748 126.3398 158.0576 c
126.3145 157.9404 126.207 157.8584 126.0859 157.8604 c
115.4063 158.1514 106.8066 154.8545 100.1016 148.8975 C
106.9707 148.4736 112.6758 144.1572 112.6582 139.0518 c
112.6582 138.9326 112.5742 138.8291 112.457 138.8037 c
112.3418 138.7803 112.2227 138.8389 112.1738 138.9482 c
111.0527 141.4365 107.4258 142.7295 103.5918 141.8291 c
99.4121 140.8467 96.5918 137.6396 97.291 134.6631 c
97.7617 132.6494 99.7266 131.2607 102.2422 130.876 c
102.3691 130.8564 102.4629 130.7471 102.459 130.6182 c
102.4551 130.4912 102.3574 130.3857 102.2285 130.3721 c
101.1602 130.2705 100.0488 130.2666 98.9121 130.376 c
92.4219 130.9932 87.3984 134.9697 86.9629 139.5537 C
82.25 139.0068 78.0781 136.3955 76.584 132.7803 c
76.5391 132.6709 76.4258 132.6084 76.3086 132.626 c
76.1934 132.6436 76.1055 132.7393 76.0957 132.8564 c
75.7188 137.6064 77.3535 140.6943 81.0664 143.71 C
75.6816 141.6514 69.6201 141.5459 63.8096 144.2471 c
63.7041 144.2979 63.6455 144.4131 63.667 144.5283 c
63.6904 144.6436 63.79 144.7275 63.9072 144.7314 c
68.7861 144.9209 72.3242 146.4873 75.6406 149.8037 C
57.3838 144.6689 42.5518 156.0049 47.6846 172.8545 c
47.7197 172.9717 47.8311 173.0459 47.9521 173.0342 c
48.0732 173.0225 48.1689 172.9268 48.1787 172.8057 c
49.0967 163.0908 55.8818 156.6885 66.04 155.7295 C
60.6533 157.7881 55.04 162.7041 54.4834 171.2627 c
54.4756 171.3857 54.5557 171.4951 54.6748 171.5264 c
54.7939 171.5557 54.917 171.4951 54.9678 171.3838 c
57.7666 165.2295 63.2646 162.1201 69.1279 161.5713 C
62.7939 164.1533 58.7314 170.1748 57.5576 177.9932 c
57.5381 178.1162 57.6123 178.2334 57.7314 178.2725 c
57.8486 178.3096 57.9775 178.2568 58.0342 178.1455 c
61.8994 170.5635 70.1904 165.3525 80.4824 169.335 c
91.0996 173.4443 95.7559 185.7197 96.7852 194.374 c
96.8008 194.4971 96.9004 194.5908 97.0234 194.5986 c
97.1465 194.6045 97.2559 194.5225 97.2852 194.4033 c
101.0039 178.7139 93.7012 162.4541 80.6484 155.5635 C
87.7441 157.5654 94.0879 161.8232 97.6758 168.917 C
105.9688 169.9346 111.6797 172.7803 114.5332 178.1572 c
114.5898 178.2627 114.7129 178.3154 114.8281 178.2822 c
114.9434 178.2471 115.0195 178.1357 115.0098 178.0166 c
114.8281 175.9072 114.0684 171.6865 110.9355 169.7451 C
117.9004 169.7568 123.4414 168.8525 128.7344 166.7314 c
128.8457 166.6865 128.9121 166.5693 128.8887 166.4502 c
f
99.4023 219.9189 m
99.502 219.8545 99.6309 219.8643 99.7188 219.9463 c
99.8047 220.0264 99.8223 220.1553 99.7637 220.2588 c
98.1445 223.0557 99.623 227.0713 102.8145 227.0713 c
108.5352 227.0713 111.2852 216.3018 110.4102 206.4795 C
108.248 212.2334 106.377 214.5342 103.0625 217.2744 c
102.9688 217.3506 102.834 217.3525 102.7402 217.2744 c
102.6465 217.1982 102.6191 217.0654 102.6777 216.958 c
107.5332 207.8799 108.5742 200.8936 108.5742 192.874 C
107.1113 198.8311 105.3789 202.1943 100.4473 207.2549 c
100.3613 207.3428 100.2246 207.3564 100.123 207.2861 c
100.0215 207.2158 99.9844 207.083 100.0352 206.9717 c
105.334 195.3799 104.9297 182.5244 100.9824 172.708 c
100.9434 172.6104 100.9688 172.499 101.0449 172.4268 c
101.123 172.3545 101.2344 172.3389 101.3301 172.3838 c
106.5352 174.9346 109.5938 176.6104 114.082 182.7744 C
112.7246 190.1729 113.8535 193.8213 117.2539 199.9678 C
113.3164 190.0518 115.4121 176.0752 125.4414 170.3779 c
125.5508 170.3154 125.6895 170.3428 125.7656 170.4424 c
125.8438 170.542 125.8379 170.6826 125.75 170.7744 c
121.9688 174.7295 119.2188 181.4092 121.5938 188.7002 C
120.0645 178.3115 129.1895 169.5869 139.373 169.5869 c
148.9727 169.5869 155.5234 177.0947 154.9824 184.5264 c
154.4453 191.8916 149.5391 195.4971 145.3105 197.0244 c
145.1992 197.0654 145.0742 197.0225 145.0117 196.9229 c
144.9473 196.8232 144.9609 196.6924 145.0449 196.6084 c
150.6543 190.915 151.4219 180.1162 141.4609 176.8486 C
147.3203 181.9053 145.1504 193.6768 135.7715 194.5732 c
135.6543 194.583 135.5449 194.5127 135.5078 194.4014 c
135.4688 194.292 135.5117 194.1689 135.6113 194.1064 c
137.6191 192.8271 139.2891 190.335 139.2891 187.5322 c
139.2891 182.8584 135.8672 181.0205 133.6133 181.0205 c
130.1914 181.0205 127.3535 184.2764 127.3535 189.2021 c
127.3535 195.0439 132.6133 199.8857 139.373 200.6357 c
146 201.3721 152.1563 198.4814 155.123 194.1768 c
155.1934 194.0752 155.3242 194.04 155.4375 194.0908 c
155.5488 194.1416 155.6074 194.2646 155.5781 194.3838 c
152.5586 206.0869 138.7813 211.2607 128.6895 203.8916 C
135.3027 211.3916 145.6953 211.4971 154.4121 203.8057 c
154.502 203.7256 154.6367 203.7197 154.7344 203.7939 c
154.8301 203.8682 154.8613 203.999 154.8066 204.1084 c
152.1406 209.5146 145.5547 215.9268 136.2012 214.9932 c
127.6445 214.1377 122.6797 205.9775 121.6777 199.3018 C
121.1211 207.8232 123.0723 213.8369 130.4316 219.4463 c
130.5293 219.5205 130.5586 219.6533 130.5039 219.7627 c
130.4492 219.8721 130.3242 219.9268 130.207 219.8916 c
123.4219 217.9326 117.9766 214.4678 115.1582 207.3486 C
115.1582 213.5088 117.2969 219.7197 122.6836 223.8584 c
122.7813 223.9326 122.8105 224.0654 122.7559 224.1748 c
122.7012 224.2822 122.5781 224.3369 122.4609 224.3037 c
119.0078 223.3213 116.2891 221.8154 114.3223 219.1201 C
113.0117 230.2197 107.8008 236.8096 101.7969 236.8096 c
97.6719 236.8096 94.5918 233.7764 94.5918 228.9404 c
94.5918 226.1104 96.0801 222.1377 99.4023 219.9189 c
f
0.174805 128.3018 m
3.33691 124.3975 9.71387 122.9092 16.6064 124.3135 C
16.0967 120.0107 16.9404 115.5225 18.2178 112.8271 c
18.2705 112.7197 18.3916 112.6611 18.5088 112.6904 c
18.626 112.7197 18.7061 112.8271 18.7021 112.9482 c
18.3271 121.7139 23.3252 128.79 32.1514 131.8564 C
25.2451 127.1006 23.2256 117.6631 26.5127 112.792 c
26.5811 112.6924 26.708 112.6533 26.8193 112.6982 c
26.9307 112.7432 26.9951 112.8604 26.9736 112.9795 c
26.6006 115.04 27.5791 117.6631 29.6865 119.7041 c
32.5928 122.5186 36.5361 123.1572 38.4971 121.1338 c
40.458 119.1084 39.6943 115.1865 36.79 112.374 c
35.7295 111.3467 34.5303 110.6104 33.3408 110.1885 c
33.2275 110.1475 33.1592 110.0342 33.1748 109.917 c
33.1885 109.7979 33.2842 109.7061 33.4033 109.6963 c
39.792 109.1416 44.1729 112.9482 46.9189 117.5732 c
49.7139 122.2783 54.4893 125.9854 60.1299 125.2451 c
60.249 125.2295 60.3623 125.2998 60.4033 125.4131 c
60.4424 125.5264 60.3975 125.6514 60.2939 125.7139 c
57.4971 127.3975 54.4229 128.0967 50.4307 126.7666 C
56.2256 131.6748 64.4775 134.5068 72.2715 131.9932 c
72.3809 131.958 72.5 132.001 72.5625 132.0967 c
72.625 132.1924 72.6152 132.3193 72.5371 132.4053 c
66.6279 138.9697 54.8467 139.1006 47.4268 133.7764 C
50.4639 138.0928 54.4951 141.2627 61.7197 142.2549 c
61.835 142.2705 61.9248 142.3643 61.9385 142.4795 c
61.9502 142.5947 61.8838 142.7041 61.7744 142.7451 c
53.4834 145.8213 45.1748 142.7002 38.3291 134.5283 C
41.3213 140.9072 46.2354 146.0146 53.0967 148.542 c
53.2119 148.583 53.2803 148.7002 53.2588 148.8213 c
53.2393 148.9424 53.1357 149.0303 53.0146 149.0322 c
49.0713 149.1143 45.5283 148.1748 40.749 145.4619 C
44.2568 151.1533 43.4893 161.1006 38.3799 167.7217 c
38.3096 167.8135 38.1846 167.8447 38.0771 167.7998 c
37.9717 167.7529 37.9092 167.6396 37.9287 167.5244 c
39.1084 160.3252 36.6299 152.1963 32.3193 147.8838 C
34.4717 155.5146 32.3252 162.46 26.4229 167.5264 c
26.3525 167.5869 26.2529 167.6045 26.167 167.5713 c
26.0791 167.5381 26.0186 167.46 26.0049 167.3682 c
24.7705 157.9502 14.2354 148.3936 5.40332 147.5928 c
5.27832 147.5811 5.18066 147.4814 5.17285 147.3564 c
5.16504 147.2314 5.24707 147.1201 5.37012 147.0928 c
9.64941 146.124 14.0615 146.6025 17.7588 148.1221 C
15.0986 145.1904 11.8193 143.0127 8.2041 141.8779 c
8.08691 141.8408 8.01465 141.7275 8.02832 141.6064 c
8.04199 141.4854 8.1416 141.3896 8.2627 141.3818 c
12.7725 141.0713 17.1865 142.3877 20.9932 144.9209 C
16.6318 138.2998 10.0127 133.376 1.56543 131.4131 c
1.44434 131.3857 1.3623 131.2744 1.36816 131.1514 c
1.37598 131.0283 1.47168 130.9287 1.59473 130.915 c
13.5127 129.6123 23.3408 134.2334 29.8154 142.833 C
28.167 137.9307 23.4502 133.0771 16.8701 130.2139 c
11.0244 127.6689 5.02051 127.2666 0.448242 128.7041 c
0.342773 128.7373 0.225586 128.6963 0.163086 128.6045 c
0.100586 128.5107 0.104492 128.3877 0.174805 128.3018 c
f
53.0791 203.874 m
48.2725 193.3877 48.6143 185.1885 52.4854 174.8193 c
52.5303 174.7021 52.6514 174.6338 52.7744 174.6592 c
52.8975 174.6846 52.9834 174.7959 52.9775 174.9189 c
52.3564 187.542 55.8037 196.5732 63.2764 202.7275 C
55.0264 192.874 58.9229 173.167 72.0996 173.167 c
81.6855 173.167 89.6152 181.1436 91.5547 190.6924 c
91.5801 190.8135 91.5137 190.9346 91.3965 190.9795 c
91.2813 191.0244 91.1504 190.9795 91.0879 190.8721 c
88.2461 186.1104 83.6797 183.0205 78.6309 183.0205 c
70.4951 183.0205 68.0889 189.4873 68.0889 194.0205 c
68.0889 200.2061 73.0156 205.3623 76.7969 205.3623 c
80.2344 205.3623 81.8379 202.54 81.8379 200.4365 c
81.8379 196.5381 78.8398 193.2705 75.4629 192.2725 c
75.3418 192.2354 75.2656 192.1182 75.2832 191.9932 c
75.3008 191.8682 75.4063 191.7744 75.5332 191.7744 c
79.6387 191.749 83.1094 193.6279 85.1621 197.3428 C
85.4316 194.4678 85.4336 192.6572 84.5215 189.6182 c
84.4863 189.501 84.5391 189.376 84.6465 189.3193 c
84.7559 189.2646 84.8887 189.292 84.9629 189.3896 c
92.3203 198.7822 88.7988 215.0127 82.9844 221.7471 C
88.5156 217.7646 93.4004 209.1123 93.3242 197.3525 c
93.3223 197.2314 93.4082 197.126 93.5293 197.1025 c
93.6484 197.0791 93.7676 197.1436 93.8125 197.2568 c
97.9219 207.5107 95.7422 226.5049 84.5313 237.1084 C
87.416 237.5068 90.3984 237.4561 93.6563 236.417 c
93.7715 236.3799 93.8965 236.4307 93.9551 236.5361 c
94.0137 236.6416 93.9902 236.7744 93.8965 236.8525 c
89.8047 240.3076 84.082 241.3936 78.6309 241.3936 C
83.3281 235.8936 81.7676 224.8408 74.2773 224.8408 c
68.9268 224.8408 66.499 233.1396 70.6279 237.6221 c
70.7061 237.708 70.7158 237.835 70.6533 237.9326 c
70.5889 238.0303 70.4678 238.0713 70.3564 238.0342 c
65.5771 236.3779 60.4111 232.2451 60.4111 227.0166 c
60.4111 221.9756 65.2236 217.6221 72.2148 217.9658 C
63.3936 215.4619 54.1611 218.2334 49.3311 224.2197 c
49.2568 224.3115 49.126 224.3408 49.0205 224.2861 c
48.9131 224.2334 48.8584 224.1123 48.8877 223.9951 c
51.6787 213.2803 60.8545 208.7959 72.3281 210.29 C
63.0459 206.5322 49.0771 209.8076 42.9033 217.5986 c
42.8311 217.6904 42.7041 217.7217 42.5967 217.6709 c
42.4912 217.6221 42.4326 217.5049 42.4561 217.3896 c
43.8271 210.7744 47.3193 205.8291 53.0791 203.874 C
f
*U
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 6)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4068.5 4068.5 m
-3967.1816 4068.5 L
-3967.1816 4060.7832 L
-4068.5 4060.7832 L
-4068.5 4068.5 L
n
u
0 O
0.558648 0.563317 0.482887 0.774472 0.137255 0.121569 0.12549 Xa
-3967.3 4062.2073 m
-3967.1504 4062.2439 -3967.2041 4061.8247 -3967.1816 4061.7495 C
-3967.4319 4061.8423 -3967.2937 4062.3159 -3967.3 4062.2073 C
f
-3969.7693 4063.1582 m
-3969.7256 4062.9871 L
-3970.0896 4063.4063 L
-3969.7693 4063.1582 L
f
-3972.0784 4063.1504 m
-3971.8601 4063.8643 -3971.2417 4063.0352 -3970.8303 4063.2888 C
-3970.7625 4063.4524 L
-3970.5769 4062.8772 L
-3971.0769 4062.9683 -3971.7263 4063.3499 -3972.0784 4063.1504 C
f
-3973.3096 4061.6072 m
-3973.2336 4061.8843 -3973.5759 4061.8455 -3973.0225 4061.6936 C
-3973.0503 4061.6631 -3973.0583 4061.6455 -3973.0745 4061.6233 C
-3973.1243 4061.6272 -3973.1929 4061.6262 -3973.3096 4061.6072 C
f
-3973.0745 4061.6233 m
-3972.8313 4061.6033 -3973.2336 4061.3904 -3973.0745 4061.6233 C
-3973.0745 4061.6233 L
f
-3974.1975 4061.7822 m
-3973.8772 4061.5342 L
-3973.9441 4061.3704 -3974.2292 4061.3333 -3974.1233 4061.2134 C
-3974.4519 4061.3496 -3974.3843 4061.5127 -3974.1975 4061.7822 C
f
-3974.5012 4062.303 m
-3974.3352 4062.1982 L
-3974.3643 4062.1294 -3974.4082 4062.105 -3974.5012 4062.303 C
f
-3973.9832 4061.9768 m
-3974.3352 4062.1982 L
-3974.2888 4062.313 -3974.2839 4062.5447 -3974.1736 4062.1184 C
-3974.2024 4062.3296 -3974.1328 4062.1262 -3973.9832 4061.9768 C
f
-3973.7839 4062.0852 m
-3973.6042 4062.2407 -3973.3721 4062.3384 -3973.6936 4062.5852 C
-3973.0808 4062.4871 -3973.1711 4061.9856 -3973.7839 4062.0852 C
f
-3972.1963 4063.8887 m
-3971.9561 4064.0984 L
-3971.7483 4063.8584 L
-3971.8521 4063.9771 -3972.2112 4063.6653 -3972.1963 4063.8887 C
f
-3976.1929 4061.4126 m
-3976.2129 4061.5647 -3976.0852 4061.8174 -3976.0613 4062.0122 C
-3975.8247 4061.8374 L
-3975.9463 4061.7334 -3976.1768 4061.6375 -3976.1929 4061.4126 C
f
-3976.0613 4062.0122 m
-3976.4153 4062.2727 L
-3976.0991 4062.303 -3976.0413 4062.1792 -3976.0613 4062.0122 C
f
-3974.5583 4063.0955 m
-3973.9768 4062.5479 L
-3974.6704 4063.1033 L
-3974.5583 4063.0955 L
f
-3977.5449 4061.3936 m
-3977.3442 4061.0422 L
-3977.7017 4061.5735 L
-3977.5449 4061.3936 L
f
-3978.4417 4061.4551 m
-3978.2932 4061.1638 -3978.6453 4060.9624 -3978.4883 4060.7832 C
-3978.7319 4060.8352 -3978.9399 4061.0852 -3979.1272 4061.3103 C
-3978.9282 4061.1848 -3978.7161 4061.2168 -3978.4417 4061.4551 C
f
-3979.4417 4061.6375 m
-3979.3423 4061.5679 -3979.2393 4061.4431 -3979.1272 4061.3103 C
-3979.2329 4061.3772 -3979.3369 4061.4744 -3979.4417 4061.6375 C
f
-3977.0183 4062.1975 m
-3977.0457 4062.1055 -3977.0984 4061.8655 -3977.2969 4061.7639 C
-3977.1577 4062.1912 L
-3977.1152 4062.1936 -3977.0671 4062.1951 -3977.0183 4062.1975 C
f
-3977.1528 4062.2046 m
-3977.1577 4062.1912 L
-3977.3088 4062.1814 -3977.4136 4062.1719 -3977.4585 4062.167 c
-3977.4199 4062.1707 -3977.3279 4062.1824 -3977.1528 4062.2046 C
f
-3976.9832 4062.1992 m
-3976.9961 4062.1982 -3977.0056 4062.1975 -3977.0183 4062.1975 C
-3977.0049 4062.24 -3976.9968 4062.2534 -3976.9832 4062.1992 C
f
-3975.4863 4062.709 m
-3975.6943 4062.948 -3976.1279 4063.2039 -3975.7083 4063.5686 C
-3975.5591 4063.2759 -3975.7993 4063.0686 -3975.4863 4062.709 c
f
-3976.8103 4062.7334 m
-3976.4343 4062.8311 L
-3976.4417 4062.7183 -3976.5095 4062.5535 -3976.4065 4062.4351 C
-3976.8103 4062.7334 L
f
-3976.9944 4062.8694 m
-3976.8103 4062.7334 L
-3976.9497 4062.6975 L
-3976.9944 4062.8694 L
f
-3978.7976 4062.0376 m
-3978.96 4062.2239 -3979.1377 4062.2393 -3979.3384 4062.2693 C
-3979.1233 4062.3533 -3978.9009 4062.3992 -3978.6897 4062.3972 C
-3978.6599 4062.2632 -3978.5671 4062.0222 -3978.7976 4062.0376 C
f
-3977.9983 4062.1563 m
-3978.0095 4062.1663 -3978.0239 4062.1707 -3978.0344 4062.1807 C
-3978.0122 4062.2173 -3977.9944 4062.2283 -3977.9983 4062.1563 C
f
-3981.3142 4062.2664 m
-3981.3032 4062.2896 -3981.2937 4062.3196 -3981.2825 4062.344 C
-3981.28 4062.3196 -3981.2783 4062.2952 -3981.2751 4062.27 C
-3981.3142 4062.2664 L
f
-3978.6536 4062.4771 m
-3978.4919 4062.5598 -3978.3953 4062.4551 -3978.3032 4062.3242 C
-3978.4241 4062.3662 -3978.5522 4062.3943 -3978.6897 4062.3972 C
-3978.7031 4062.4583 -3978.7056 4062.4983 -3978.6536 4062.4771 C
f
-3979.9929 4061.8374 m
-3979.9087 4061.9272 -3979.8132 4062.0032 -3979.7129 4062.0723 C
-3979.7952 4061.9373 -3979.9631 4061.7263 -3979.9929 4061.8374 C
f
-3978.0889 4062.0623 m
-3978.0808 4062.0559 -3978.0735 4062.0479 -3978.0647 4062.0432 C
-3978.1177 4061.9524 -3978.1111 4061.9966 -3978.0889 4062.0623 C
f
-3978.0889 4062.0623 m
-3978.1721 4062.1243 -3978.2375 4062.2295 -3978.3032 4062.3242 C
-3978.2048 4062.2896 -3978.1135 4062.2439 -3978.0344 4062.1807 C
-3978.0544 4062.1504 -3978.0745 4062.104 -3978.0889 4062.0623 C
f
-3981.9128 4065.0095 m
-3981.8843 4064.6133 -3981.4592 4064.2471 -3981.0923 4064.6719 C
-3980.7312 4064.375 -3980.9673 4063.0723 -3981.2825 4062.344 C
-3981.2937 4062.5166 -3981.2937 4062.6763 -3981.6653 4062.9104 C
-3981.5352 4063.1262 -3980.8408 4063.4163 -3981.1543 4063.7747 C
-3981.6465 4063.9783 -3981.5576 4063.6343 -3981.7969 4063.4253 C
-3981.5935 4063.9182 -3982.4231 4064.1431 -3982.3159 4064.8687 C
-3981.8843 4064.6133 L
-3981.8762 4064.7263 -3982.0327 4064.9063 -3981.9128 4065.0095 C
f
-3980.5745 4062.3843 m
-3980.4216 4062.3352 L
-3980.5959 4062.2664 -3980.7207 4062.1079 -3980.9504 4061.7976 C
-3981.2048 4061.9915 -3981.2576 4062.1382 -3981.2751 4062.27 C
-3980.5222 4062.3252 L
-3980.5745 4062.3843 L
f
-3979.7351 4062.3335 m
-3979.8545 4062.7644 -3980.2217 4062.948 -3979.9968 4063.4143 C
-3979.5481 4063.3843 -3979.6824 4063.0542 -3979.4143 4062.8672 C
-3980.1384 4062.9744 -3979.2063 4062.6272 -3979.7295 4062.3831 C
-3979.5872 4062.3096 -3979.4592 4062.2871 -3979.3384 4062.2693 C
-3979.4688 4062.2173 -3979.5945 4062.1519 -3979.7129 4062.0723 C
-3979.7063 4062.0823 -3979.7017 4062.0896 -3979.6963 4062.0991 C
-3979.6929 4062.0984 L
-3979.6929 4062.1006 -3979.6936 4062.1016 -3979.6936 4062.104 C
-3979.6624 4062.1582 -3979.6521 4062.1912 -3979.6873 4062.1604 C
-3979.6897 4062.1653 -3979.6985 4062.167 -3979.7024 4062.1692 C
-3979.7073 4062.2283 -3979.7207 4062.2808 -3979.7351 4062.3311 C
-3979.9448 4062.2422 -3979.7681 4062.22 -3979.7024 4062.1692 C
-3979.7 4062.1472 -3979.6943 4062.1272 -3979.6936 4062.104 C
-3979.6943 4062.1023 -3979.6953 4062.1006 -3979.6963 4062.0991 C
-3980.4216 4062.3352 L
-3980.2681 4062.3953 -3980.0759 4062.3831 -3979.7351 4062.3335 C
f
-3976.0952 4064.4951 m
-3976.1177 4064.4573 -3976.1167 4064.4263 -3976.1184 4064.3953 C
-3976.1653 4064.448 -3976.1831 4064.4839 -3976.0952 4064.4951 C
f
-3976.3936 4064.2351 m
-3976.3408 4064.1753 -3976.2969 4064.0032 -3976.1255 4064.0471 C
-3975.9768 4064.1763 -3976.1262 4064.2534 -3976.1184 4064.3953 C
-3976.0151 4064.2808 -3975.7568 4064.0862 -3976.0808 4063.8762 C
-3976.1321 4063.9351 L
-3976.4241 4063.7871 -3976.7993 4063.2495 -3976.7483 4063.1902 C
-3976.6631 4063.5784 -3976.5879 4063.8542 -3976.3936 4064.2351 C
f
-3978.0852 4063.3943 m
-3978.6892 4063.6055 L
-3978.3816 4063.9783 L
-3978.3972 4063.7544 L
-3978.0537 4063.8423 -3978.1279 4063.5667 -3978.0852 4063.3943 C
f
-3981.3833 4062.052 m
-3981.3032 4061.5967 L
-3981.6521 4062.24 L
-3981.3833 4062.052 L
f
-3982.1682 4062.1062 m
-3982.1392 4061.7112 L
-3982.3464 4061.9495 L
-3982.1682 4062.1062 L
f
-4026.4617 4067.0166 m
-4026.6392 4067.1287 L
-4026.5552 4067.0942 -4026.5012 4067.0564 -4026.4617 4067.0166 C
f
-4025.1768 4067.0435 m
-4025.1453 4066.8484 L
-4025.2048 4066.9558 -4025.2292 4067.0352 -4025.1768 4067.0435 C
f
-4001.4456 4062.1511 m
-4001.7041 4061.7815 -4001.9929 4061.2083 -4001.9617 4061.6536 C
-4001.8823 4062.0872 L
-4001.7017 4062.0095 -4001.5632 4062.0576 -4001.4456 4062.1511 C
f
-4014.6479 4064.7415 m
-4014.6233 4064.7832 -4014.5977 4064.8286 -4014.5723 4064.8728 C
-4014.5095 4064.7246 -4014.4504 4064.5872 -4014.3977 4064.4583 C
-4014.4729 4064.5471 -4014.5583 4064.6416 -4014.6479 4064.7415 C
f
-4014.8303 4066.5366 m
-4015.1711 4066.2566 L
-4015.0945 4066.3542 -4014.9849 4066.448 -4014.8303 4066.5366 C
f
-4033.4792 4067.4768 m
-4033.6863 4067.9182 L
-4033.3623 4067.9163 -4033.5049 4067.6936 -4033.4792 4067.4768 C
f
-3990.2073 4062.2664 m
-3990.4304 4062.0967 -3990.6079 4062.0254 -3990.7639 4062.0044 C
-3990.4951 4062.2534 -3990.2783 4062.6272 -3990.2073 4062.2664 C
f
-4025.9561 4062.4126 m
-4026.0647 4062.4912 -4026.1111 4062.5796 -4026.1079 4062.6763 C
-4025.9961 4062.6023 -4025.9329 4062.5193 -4025.9561 4062.4126 C
f
-3991.4082 4062.0059 m
-3991.3689 4062.0496 -3991.3303 4062.0713 -3991.2903 4062.1079 C
-3991.1272 4062.0352 -3990.9631 4061.9768 -3990.7639 4062.0044 C
-3990.9624 4061.8196 -3991.1897 4061.7046 -3991.4082 4062.0059 C
f
-4058.9297 4067.1172 m
-4058.9482 4067.0984 -4058.9705 4067.0884 -4058.9873 4067.0652 C
-4058.9929 4067.1243 -4058.9673 4067.1272 -4058.9297 4067.1172 C
f
-4066.3442 4062.74 m
-4066.2712 4062.7124 -4066.1521 4062.7119 -4066.0398 4062.7063 C
-4066.0945 4062.6763 -4066.1863 4062.6792 -4066.3442 4062.74 c
f
-3985.3264 4061.917 m
-3985.1599 4061.8887 -3985.3 4061.8694 -3985.3264 4061.917 C
-3985.3264 4061.917 L
f
-3984.5168 4063.6331 m
-3984.5522 4063.6814 -3984.5791 4063.7439 -3984.5833 4063.844 C
-3984.5696 4063.74 -3984.5464 4063.6736 -3984.5168 4063.6331 c
f
-3993.0664 4064.7063 m
-3993.0713 4064.7063 -3993.0752 4064.7046 -3993.0808 4064.7046 C
-3993.0313 4064.7896 -3993.0398 4064.7732 -3993.0664 4064.7063 C
f
-3985.0759 4062.1143 m
-3985.1384 4062.0613 -3985.2104 4062.0166 -3985.2888 4061.9856 C
-3985.2544 4062.0193 -3985.1897 4062.0613 -3985.0759 4062.1143 C
f
-3985.1096 4061.9092 m
-3985.0522 4061.9287 -3985.0071 4061.9395 -3984.9641 4061.9512 C
-3984.9431 4061.8792 -3984.9617 4061.8335 -3985.1096 4061.9092 C
f
-3985.5583 4061.9407 m
-3985.4631 4061.9336 -3985.3743 4061.9539 -3985.2888 4061.9856 C
-3985.3215 4061.9558 -3985.3352 4061.9319 -3985.3264 4061.917 C
-3985.3752 4061.9236 -3985.4441 4061.9326 -3985.5583 4061.9407 c
f
-4045.2932 4065.9558 m
-4045.3042 4065.9424 -4045.3169 4065.9336 -4045.3289 4065.9153 C
-4045.4968 4066.0952 -4045.4231 4066.0667 -4045.2932 4065.9558 C
f
-4005.7783 4066.6563 m
-4005.7705 4066.6519 -4005.7664 4066.6404 -4005.7593 4066.636 C
-4005.7671 4066.6311 -4005.7769 4066.625 -4005.7839 4066.6199 C
-4005.7783 4066.6563 L
f
-4006.3762 4066.979 m
-4006.1216 4066.4392 -4005.9768 4066.5056 -4005.7839 4066.6199 C
-4005.9817 4065.3694 L
-4006.3762 4066.979 L
f
*u
-4029.5383 4067.1416 m
-4029.1184 4067.532 L
-4029.6252 4068.1736 -4029.9919 4067.9524 -4029.5977 4068.5 C
-4029.5383 4067.1416 -4027.9656 4068.3616 -4027.9072 4067.0039 C
-4027.6304 4067.2896 L
-4027.7097 4067.2766 -4027.7224 4067.3562 -4027.8008 4067.3433 C
-4027.2625 4067.9934 -4027.4009 4066.3616 -4026.7073 4066.5542 C
-4026.4656 4066.6582 -4026.2969 4066.855 -4026.4617 4067.0166 C
-4025.9231 4066.6807 L
-4025.7664 4066.7073 -4025.8047 4066.9431 -4025.9607 4066.917 C
-4025.1392 4066.8086 L
-4025.1453 4066.8484 L
-4025.0281 4066.636 -4024.7625 4066.3064 -4024.6328 4066.1663 C
-4024.4241 4066.3616 -4024.7375 4066.3103 -4024.6841 4066.479 C
-4024.2292 4066.1504 L
-4024.0439 4066.5032 -4024.4209 4066.844 -4024.7351 4066.7935 C
-4024.3103 4068.1494 -4024.3577 4066.4524 -4023.4409 4067.2444 C
-4023.8704 4067.4163 L
-4023.5935 4068.1863 -4023.2583 4067.9072 -4022.7727 4068.3875 C
-4022.8879 4068.1367 -4023.7449 4067.1775 -4023.2512 4066.8391 C
-4023.1121 4066.9414 -4022.9287 4066.99 -4022.6624 4066.7168 C
-4022.6599 4067.2 -4022.3999 4067.0811 -4022.0745 4067.0535 C
-4022.0967 4067.6936 L
-4021.7449 4067.5088 -4021.7727 4067.1831 -4021.5657 4066.8953 C
-4021.1736 4066.9583 -4021.0923 4067.4536 -4021 4067.8711 C
-4020.3721 4067.9727 -4021.4336 4067.0767 -4020.6904 4066.9558 C
-4020.1682 4067.2007 -4019.8015 4066.9392 -4019.1768 4066.5564 C
-4018.8113 4066.7776 -4019.2407 4066.948 -4019.1096 4067.1311 C
-4018.7856 4066.6206 L
-4018.7063 4066.6331 -4018.7319 4066.7896 -4018.7449 4066.8687 C
-4018.4719 4066.6707 -4018.7224 4066.229 -4018.2932 4066.0559 C
-4018.1775 4065.3511 -4017.4121 4067.0852 -4016.8809 4066.2854 C
-4016.75 4066.4673 -4016.9441 4066.6775 -4016.9041 4066.9253 C
-4016.1753 4066.3999 -4016.2793 4066.5435 -4015.6809 4065.8367 C
-4015.1711 4066.2566 L
-4015.5457 4065.7766 -4015.0671 4065.2083 -4014.6479 4064.7415 C
-4014.7808 4064.5095 -4014.8943 4064.3064 -4014.9705 4064.2095 C
-4014.3015 4063.8662 L
-4014.2207 4063.9712 -4014.2881 4064.1912 -4014.3977 4064.4583 C
-4014.3521 4064.4055 -4014.3088 4064.3533 -4014.2751 4064.3047 C
-4014.0359 4064.5413 -4014.1599 4064.9104 -4014.3313 4065.2678 C
-4014.4128 4065.1416 -4014.4937 4065.0071 -4014.5723 4064.8728 C
-4014.7375 4065.2615 -4014.8921 4065.6919 -4014.8577 4066.0667 C
-4014.8142 4065.9927 -4014.7305 4065.9292 -4014.6384 4065.8936 C
-4014.6816 4065.9993 -4014.7092 4066.0935 -4014.6892 4066.1575 c
-4014.6665 4066.2246 -4014.5967 4066.0833 -4014.4873 4065.9199 C
-4014.3352 4066.6331 L
-4014.2983 4066.3499 L
-4013.4231 4066.7959 L
-4012.7969 4066.0784 -4012.2522 4065.021 -4011.2583 4064.7271 C
-4011.5049 4065.25 -4011.3113 4065.5811 -4011.3247 4066.2007 C
-4011.5959 4065.5447 -4012.0945 4066.479 -4012.6096 4066.3462 c
-4012.3408 4066.4153 -4012.3999 4066.7112 -4012.4683 4066.813 C
-4011.5496 4066.2168 L
-4011.5703 4066.7239 -4011.3545 4066.5967 -4011.1145 4066.8064 C
-4011.2959 4065.8047 -4010.4297 4066.1392 -4010.0559 4065.8323 C
-4010.0327 4066.1682 -4010.1223 4066.5122 -4010.5784 4066.4304 C
-4010.0752 4067.1848 -4009.9282 4065.2544 -4009.4343 4065.8953 C
-4009.5457 4065.9031 -4009.6057 4065.8518 -4009.6497 4066.0232 C
-4009.3896 4065.7239 -4008.7537 4065.9612 -4008.9033 4066.2534 C
-4009.0144 4066.2603 L
-4008.2751 4066.3792 -4006.7639 4066.2678 -4006.6536 4065.417 C
-4006.6462 4065.5276 -4006.7505 4066.4424 -4006.7952 4066.6143 C
-4005.4761 4063.7527 L
-4005.5923 4064.4832 -4005.1462 4066.2224 -4005.7593 4066.636 C
-4005.5833 4066.74 -4005.3655 4066.8616 -4004.9944 4066.6033 C
-4005.1145 4066.4993 -4005.2937 4065.5471 -4005.1296 4065.48 C
-4004.6792 4066.2932 -4004.8169 4065.9153 -4004.2617 4066.6084 C
-4004.4417 4066.4524 -4004.2417 4065.3064 -4003.9573 4065.3433 C
-4004.0017 4065.5144 -4003.9336 4066.4734 -4004.0376 4066.5928 C
-4003.3296 4065.4683 L
-4003.5063 4065.6707 -4003.3608 4066.4214 -4003.2024 4066.74 C
-4003.2759 4066.5193 -4002.5903 4066.76 -4002.4016 4066.6487 C
-4002.7017 4066.3875 L
-4001.9023 4066.5579 -4001.9121 4064.8064 -4001.1191 4064.8655 C
-4001.2151 4065.0974 -4001.3562 4066.2952 -4000.9529 4066.4363 C
-4000.7681 4065.8606 -4000.1345 4063.6663 -3999.4329 4063.2227 C
-3999.2983 4063.552 L
-3998.76 4063.1768 L
-3999.0952 4064.0435 -4000.0359 4065.8672 -4000.5496 4066.5767 C
-4000.2505 4066.8374 -4000.4663 4066.9656 -4000.0183 4066.9351 C
-3999.8601 4067.2439 -4000.2625 4067.4031 -4000.3943 4067.4214 C
-3999.3513 4067.6206 L
-3999.3977 4066.948 -3998.5537 4066.9463 -3998.5935 4066.3862 C
-3999.7263 4067.0833 L
-3999.7722 4066.4119 -3999.0713 4065.1753 -3998.3323 4065.2932 C
-3998.1443 4065.5613 -3998.4729 4066.49 -3998.4575 4066.7144 C
-3998.3616 4066.4832 -3997.7561 4066.2722 -3997.6882 4066.4363 C
-3998.0017 4066.7959 L
-3997.5903 4067.0486 -3997.3303 4065.9048 -3996.8359 4066.5464 C
-3996.6653 4066.5896 -3996.3264 4067.4119 -3996.2969 4067.0144 C
-3996.5752 4066.2471 -3996.6296 4063.8743 -3996.4441 4063.2979 C
-3996.3843 4063.3499 -3995.5481 4064.0313 -3995.3533 4064.4104 C
-3995.0723 4065.0122 -3995.7751 4065.844 -3995.5359 4066.3606 C
-3995.5256 4066.1768 -3995.3704 4065.9502 -3995.3057 4065.8772 C
-3995.1265 4066.0342 -3995.3799 4066.4463 -3994.9905 4066.3633 C
-3994.9255 4065.6824 -3994.1985 4066.4207 -3994.8064 4065.7871 C
-3994.4255 4065.5923 -3994.4016 4065.9282 -3993.9543 4065.8975 C
-3994.0967 4065.4573 -3993.5527 4064.3992 -3993.1711 4064.2039 C
-3993.1936 4064.3772 -3993.1079 4064.6033 -3993.0664 4064.7063 C
-3992.2856 4064.7678 -3991.8665 4065.0774 -3991.1384 4065.0833 C
-3991.0713 4065.2483 -3990.72 4065.448 -3990.8696 4065.7415 C
-3990.7649 4065.6206 -3990.6687 4065.3894 -3990.4441 4065.3733 C
-3990.0095 4065.9624 -3990.9448 4065.4646 -3990.6135 4066.1736 C
-3990.5852 4065.7776 -3990.0327 4065.6262 -3989.7129 4065.3792 C
-3989.8113 4064.7671 -3990.4519 4065.2615 -3990.7722 4065.5088 C
-3990.7737 4064.6653 -3990.2161 4063.7815 -3989.4551 4063.3911 C
-3988.8503 4063.1814 -3989.1929 4063.9363 -3989.0879 4063.8167 C
-3987.9519 4063.9639 -3988.1201 4062.3433 -3987.1768 4062.9524 C
-3986.8025 4063.4895 -3987.1599 4064.021 -3987.0769 4064.4092 C
-3987.5696 4064.6128 -3987.8333 4064.0679 -3988.1672 4064.0896 C
-3987.7561 4064.344 L
-3987.9128 4064.5232 -3988.2417 4064.6582 -3988.4209 4064.5032 C
-3988.1072 4064.9856 -3986.5017 4064.5952 -3985.6252 4065.0413 C
-3985.4695 4064.8616 -3985.2007 4064.6743 -3985.3279 4064.4583 C
-3985.6052 4064.5332 L
-3985.8601 4064.0999 -3985.0833 4063.9336 -3985.4343 4063.7312 C
-3985.0623 4063.4263 -3984.6453 4062.9473 -3984.1216 4063.1924 C
-3984.0232 4063.8054 L
-3984.0344 4063.6262 -3984.3655 4063.4407 -3984.5127 4063.6272 c
-3984.2944 4063.355 -3983.7097 4064.4573 -3983.4705 4063.6543 C
-3983.8376 4063.2295 L
-3983.4641 4062.9214 -3983.0024 4062.2703 -3982.5383 4062.4639 C
-3982.7495 4061.8584 -3982.6453 4062.5332 -3982.9751 4061.8247 C
-3982.6892 4062.7063 -3984.1624 4061.7876 -3983.7031 4062.7134 C
-3984.0415 4061.8916 -3984.2888 4062.3655 -3984.7312 4061.6638 C
-3984.7175 4061.8662 -3984.5745 4062.0513 -3984.9641 4061.9512 C
-3984.9817 4062.0103 -3985.0232 4062.0852 -3985.0496 4062.1294 C
-3985.0615 4062.1243 -3985.0657 4062.1206 -3985.0759 4062.1143 C
-3985.0681 4062.1223 -3985.0623 4062.1311 -3985.0544 4062.1382 C
-3985.0713 4062.1687 -3985.0728 4062.1753 -3985.0464 4062.1462 C
-3984.9536 4062.2356 -3984.8784 4062.3416 -3984.8479 4062.4539 C
-3985.0413 4062.9182 -3985.6609 4062.9038 -3985.8704 4063.1443 C
-3986.1016 4063.0479 -3985.7737 4062.9119 -3985.8999 4062.6963 C
-3986.2129 4063.0559 L
-3986.2439 4062.6072 -3986.8271 4062.3096 -3986.2825 4062.0464 C
-3986.7727 4062.0264 L
-3987.0613 4061.7747 -3987.4583 4061.6743 -3987.7031 4061.8633 C
-3987.9343 4061.7664 -3988.2871 4062.3606 -3988.0857 4062.0088 C
-3988.8545 4062.2871 L
-3988.8616 4062.1753 L
-3989.6201 4062.1184 -3990.4231 4062.9192 -3991.2903 4062.1079 C
-3991.5457 4062.2212 -3991.8096 4062.3599 -3992.2368 4062.2327 C
-3992.3201 4061.844 L
-3992.6479 4061.979 -3993.3047 4061.4551 -3993.4456 4061.8599 C
-3993.7993 4060.8142 -3995.0369 4061.6316 -3995.6135 4061.4463 C
-3995.6353 4061.9536 L
-3996.0322 4061.9253 -3996.4128 4062.0696 -3996.9055 4062.2727 C
-3996.8752 4062.7207 L
-3997.3 4063.0886 -3997.9673 4062.4019 -3998.6392 4062.448 C
-3998.5935 4062.2766 -3998.4231 4062.3213 -3998.3025 4062.4253 C
-3999.1052 4061.4119 -3999.9961 4063.1614 -4000.7241 4062.4236 C
-4000.9055 4062.5872 -4001.0369 4062.5313 -4001.1641 4062.4192 C
-4001.1472 4062.4175 -4001.1321 4062.4092 -4001.1191 4062.3953 C
-4001.1377 4062.3904 -4001.1653 4062.3887 -4001.1936 4062.3894 C
-4001.2737 4062.3123 -4001.3562 4062.2227 -4001.4456 4062.1511 C
-4001.3696 4062.26 -4001.2969 4062.3496 -4001.2336 4062.3911 C
-4001.3735 4062.4004 -4001.5857 4062.4558 -4001.7937 4062.5686 C
-4001.8823 4062.0872 L
-4001.8992 4062.0935 -4001.9128 4062.0923 -4001.9304 4062.1006 C
-4002.1345 4061.9231 -4002.0945 4062.3286 -4001.9856 4062.6912 C
-4002.0903 4062.77 -4002.1863 4062.8655 -4002.2607 4062.9812 C
-4002.4265 4062.2039 -4002.8064 4063.2432 -4003.0327 4062.4143 C
-4003.1729 4062.8184 -4004.0784 4062.7183 -4004.1892 4063.5696 C
-4004.1963 4063.4583 -4004.2576 4063.4055 -4004.1453 4063.3982 C
-4004.3772 4063.3015 -4004.6089 4063.2046 -4004.8169 4063.4446 C
-4004.9153 4062.8323 L
-4005.4216 4063.6553 L
-4005.7292 4063.2822 -4005.8567 4063.0652 -4005.5513 4062.5942 C
-4006.2888 4063.3196 -4006.1497 4062.8672 -4006.7769 4063.5852 C
-4006.7463 4063.1895 L
-4006.9705 4063.2046 -4007.3289 4063.7356 -4007.4641 4063.4082 C
-4007.9656 4062.6553 -4009.9456 4063.3042 -4011.2329 4062.604 C
-4010.9832 4063.77 -4011.8313 4062.0823 -4011.8823 4062.9856 C
-4011.9573 4062.7102 -4012.1367 4062.5542 -4011.9282 4062.3152 C
-4012.5852 4062.5852 -4012.9153 4061.8772 -4013.3689 4062.6392 C
-4013.4441 4062.3623 -4013.2283 4062.2356 -4013.2952 4062.0713 C
-4013.3479 4062.1311 -4013.5039 4062.3113 -4013.5723 4062.1462 c
-4013.6392 4061.9822 -4013.4761 4061.9153 -4013.3721 4061.7952 C
-4014.0432 4061.8416 -4014.1111 4062.6912 -4014.1599 4063.4883 C
-4014.5 4063.1111 -4014.6697 4063.1638 -4014.9153 4063.6873 C
-4015.0337 4063.4263 -4015.2312 4063.1536 -4014.8142 4063.0598 C
-4015.0488 4063.0215 -4016.2473 4062.6775 -4016.2712 4063.3167 C
-4016.3447 4063.1543 -4016.5991 4063.2693 -4016.6609 4063.3433 C
-4017.1873 4063.3047 -4017.2336 4063.2471 -4017.7505 4063.3079 C
-4017.6072 4063.4119 L
-4017.8113 4064.1831 -4018.0369 4063.584 -4018.4536 4063.6768 C
-4018.4417 4063.5984 L
-4019.3972 4063.0415 -4018.8542 4063.8643 -4019.7969 4063.229 C
-4019.7456 4063.709 L
-4019.8335 4064.7407 -4020.5808 4063.1006 -4021.1279 4063.4951 C
-4020.9304 4063.7693 L
-4021.2292 4064.1223 -4021.7656 4062.3662 -4022.0657 4062.2371 C
-4022.1311 4062.1472 -4021.9624 4062.0935 -4021.8711 4062.0276 C
-4022.6567 4061.4182 -4021.9729 4062.6553 -4022.5583 4062.8015 C
-4022.6663 4062.4624 -4022.4192 4061.9392 -4022.8132 4061.8762 C
-4023.0095 4061.6023 -4023.9561 4062.9768 -4024.4937 4062.3267 C
-4024.3752 4062.5879 -4024.2576 4062.8484 -4024.5295 4063.0447 C
-4024.9463 4063.1382 -4025.6563 4062.0579 -4026.0327 4062.8816 C
-4026.0857 4062.8096 -4026.1057 4062.7415 -4026.1079 4062.6763 C
-4026.4265 4062.8887 -4027.1433 4063.0291 -4027.3352 4063.4756 C
-4027.6296 4061.8191 -4029.3159 4064.2815 -4029.3088 4062.7534 C
-4030.2888 4062.8352 L
-4030.2632 4062.6792 L
-4030.8896 4062.5784 -4031.1111 4062.9446 -4031.3313 4063.3113 C
-4031.4761 4063.2073 -4031.3704 4063.0642 -4031.3584 4062.9846 C
-4032.2737 4062.6763 -4032.3647 4062.7415 -4033.1321 4063.5032 C
-4033.2119 4063.0071 L
-4033.4199 4063.2952 -4034.5352 4062.2295 -4035.4329 4062.8079 C
-4035.4241 4062.751 -4035.4055 4062.6553 -4035.3342 4062.5852 C
-4036.3442 4063.167 -4037.7522 4061.2112 -4038.1223 4063.0159 C
-4038.7888 4063.4607 L
-4037.9265 4063.6006 -4038.9172 4064.2444 -4038.5625 4064.5435 C
-4038.9016 4064.6494 -4039.4392 4063.9993 -4039.0225 4063.9063 C
-4038.9573 4063.9966 L
-4038.8042 4063.0559 -4040.0288 4063.6631 -4040.0056 4063.0222 C
-4041.7024 4063.0696 -4043.3562 4062.5479 -4044.9456 4062.5078 C
-4044.7625 4063.2393 L
-4045.3169 4063.1975 L
-4045.4624 4063.0276 -4045.5122 4062.625 -4045.1167 4062.6553 C
-4045.3247 4062.2407 -4045.78 4063.0032 -4045.7913 4063.1614 C
-4046.5657 4062.8655 -4045.4888 4062.3086 -4045.7263 4062.2913 C
-4046.0488 4062.3455 L
-4045.9761 4062.4312 L
-4046.2375 4062.73 -4046.2607 4063.0471 -4046.7361 4063.0112 C
-4047.0369 4062.8643 -4046.8904 4062.5598 -4047.0088 4062.532 C
-4047.0081 4062.479 -4047.0481 4062.4551 -4047.1904 4062.5103 C
-4047.8889 4062.448 L
-4047.6096 4063.0254 L
-4047.9192 4063.3103 -4048.2664 4062.9951 -4047.9441 4063.6494 c
-4048.4172 4062.6404 -4050.5496 4063.2871 -4050.8401 4062.9744 C
-4051.2737 4063.3953 -4051.7017 4063.3875 -4052.2319 4063.3367 C
-4052.1001 4063.4573 -4052.0212 4064.1062 -4052.4785 4064.0271 C
-4052.3113 4062.6873 -4053.3159 4063.4456 -4053.6855 4062.4812 C
-4053.3552 4063.1206 -4054.9856 4062.6392 -4054.4673 4063.5471 C
-4054.8489 4063.4382 -4054.4905 4063.0454 -4054.78 4062.73 C
-4055.6882 4063.2493 -4056.7815 4062.3926 -4057.9041 4062.5679 C
-4057.9216 4062.7444 -4057.7336 4063.0127 -4057.9744 4063.2747 C
-4058.5671 4062.3953 L
-4058.7888 4062.4812 -4058.7712 4063.4104 -4059.1763 4062.8 C
-4059.1191 4062.948 -4059.0337 4063.1707 -4059.1824 4063.2271 C
-4061.3816 4062.3704 -4063.6763 4063.9292 -4065.9097 4062.3191 C
-4065.6072 4062.6604 -4065.8088 4062.6936 -4066.0398 4062.7063 C
-4065.8896 4062.7876 -4066.0432 4063.1404 -4066.0137 4063.3792 C
-4066.9487 4062.7168 L
-4067.1191 4063.3784 -4067.9512 4062.7615 -4068.0488 4063.3943 C
-4067.7527 4063.28 L
-4068.1465 4064.0271 -4067.2017 4064.9395 -4067.2593 4065.8975 C
-4066.8184 4065.0486 -4066.0967 4067.1543 -4065.3733 4065.9395 C
-4065.2136 4066.1353 -4065.5095 4066.2483 -4065.4241 4066.4702 C
-4065.2407 4066.0598 -4065.0193 4065.9744 -4064.6089 4066.1582 C
-4064.6553 4066.26 L
-4063.5024 4066.1599 -4063.0081 4066.5647 -4061.7129 4066.8342 C
-4061.8088 4066.3606 L
-4061.5305 4066.4236 -4061.4719 4066.5723 -4061.3416 4066.6912 C
-4061.0222 4065.9727 -4062.1233 4066.6504 -4061.8323 4065.8584 C
-4061.4631 4066.8223 -4059.8696 4065.8728 -4059.6201 4066.9683 C
-4059.1919 4066.9744 -4059.7456 4066.4199 -4059.3176 4066.4263 C
-4059.2041 4066.7227 L
-4059.0959 4066.3408 L
-4058.8152 4066.4038 -4058.6736 4066.7747 -4058.6631 4067.0254 C
-4058.7312 4066.9956 -4058.8567 4067.0955 -4058.9297 4067.1172 C
-4058.5657 4067.4663 -4057.9033 4066.9983 -4057.7783 4067.1118 C
-4058.1897 4066.9292 L
-4057.0212 4066.6519 -4055.5945 4067.0413 -4054.4656 4066.4382 C
-4054.5513 4066.2151 L
-4053.6892 4065.8015 -4053.8608 4066.4607 -4052.9143 4066.2693 C
-4052.9487 4066.3223 L
-4052.7593 4066.0999 -4052.5063 4065.9871 -4052.2473 4066.0127 C
-4052.4863 4066.2747 -4051.7976 4066.521 -4052.1111 4066.8113 C
-4051.1763 4066.3672 -4051.6487 4066.4624 -4051.0313 4065.6316 C
-4050.8889 4066.0032 L
-4050.6785 4065.667 -4050.6609 4065.49 -4050.1882 4065.3943 C
-4050.5759 4065.7124 -4049.8865 4065.959 -4050.3208 4066.3799 C
-4049.3289 4067.1912 -4048.8479 4065.5613 -4048.3928 4066.7471 C
-4047.9373 4065.7207 -4049.2512 4066.1775 -4048.9961 4065.9575 C
-4049.2097 4065.6223 -4048.6201 4065.1902 -4048.3088 4065.2932 C
-4047.9919 4065.3167 -4047.77 4066.6072 -4046.9729 4066.5872 C
-4047.0522 4066.5823 -4047.0576 4066.6604 -4047.1367 4066.6553 C
-4046.8384 4066.917 -4046.5522 4066.3008 -4046.1863 4066.7263 C
-4045.9812 4066.105 -4045.7112 4066.7615 -4045.6521 4065.9702 C
-4046.3833 4066.1536 L
-4045.9688 4065.9463 -4045.5801 4065.02 -4044.8972 4065.4695 C
-4044.9504 4065.6287 -4045.1536 4065.8391 -4045.2932 4065.9558 C
-4045.0935 4066.1895 -4044.9087 4065.8015 -4044.7017 4066.0413 C
-4044.7607 4066.8335 -4045.5903 4066.2134 -4046.0344 4066.8174 C
-4045.8201 4067.1519 -4045.1943 4066.2439 -4045.4175 4067.1016 c
-4045.0967 4066.0112 -4044.6321 4067.24 -4044.0923 4066.4063 C
-4044.1279 4066.8806 L
-4044.0425 4066.8064 -4043.8655 4066.5823 -4043.7083 4066.5942 C
-4043.9929 4067.2095 L
-4043.5559 4066.6848 -4043.1504 4067.6692 -4042.7312 4067.3831 C
-4043.6089 4067.3975 -4042.9282 4066.8113 -4043.2993 4066.4646 C
-4042.2168 4065.8296 -4042.6768 4067.7063 -4041.4648 4067.4783 C
-4041.6289 4067.5454 -4042.0808 4067.1936 -4041.8242 4066.9734 C
-4041.5935 4067.0713 -4041.2888 4067.2534 -4041.1472 4067.5032 C
-4040.3442 4067.4038 -4041.2705 4067.0144 -4040.9287 4066.7224 C
-4040.6553 4067.3008 -4040.5344 4066.4871 -4040.1824 4066.3022 C
-4040.1799 4066.7847 L
-4039.2649 4067.0942 -4039.9373 4065.7791 -4039.1135 4066.1536 C
-4039.4617 4066.8223 L
-4039.0322 4066.6494 L
-4039.1208 4067.1982 L
-4038.6536 4066.7913 -4038.5081 4066.896 -4038.0503 4067.0503 C
-4038.1567 4066.7112 -4037.9905 4066.1753 -4037.5852 4066.1599 C
-4037.3088 4066.4463 -4037.74 4066.6184 -4037.1655 4066.5496 C
-4037.2952 4066.8511 -4037.4373 4067.23 -4037.6873 4066.7864 C
-4037.7129 4066.9436 -4037.8152 4067.0884 -4037.8416 4067.2444 C
-4037.5439 4067.5735 -4037.0935 4067.3191 -4036.8855 4067.3142 C
-4036.9656 4067.2964 -4037.0613 4067.2703 -4037.1104 4067.2024 C
-4036.2776 4066.5332 L
-4036.1465 4066.7144 -4036.2505 4066.8599 -4036.3535 4067.0032 C
-4036.1848 4066.9502 -4036.0681 4066.7283 -4035.8201 4066.6873 C
-4035.8843 4067.0791 -4035.8689 4067.4839 -4036.22 4067.6687 C
-4035.4265 4067.2334 L
-4035.3735 4067.4038 -4035.0193 4067.7024 -4035.1223 4067.8462 C
-4034.6824 4068.0767 -4034.0432 4067.0852 -4033.46 4067.3894 C
-4033.4297 4067.3135 -4033.3689 4067.2407 -4033.2449 4067.1848 C
-4032.6968 4067.2732 -4032.2112 4067.7544 -4031.5615 4067.2173 C
-4031.1929 4067.9199 L
-4030.6841 4067.7603 -4031.6919 4067.0342 -4030.8447 4066.7693 C
-4030.2449 4066.5447 -4030.6208 4067.3687 -4030.4104 4067.5642 C
-4030.1121 4067.2102 -4029.5935 4066.4888 -4029.0425 4067.0613 C
-4029.2249 4067.1936 -4029.3679 4067.0896 -4029.5383 4067.1416 C
f
1 D
-4023.2632 4066.8303 m
-4023.3848 4066.9312 -4023.6272 4067.2439 -4023.7161 4066.959 C
-4023.5776 4066.4063 -4023.4705 4066.6707 -4023.2632 4066.8303 C
f
-4013.7241 4065.6692 m
-4013.8145 4065.8279 -4013.9543 4065.7493 -4014.1121 4065.5667 C
-4013.9976 4065.5271 -4013.8679 4065.5447 -4013.7241 4065.6692 C
f
-3987.1511 4062.3096 m
-3987.1563 4062.3174 -3987.1599 4062.3232 -3987.1641 4062.3333 C
-3987.4353 4062.1453 -3987.3391 4062.22 -3987.1511 4062.3096 C
f
0 D
-3986.5879 4062.5193 m
-3986.5313 4062.4524 -3986.5352 4062.3848 -3986.5591 4062.3174 C
-3986.5984 4062.4392 -3986.7249 4062.448 -3986.8689 4062.4136 C
-3986.8289 4062.5398 -3986.7561 4062.6272 -3986.5879 4062.5193 C
f
1 D
-4047.0713 4062.709 m
-4046.9617 4062.8352 L
-4047.2092 4062.9744 -4047.1399 4062.8484 -4047.0713 4062.709 C
f
*U
0 D
-4014.8057 4066.3286 m
-4014.8401 4066.2471 -4014.8496 4066.1575 -4014.8577 4066.0667 C
-4014.9055 4066.1475 -4014.9065 4066.2415 -4014.8057 4066.3286 C
f
-4033.4409 4067.3953 m
-4033.4473 4067.3911 -4033.4536 4067.3926 -4033.46 4067.3894 C
-4033.4705 4067.4182 -4033.4761 4067.448 -4033.4792 4067.4768 C
-4033.4409 4067.3953 L
f
-3995.3123 4066.6096 m
-3995.4282 4066.5398 -3995.4929 4066.4524 -3995.5359 4066.3606 C
-3995.5422 4066.4783 -3995.4895 4066.5784 -3995.3123 4066.6096 C
f
-3983.6033 4061.6992 m
-3983.9641 4061.8247 L
-3983.7896 4061.8008 -3983.7273 4061.9063 -3983.6392 4061.9832 C
-3983.6472 4061.8704 -3983.7161 4061.7073 -3983.6033 4061.6992 C
f
-3980.4719 4064.6848 m
-3980.4192 4064.6255 -3980.3601 4064.6782 -3980.3081 4064.6184 C
-3980.3225 4064.3943 L
-3980.5471 4064.4087 -3980.7041 4064.5896 -3980.4719 4064.6848 C
f
-3983.2693 4063.3022 m
-3983.2407 4063.7083 -3983.0144 4063.5703 -3982.7617 4063.4951 C
-3982.7769 4063.4966 -3982.7913 4063.5 -3982.8064 4063.4951 C
-3982.7319 4062.9282 -3983.0012 4063.1152 -3983.2693 4063.3022 C
f
-3982.7031 4063.4812 m
-3982.6252 4063.4624 -3982.5457 4063.4524 -3982.4695 4063.4712 C
-3982.4399 4063.2439 -3982.5642 4063.4236 -3982.7031 4063.4812 C
f
-3985.8735 4062.25 m
-3985.7537 4062.3542 -3985.7983 4061.7312 -3985.7305 4061.896 C
-3985.5967 4061.3799 -3986.5295 4062.521 -3985.8735 4062.25 C
f
-3983.0647 4064.6392 m
-3983.1553 4064.1382 L
-3983.2969 4064.5422 L
-3983.0647 4064.6392 L
f
-3985.0601 4064.271 m
-3984.6563 4064.4104 L
-3984.6624 4064.3264 -3984.6111 4064.2776 -3984.5481 4064.24 C
-3984.7969 4064.2224 -3985.0696 4064.1233 -3985.0601 4064.271 C
f
-3984.5481 4064.24 m
-3984.4185 4064.2493 -3984.2952 4064.2383 -3984.2231 4064.1563 C
-3984.2932 4064.1614 -3984.4441 4064.1782 -3984.5481 4064.24 C
f
-3983.6167 4064.7896 m
-3983.7361 4064.6851 L
-3984.0212 4064.6487 L
-3983.6167 4064.7896 L
f
-3989.4009 4064.1753 m
-3989.8416 4064.3184 L
-3989.8865 4064.49 -3989.7664 4064.5952 -3989.6023 4064.5271 C
-3989.4968 4064.4072 -3989.3333 4064.3408 -3989.4009 4064.1753 C
f
-3988.0681 4065.5471 m
-3988.1873 4065.4431 -3988.1953 4065.3311 -3988.2625 4065.1663 C
-3988.2759 4065.7871 L
-3988.0681 4065.5471 L
f
-3989.3533 4065.6919 m
-3989.3972 4065.8643 -3989.9929 4066.1863 -3989.4343 4066.1475 C
-3989.3896 4065.9768 -3988.9482 4065.8335 -3989.3533 4065.6919 C
f
-3995.9937 4064.9063 m
-3995.8816 4064.8982 L
-3995.8977 4063.8799 L
-3995.9937 4064.9063 L
f
-4001.8464 4067.3433 m
-4001.3242 4067.5872 -4001.7224 4066.7144 -4001.2505 4067.0193 C
-4001.1279 4066.7783 -4001.6362 4066.7703 -4001.5105 4066.5623 C
-4001.8257 4066.8167 -4001.9912 4066.6736 -4001.8464 4067.3433 C
f
-4001.5105 4066.5623 m
-4001.46 4066.5222 -4001.4065 4066.4734 -4001.3496 4066.4082 C
-4001.4409 4066.4712 -4001.4839 4066.52 -4001.5105 4066.5623 C
f
-4067.5745 4062.1924 m
-4067.9104 4061.98 L
-4067.6936 4062.3223 L
-4067.5745 4062.1924 L
f
-4068.2192 4062.948 m
-4068.2983 4062.2991 L
-4068.5 4062.8862 L
-4068.4241 4062.8574 -4068.2769 4062.8015 -4068.2192 4062.948 C
f
-4022.3303 4068.1375 m
-4022.3047 4067.9812 L
-4022.3567 4067.8123 -4022.4353 4067.8 -4022.5928 4067.7732 C
-4022.3303 4068.1375 L
f
-4026.8848 4067.6519 m
-4026.8064 4067.6653 L
-4026.9529 4067.0784 L
-4026.8848 4067.6519 L
f
-4030.7073 4068.4004 m
-4030.5513 4068.4253 -4030.3679 4068.2942 -4030.2112 4068.3196 C
-4030.5513 4068.4253 -4030.7495 4067.6692 -4030.7073 4068.4004 C
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
1 Ap
0 J 0 j 1 w 10 M []0 d0 XR
-7913.4036 7941 m
-7940.5408 7941 L
-7940.5408 7920.9818 L
-7913.4036 7920.9818 L
-7913.4036 7941 L
n
0 Ap
0 O
0.552789 0.312596 0.218509 0.000153 0.513725 0.6 0.694118 Xa
4 M-7941 7941 m
-7913 7941 L
-7913 7934.2663 L
-7941 7934.2663 L
-7941 7941 L
f
0.209445 0.098573 0.113039 0 0.784314 0.823529 0.847059 Xa
-7941 7934.2687 m
-7913 7934.2687 L
-7913 7933.1079 L
-7941 7933.1079 L
-7941 7934.2687 L
f
0.38291 0.19675 0.130556 0 0.627451 0.701961 0.792157 Xa
-7913 7933.1079 m
-7913 7920.9818 L
-7941 7920.9818 L
-7941 7933.1079 L
-7913 7933.1079 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 10 M []0 d0 XR
-7941 7941 m
-7913 7941 L
-7913 7913 L
-7941 7913 L
-7941 7941 L
n
u
q
-7913.4592 7917.0187 m
-7937.0369 7917.0187 l
-7917.0187 7937.0369 l
-7913.4592 7937.0369 l
-7913.4592 7917.0187 l
h
W
n
0 O
0.552789 0.312596 0.218509 0.000153 0.513725 0.6 0.694118 Xa
4 M-7913 7917.0187 m
-7941 7917.0187 L
-7941 7923.7523 L
-7913 7923.7523 L
-7913 7917.0187 L
f
0.209445 0.098573 0.113039 0 0.784314 0.823529 0.847059 Xa
-7913 7923.7499 m
-7941 7923.7499 L
-7941 7924.9108 L
-7913 7924.9108 L
-7913 7923.7499 L
f
0.38291 0.19675 0.130556 0 0.627451 0.701961 0.792157 Xa
-7941 7924.9108 m
-7941 7937.0369 L
-7913 7937.0369 L
-7913 7924.9108 L
-7941 7924.9108 L
f
Q
0 A
q
0 J 0 j 1 w 10 M []0 d0 XR
-7937.0369 7940.5964 m
-7937.0369 7917.0187 l
-7917.0187 7937.0369 l
-7917.0187 7940.5964 l
-7937.0369 7940.5964 l
h
W
n
0 O
0.552789 0.312596 0.218509 0.000153 0.513725 0.6 0.694118 Xa
4 M-7937.0369 7913 m
-7937.0369 7941 L
-7930.3032 7941 L
-7930.3032 7913 L
-7937.0369 7913 L
f
0.209445 0.098573 0.113039 0 0.784314 0.823529 0.847059 Xa
-7930.3056 7913 m
-7930.3056 7941 L
-7929.1448 7941 L
-7929.1448 7913 L
-7930.3056 7913 L
f
0.38291 0.19675 0.130556 0 0.627451 0.701961 0.792157 Xa
-7929.1448 7941 m
-7917.0187 7941 L
-7917.0187 7913 L
-7929.1448 7913 L
-7929.1448 7941 L
f
Q
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)0 A
u
0 J 0 j 1 w 10 M []0 d0 XR
-7941 7941 m
-7913 7941 L
-7913 7913 L
-7941 7913 L
-7941 7941 L
n
u
q
-7916.9631 7940.5408 m
-7916.9631 7936.9813 l
-7936.9813 7916.9631 l
-7936.9813 7940.5408 l
-7916.9631 7940.5408 l
h
W
n
0 O
0.552789 0.312596 0.218509 0.000153 0.513725 0.6 0.694118 Xa
4 M-7916.9631 7941 m
-7916.9631 7913 L
-7923.6968 7913 L
-7923.6968 7941 L
-7916.9631 7941 L
f
0.209445 0.098573 0.113039 0 0.784314 0.823529 0.847059 Xa
-7923.6944 7941 m
-7923.6944 7913 L
-7924.8552 7913 L
-7924.8552 7941 L
-7923.6944 7941 L
f
0.38291 0.19675 0.130556 0 0.627451 0.701961 0.792157 Xa
-7924.8552 7913 m
-7936.9813 7913 L
-7936.9813 7941 L
-7924.8552 7941 L
-7924.8552 7913 L
f
Q
0 A
q
0 J 0 j 1 w 10 M []0 d0 XR
-7913.4036 7936.9813 m
-7916.9631 7936.9813 l
-7936.9813 7916.9631 l
-7913.4036 7916.9631 l
-7913.4036 7936.9813 l
h
W
n
0 O
0.552789 0.312596 0.218509 0.000153 0.513725 0.6 0.694118 Xa
4 M-7941 7936.9813 m
-7913 7936.9813 L
-7913 7930.2477 L
-7941 7930.2477 L
-7941 7936.9813 L
f
0.209445 0.098573 0.113039 0 0.784314 0.823529 0.847059 Xa
-7941 7930.2501 m
-7913 7930.2501 L
-7913 7929.0892 L
-7941 7929.0892 L
-7941 7930.2501 L
f
0.38291 0.19675 0.130556 0 0.627451 0.701961 0.792157 Xa
-7913 7929.0892 m
-7913 7916.9631 L
-7941 7916.9631 L
-7941 7929.0892 L
-7913 7929.0892 L
f
Q
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Calligraphi) -
(c Brush Tool/ 10 pt. Round/ Adobe Calligraphic Brush Tool/ 3 p) -
(t. Oval/ Adobe ArtOnPath Brush Tool/ Charcoal - Feather/ Adobe) -
( PatternOnPath Brush Tool/ Silver/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt. Round)
(1 10 10 100 100 0 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Oval)
(1 3 3 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal - Feather)
(1 / Unnamed 6/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.580072 0.46009 0.410468 0.949004 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.580072 0.46009 0.410468 0.949004 0 0 0 Xa
(Black)
Pc
0 1 0.958312 0 1 0 0 Xa
(RGB Red)
Pc
0.08191 0 0.971221 0 1 1 0 Xa
(RGB Yellow)
Pc
0.914702 0 1 0 0 1 0 Xa
(RGB Green)
Pc
0.901488 0 0.195468 0 0 1 1 Xa
(RGB Cyan)
Pc
0.825589 0.721035 0 0 0 0 1 Xa
(RGB Blue)
Pc
0.170474 0.805814 0 0 1 0 1 Xa
(RGB Magenta)
Pc
0.131624 1 1 0.008087 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0 1 1 0 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0 0.792752 1 0 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0 0.459541 1 0 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0 0.320439 0.898039 0 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.051179 0.015778 1 0 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.2056 0.015259 1 0 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.58999 0 1 0 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
1 0 1 0 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
1 0.234318 1 0.027466 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.970275 0.34699 0.847318 0.235203 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
1 0 0.836393 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
1 0.08423 0.50106 0 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
1 0.115328 0.094636 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
1 0.540642 0.124697 0.000824 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.985229 1 0.112062 0.085634 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
0.890959 0.952727 0.188388 0.368994 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.651209 1 0.125124 0.05005 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.416632 1 0.157443 0.008759 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.273014 1 0.463264 0.077607 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.052552 1 0.557702 0 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0 1 0.259709 0 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.189059 0.261295 0.391821 0 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.349279 0.430365 0.55465 0.045075 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.411078 0.521691 0.653101 0.217868 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.449744 0.574243 0.633936 0.406958 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.172671 0.380774 0.671656 0 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.251682 0.515831 0.854429 0.053925 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.281285 0.625147 1 0.16025 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.314427 0.687434 1 0.279454 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.347692 0.727779 0.918486 0.405402 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.426764 0.70721 0.667658 0.598657 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black)
Pc
Bb
2 (Gold Dust) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Gold Dust)
Pc
Bb
2 (Blue Sky) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Blue Sky)
Pc
(Jive) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Jive)
Pc
0.780667 0 0.247166 0 0.396078 0.784314 0.815686 Xa
(C=56 M=0 Y=20 K=0)
Pc
0.525719 0.427405 0.028229 0 0.513725 0.545098 0.772549 Xa
(C=51 M=43 Y=0 K=0)
Pc
0.221866 0.399634 0.016449 0 0.729412 0.607843 0.788235 Xa
(C=26 M=41 Y=0 K=0)
Pc
0.580072 0.46009 0.410468 0.949004 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.594324 0.507988 0.467597 0.836484 0.101961 0.101961 0.101961 Xa
(R=26 G=26 B=26)
Pc
0.6 0.545098 0.53109 0.57525 0.2 0.2 0.2 Xa
(R=51 G=51 B=51)
Pc
0.594812 0.528313 0.545098 0.361883 0.301961 0.301961 0.301961 Xa
(R=77 G=77 B=77)
Pc
0.567254 0.491829 0.512352 0.191745 0.4 0.4 0.4 Xa
(R=102 G=102 B=102)
Pc
0.498665 0.422889 0.442512 0.059083 0.501961 0.501961 0.501961 Xa
(R=128 G=128 B=128)
Pc
0.406043 0.33048 0.351141 0.002319 0.6 0.6 0.6 Xa
(R=153 G=153 B=153)
Pc
0.284245 0.221683 0.241306 0 0.701961 0.701961 0.701961 Xa
(R=179 G=179 B=179)
Pc
0.179202 0.132662 0.153506 0 0.8 0.8 0.8 Xa
(R=204 G=204 B=204)
Pc
0.079377 0.057588 0.067994 0 0.901961 0.901961 0.901961 Xa
(R=230 G=230 B=230)
Pc
0.036713 0.02475 0.032013 0 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=242)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 10 M []0 d0 XR
500 -500 m
0 -500 L
0 0 L
500 0 L
500 -500 L
f
u
0 Ap
0.580072 0.46009 0.410468 0.949004 0 0 0 Xa
36.4812 -90.8741 m
44.5151 -90.2331 45.47 -89.9148 v
46.4249 -89.5965 48.0547 -87.3888 52.1926 -89.5108 C
56.7549 -90.3596 60.0631 -90.3479 60.6997 -89.3509 c
61.3363 -88.3539 61.558 -83.3113 62.3007 -82.8869 c
63.0434 -82.4625 64.958 -82.3589 65.0641 -80.4491 c
65.1702 -78.5393 67.2946 -73.0234 68.3556 -72.2807 c
69.4166 -71.538 68.569 -68.674 69.3117 -67.8252 c
70.0544 -66.9764 71.0099 -66.9767 71.3282 -75.0403 c
71.6465 -83.1038 71.9651 -89.5748 72.7078 -89.9998 c
73.4505 -90.4249 73.3445 -64.0061 74.1933 -64.0061 c
75.0421 -64.0061 75.9971 -87.9847 76.8459 -88.5152 c
77.6947 -89.0457 78.013 -81.1943 78.7557 -81.1943 c
79.4984 -81.1943 79.9228 -89.8933 80.5594 -90 c
81.196 -90.1067 81.4082 -74.404 82.257 -74.1918 c
83.1058 -73.9796 83.4241 -80.6639 84.1668 -81.0883 c
84.9095 -81.5126 85.2278 -75.6772 86.0766 -75.465 c
86.9254 -75.2528 86.9254 -87.8786 87.8803 -88.6213 c
88.8352 -89.364 93.7158 -89.8945 94.5646 -89.2579 c
95.4134 -88.6213 94.7768 -78.8602 96.05 -78.3297 c
97.3232 -77.7992 97.2171 -86.0749 98.2781 -86.4993 c
99.3391 -86.9237 100.0818 -89.7872 100.9306 -90 c
101.7794 -90.2128 102.6282 -71.8576 103.477 -72.8125 c
104.3258 -73.7674 104.7502 -81.3005 105.7051 -81.6188 c
106.66 -81.9371 107.9332 -85.9688 108.5698 -86.7115 c
109.2064 -87.4542 110.2674 -90.3177 110.6918 -90 c
111.1162 -89.6823 111.7528 -83.8468 112.1772 -83.8468 c
112.6016 -83.8468 112.0711 -87.242 113.4504 -87.7725 c
114.8296 -88.303 116.2089 -56.4731 117.0577 -57.2158 c
117.9065 -57.9585 118.7553 -78.3297 119.6041 -78.7541 c
120.4529 -79.1785 120.7712 -65.8099 121.5139 -66.0221 c
122.2566 -66.2343 123.2115 -88.7274 124.3786 -88.9396 c
125.5457 -89.1518 126.2884 -65.8099 127.0311 -66.2343 c
127.7738 -66.6587 127.7738 -89.8933 128.1982 -90 c
128.6226 -90.1067 128.9409 -61.9903 129.5775 -61.2476 c
130.2141 -60.5049 133.8215 -82.6797 134.352 -83.2102 c
134.8825 -83.7407 135.413 -64.1123 136.2618 -63.9001 c
137.1106 -63.6879 138.0655 -86.181 138.596 -86.7115 c
139.1265 -87.242 139.7631 -69.5234 141.0363 -69.099 c
142.3095 -68.6746 142.3095 -72.3881 143.1583 -72.8125 c
144.0071 -73.2369 144.2193 -67.4014 145.1742 -68.038 c
146.129 -68.6746 147.9327 -82.6797 148.9937 -82.998 c
150.0547 -83.3163 150.7974 -77.6931 151.5401 -78.5419 c
152.2828 -79.3907 152.2828 -89.8933 153.556 -90 c
154.8292 -90.1067 156.9512 -88.6213 157.9061 -88.7274 c
158.861 -88.8335 160.7708 -90.4308 161.9379 -90.1401 c
163.105 -89.8494 165.9697 -89.6823 166.5002 -87.6664 c
167.0307 -85.6505 167.5612 -70.16 168.3039 -69.8417 c
169.0466 -69.5234 169.471 -81.4066 170.6381 -82.2554 c
171.8052 -83.1041 172.4418 -73.0247 173.2906 -72.6003 c
174.1394 -72.1759 174.4577 -78.9663 175.2004 -79.3907 c
175.9431 -79.8151 177.7468 -88.7274 178.5955 -89.4701 c
179.4443 -90.2128 179.4443 -68.7807 180.7175 -68.2502 c
181.9907 -67.7197 181.9907 -89.2567 182.9456 -90 c
183.9005 -90.7433 184.2188 -67.1892 184.8554 -67.0831 c
185.492 -66.977 186.2347 -84.3773 187.1896 -84.9078 c
188.1445 -85.4383 188.2506 -76.6321 189.0994 -76.2077 c
189.9482 -75.7833 190.1604 -79.3907 190.797 -79.8151 c
191.4336 -80.2395 191.4336 -73.9619 192.1763 -74.1829 c
192.919 -74.404 193.1312 -85.2261 194.1922 -85.6505 c
195.2532 -86.0749 194.8288 -73.6613 195.8898 -73.2369 c
196.9508 -72.8125 197.5874 -79.3907 198.6484 -79.8151 c
199.7094 -80.2395 200.0277 -73.1308 200.8765 -72.7064 c
201.7253 -72.282 203.4229 -82.5736 204.3778 -83.1041 c
205.3327 -83.6346 205.3327 -68.2502 206.3937 -67.8258 c
207.4547 -67.4014 208.7279 -85.4383 209.3645 -85.8627 c
210.0011 -86.2871 209.6828 -66.7648 210.4254 -66.977 c
211.1681 -67.1892 211.4864 -74.7223 212.123 -75.6772 c
212.7596 -76.6321 213.5023 -89.7872 214.6694 -90 c
215.8365 -90.2128 217.1097 -68.8868 218.0646 -68.038 c
219.0195 -67.1892 218.8073 -79.1785 219.9744 -79.709 c
221.1415 -80.2395 221.3537 -65.5977 222.6269 -65.5977 c
223.9001 -65.5977 223.2635 -79.709 224.5367 -80.3456 c
225.8099 -80.9822 231.0088 -80.77 233.2369 -87.3481 C
233.7674 -88.9396 234.8284 -87.1359 234.9345 -84.9078 c
235.0406 -82.6797 236.526 -76.8443 237.7992 -76.8443 c
239.0724 -76.8443 238.5419 -78.8602 239.709 -79.1785 c
240.8761 -79.4968 241.831 -75.8894 243.2102 -76.3138 c
244.5895 -76.7382 248.4079 -88.9396 250 -89.1518 c
251.5921 -89.364 250.7433 -73.2369 252.1226 -72.8125 c
253.5019 -72.3881 254.1385 -88.7274 255.5178 -89.4701 c
256.8971 -90.2128 259.7618 -86.8176 260.3984 -80.4517 c
261.035 -74.0857 263.0509 -71.6454 264.218 -71.5393 c
265.3851 -71.4332 265.9156 -90.3177 267.0827 -90 c
268.2498 -89.6823 268.9925 -73.4491 269.8413 -72.8125 c
270.6901 -72.1759 272.2816 -75.1467 273.3426 -75.6772 c
274.4036 -76.2077 277.2682 -78.648 277.3743 -80.3456 c
277.4804 -82.0432 278.117 -88.9396 279.178 -88.6213 c
280.239 -88.303 280.7695 -81.831 281.4061 -81.7249 c
282.0427 -81.6188 281.7244 -85.2261 282.7854 -85.5444 c
283.8464 -85.8627 283.2098 -63.1574 284.483 -63.9001 c
285.7562 -64.6428 285.7562 -88.5152 286.8172 -88.8335 c
287.8782 -89.1518 287.666 -65.2794 288.5148 -65.7038 c
289.3636 -66.1282 289.788 -77.587 290.3185 -77.6931 c
290.849 -77.7992 291.0612 -74.2979 292.0161 -74.7223 c
292.971 -75.1467 292.971 -83.3163 293.8198 -83.6346 c
294.6686 -83.9529 294.8808 -68.2502 296.154 -67.7197 c
297.4272 -67.1892 299.1248 -84.3773 300.5041 -85.2261 c
301.8834 -86.0749 304.7481 -84.1651 305.2786 -76.9504 c
305.8091 -69.7356 306.3396 -65.2794 307.0822 -66.5526 c
307.8249 -67.8258 306.5518 -80.8761 308.4615 -81.4066 c
310.3713 -81.9371 309.9469 -76.526 310.5835 -76.526 c
311.2201 -76.526 311.3262 -81.5127 312.0689 -81.7249 c
312.8116 -81.9371 313.6604 -66.5526 314.9336 -67.2953 c
316.2068 -68.038 317.9044 -83.6346 319.0715 -83.8468 c
320.2386 -84.059 322.6789 -69.4173 323.6338 -70.3722 c
324.5887 -71.3271 326.9229 -90.2116 327.7717 -90 c
328.6205 -89.7884 332.334 -86.2871 334.0316 -85.7566 c
335.7292 -85.2261 337.8512 -90.1055 338.806 -90 c
339.7609 -89.8945 342.4134 -74.7046 343.5805 -74.1829 c
344.7476 -73.6613 345.172 -87.4542 346.8696 -87.8786 c
348.5672 -88.303 348.1428 -68.8868 349.7343 -68.6746 c
351.3258 -68.4624 351.9624 -89.2128 353.1295 -89.6372 c
354.2966 -90.0616 354.8271 -85.7566 355.4637 -85.5444 c
356.1003 -85.3322 357.6918 -85.12 357.904 -82.6797 c
358.1162 -80.2395 359.2833 -73.4491 360.026 -73.0247 c
360.7687 -72.6003 360.8748 -88.9396 362.6785 -89.364 c
364.4822 -89.7884 364.4822 -81.3005 365.5432 -80.6639 c
366.6042 -80.0273 368.514 -89.6811 369.4689 -90 c
370.4238 -90.3189 378.169 -91.0616 378.9117 -89.364 c
379.6544 -87.6664 379.1239 -78.1175 380.1849 -77.6931 c
381.2459 -77.2687 381.4581 -82.3614 382.2008 -82.6797 c
382.9435 -82.998 384.9594 -70.6905 385.7021 -68.7807 c
386.4448 -66.8709 387.3997 -74.8284 388.3546 -75.5711 c
389.3095 -76.3138 389.7339 -86.3932 390.7949 -86.4993 c
391.8559 -86.6054 391.6437 -72.6003 392.5986 -72.4942 c
393.5535 -72.3881 394.4023 -82.8919 395.5694 -82.8919 c
396.7365 -82.8919 398.2219 -80.2395 398.7524 -81.1944 c
399.2829 -82.1493 400.7683 -84.2712 401.2988 -84.1651 c
401.8293 -84.059 401.7232 -67.9319 402.3598 -68.9929 c
402.9964 -70.0539 402.9964 -79.2846 403.8451 -79.2846 c
404.6939 -79.2846 404.6939 -73.1308 405.861 -72.3881 c
407.0281 -71.6454 407.5586 -80.5578 408.3013 -80.6639 c
409.044 -80.77 409.6806 -72.1759 410.2111 -72.7064 c
410.7416 -73.2369 411.8026 -88.9396 413.5002 -89.4701 c
415.1978 -90.0006 416.3649 -85.5444 417.0015 -85.8627 c
417.6381 -86.181 418.3808 -90.2116 419.2296 -90 c
420.0784 -89.7884 420.8211 -75.1467 421.1394 -74.6162 c
421.4577 -74.0857 424.5346 -74.6162 425.2773 -73.2369 c
426.02 -71.8576 427.1871 -68.6746 428.4603 -67.8258 c
429.7335 -66.977 429.0969 -60.1866 429.8396 -60.3988 c
430.5823 -60.611 432.0677 -86.2871 433.1287 -86.9237 c
434.1897 -87.5603 434.2958 -74.4924 435.4628 -74.1829 c
436.6299 -73.8735 439.1763 -85.0139 440.1312 -85.7566 c
441.0861 -86.4993 444.9649 -88.8323 445.4954 -90 c
446.0259 -91.1677 462 -90.5311 y
462 -91 l
36.4812 -90.8741 l
f
36.4812 -91.3289 m
44.5151 -91.9699 45.47 -92.2882 v
46.4249 -92.6065 48.0547 -94.8143 52.1926 -92.6923 C
56.7549 -91.8435 60.0631 -91.8552 60.6997 -92.8522 c
61.3363 -93.8492 61.558 -98.8918 62.3007 -99.3162 c
63.0434 -99.7406 64.958 -99.8441 65.0641 -101.7539 c
65.1702 -103.6637 67.2946 -109.1796 68.3556 -109.9223 c
69.4166 -110.665 68.569 -113.5291 69.3117 -114.3779 c
70.0544 -115.2267 71.0099 -115.2263 71.3282 -107.1628 c
71.6465 -99.0992 71.9651 -92.6282 72.7078 -92.2032 c
73.4505 -91.7782 73.3445 -118.1969 74.1933 -118.1969 c
75.0421 -118.1969 75.9971 -94.2183 76.8459 -93.6878 c
77.6947 -93.1573 78.013 -101.0087 78.7557 -101.0087 c
79.4984 -101.0087 79.9228 -92.3098 80.5594 -92.203 c
81.196 -92.0963 81.4082 -107.7991 82.257 -108.0113 c
83.1058 -108.2235 83.4241 -101.5392 84.1668 -101.1148 c
84.9095 -100.6904 85.2278 -106.5259 86.0766 -106.7381 c
86.9254 -106.9503 86.9254 -94.3244 87.8803 -93.5817 c
88.8352 -92.839 93.7158 -92.3085 94.5646 -92.9451 c
95.4134 -93.5817 94.7768 -103.3429 96.05 -103.8734 c
97.3232 -104.4039 97.2171 -96.1281 98.2781 -95.7037 c
99.3391 -95.2793 100.0818 -92.4159 100.9306 -92.203 c
101.7794 -91.9902 102.6282 -110.3454 103.477 -109.3905 c
104.3258 -108.4357 104.7502 -100.9026 105.7051 -100.5843 c
106.66 -100.266 107.9332 -96.2342 108.5698 -95.4915 c
109.2064 -94.7488 110.2674 -91.8854 110.6918 -92.203 c
111.1162 -92.5207 111.7528 -98.3562 112.1772 -98.3562 c
112.6016 -98.3562 112.0711 -94.961 113.4504 -94.4305 c
114.8296 -93.9 116.2089 -125.7299 117.0577 -124.9872 c
117.9065 -124.2445 118.7553 -103.8734 119.6041 -103.449 c
120.4529 -103.0246 120.7712 -116.3931 121.5139 -116.1809 c
122.2566 -115.9687 123.2115 -93.4756 124.3786 -93.2634 c
125.5457 -93.0512 126.2884 -116.3931 127.0311 -115.9687 c
127.7738 -115.5443 127.7738 -92.3098 128.1982 -92.203 c
128.6226 -92.0963 128.9409 -120.2127 129.5775 -120.9554 c
130.2141 -121.6981 133.8215 -99.5233 134.352 -98.9928 c
134.8825 -98.4623 135.413 -118.0907 136.2618 -118.3029 c
137.1106 -118.5151 138.0655 -96.022 138.596 -95.4915 c
139.1265 -94.961 139.7631 -112.6796 141.0363 -113.104 c
142.3095 -113.5284 142.3095 -109.8149 143.1583 -109.3905 c
144.0071 -108.9662 144.2193 -114.8016 145.1742 -114.165 c
146.129 -113.5284 147.9327 -99.5233 148.9937 -99.205 c
150.0547 -98.8867 150.7974 -104.51 151.5401 -103.6612 c
152.2828 -102.8124 152.2828 -92.3098 153.556 -92.203 c
154.8292 -92.0963 156.9512 -93.5817 157.9061 -93.4756 c
158.861 -93.3695 160.7708 -91.7722 161.9379 -92.0629 c
163.105 -92.3536 165.9697 -92.5207 166.5002 -94.5366 c
167.0307 -96.5525 167.5612 -112.043 168.3039 -112.3613 c
169.0466 -112.6796 169.471 -100.7965 170.6381 -99.9477 c
171.8052 -99.0989 172.4418 -109.1784 173.2906 -109.6027 c
174.1394 -110.0271 174.4577 -103.2368 175.2004 -102.8124 c
175.9431 -102.388 177.7468 -93.4756 178.5955 -92.7329 c
179.4443 -91.9902 179.4443 -113.4223 180.7175 -113.9528 c
181.9907 -114.4833 181.9907 -92.9464 182.9456 -92.203 c
183.9005 -91.4597 184.2188 -115.0138 184.8554 -115.1199 c
185.492 -115.226 186.2347 -97.8257 187.1896 -97.2952 c
188.1445 -96.7647 188.2506 -105.571 189.0994 -105.9954 c
189.9482 -106.4198 190.1604 -102.8124 190.797 -102.388 c
191.4336 -101.9636 191.4336 -108.2412 192.1763 -108.0201 c
192.919 -107.7991 193.1312 -96.9769 194.1922 -96.5525 c
195.2532 -96.1281 194.8288 -108.5418 195.8898 -108.9662 c
196.9508 -109.3905 197.5874 -102.8124 198.6484 -102.388 c
199.7094 -101.9636 200.0277 -109.0723 200.8765 -109.4966 c
201.7253 -109.921 203.4229 -99.6294 204.3778 -99.0989 c
205.3327 -98.5684 205.3327 -113.9528 206.3937 -114.3772 c
207.4547 -114.8016 208.7279 -96.7647 209.3645 -96.3403 c
210.0011 -95.9159 209.6828 -115.4382 210.4254 -115.226 c
211.1681 -115.0138 211.4864 -107.4808 212.123 -106.5259 c
212.7596 -105.571 213.5023 -92.4159 214.6694 -92.203 c
215.8365 -91.9902 217.1097 -113.3162 218.0646 -114.165 c
219.0195 -115.0138 218.8073 -103.0246 219.9744 -102.4941 c
221.1415 -101.9636 221.3537 -116.6053 222.6269 -116.6053 c
223.9001 -116.6053 223.2635 -102.4941 224.5367 -101.8575 c
225.8099 -101.2209 231.0088 -101.4331 233.2369 -94.8549 C
233.7674 -93.2634 234.8284 -95.0671 234.9345 -97.2952 c
235.0406 -99.5233 236.526 -105.3588 237.7992 -105.3588 c
239.0724 -105.3588 238.5419 -103.3429 239.709 -103.0246 c
240.8761 -102.7063 241.831 -106.3137 243.2102 -105.8893 c
244.5895 -105.4649 248.4079 -93.2634 250 -93.0512 c
251.5921 -92.839 250.7433 -108.9662 252.1226 -109.3905 c
253.5019 -109.8149 254.1385 -93.4756 255.5178 -92.7329 c
256.8971 -91.9902 259.7618 -95.3854 260.3984 -101.7514 c
261.035 -108.1174 263.0509 -110.5576 264.218 -110.6637 c
265.3851 -110.7698 265.9156 -91.8854 267.0827 -92.203 c
268.2498 -92.5207 268.9925 -108.754 269.8413 -109.3905 c
270.6901 -110.0271 272.2816 -107.0564 273.3426 -106.5259 c
274.4036 -105.9954 277.2682 -103.5551 277.3743 -101.8575 c
277.4804 -100.1599 278.117 -93.2634 279.178 -93.5817 c
280.239 -93.9 280.7695 -100.3721 281.4061 -100.4782 c
282.0427 -100.5843 281.7244 -96.9769 282.7854 -96.6586 c
283.8464 -96.3403 283.2098 -119.0456 284.483 -118.3029 c
285.7562 -117.5602 285.7562 -93.6878 286.8172 -93.3695 c
287.8782 -93.0512 287.666 -116.9236 288.5148 -116.4992 c
289.3636 -116.0748 289.788 -104.6161 290.3185 -104.51 c
290.849 -104.4039 291.0612 -107.9052 292.0161 -107.4808 c
292.971 -107.0564 292.971 -98.8867 293.8198 -98.5684 c
294.6686 -98.2501 294.8808 -113.9528 296.154 -114.4833 c
297.4272 -115.0138 299.1248 -97.8257 300.5041 -96.9769 c
301.8834 -96.1281 304.7481 -98.0379 305.2786 -105.2527 c
305.8091 -112.4674 306.3396 -116.9236 307.0822 -115.6504 c
307.8249 -114.3772 306.5518 -101.327 308.4615 -100.7965 c
310.3713 -100.266 309.9469 -105.6771 310.5835 -105.6771 c
311.2201 -105.6771 311.3262 -100.6904 312.0689 -100.4782 c
312.8116 -100.266 313.6604 -115.6504 314.9336 -114.9077 c
316.2068 -114.165 317.9044 -98.5684 319.0715 -98.3562 c
320.2386 -98.144 322.6789 -112.7857 323.6338 -111.8308 c
324.5887 -110.8759 326.9229 -91.9915 327.7717 -92.203 c
328.6205 -92.4146 332.334 -95.9159 334.0316 -96.4464 c
335.7292 -96.9769 337.8512 -92.0976 338.806 -92.203 c
339.7609 -92.3085 342.4134 -107.4985 343.5805 -108.0201 c
344.7476 -108.5418 345.172 -94.7488 346.8696 -94.3244 c
348.5672 -93.9 348.1428 -113.3162 349.7343 -113.5284 c
351.3258 -113.7406 351.9624 -92.9902 353.1295 -92.5658 c
354.2966 -92.1414 354.8271 -96.4464 355.4637 -96.6586 c
356.1003 -96.8708 357.6918 -97.083 357.904 -99.5233 c
358.1162 -101.9636 359.2833 -108.754 360.026 -109.1784 c
360.7687 -109.6027 360.8748 -93.2634 362.6785 -92.839 c
364.4822 -92.4146 364.4822 -100.9026 365.5432 -101.5392 c
366.6042 -102.1758 368.514 -92.522 369.4689 -92.203 c
370.4238 -91.8841 378.169 -91.1414 378.9117 -92.839 c
379.6544 -94.5366 379.1239 -104.0856 380.1849 -104.51 c
381.2459 -104.9344 381.4581 -99.8416 382.2008 -99.5233 c
382.9435 -99.205 384.9594 -111.5125 385.7021 -113.4223 c
386.4448 -115.3321 387.3997 -107.3747 388.3546 -106.632 c
389.3095 -105.8893 389.7339 -95.8098 390.7949 -95.7037 c
391.8559 -95.5976 391.6437 -109.6027 392.5986 -109.7088 c
393.5535 -109.8149 394.4023 -99.3111 395.5694 -99.3111 c
396.7365 -99.3111 398.2219 -101.9636 398.7524 -101.0087 c
399.2829 -100.0538 400.7683 -97.9318 401.2988 -98.0379 c
401.8293 -98.144 401.7232 -114.2711 402.3598 -113.2101 c
402.9964 -112.1491 402.9964 -102.9185 403.8451 -102.9185 c
404.6939 -102.9185 404.6939 -109.0723 405.861 -109.8149 c
407.0281 -110.5576 407.5586 -101.6453 408.3013 -101.5392 c
409.044 -101.4331 409.6806 -110.0271 410.2111 -109.4966 c
410.7416 -108.9662 411.8026 -93.2634 413.5002 -92.7329 c
415.1978 -92.2024 416.3649 -96.6586 417.0015 -96.3403 c
417.6381 -96.022 418.3808 -91.9915 419.2296 -92.203 c
420.0784 -92.4146 420.8211 -107.0564 421.1394 -107.5869 c
421.4577 -108.1174 424.5346 -107.5869 425.2773 -108.9662 c
426.02 -110.3454 427.1871 -113.5284 428.4603 -114.3772 c
429.7335 -115.226 429.0969 -122.0164 429.8396 -121.8042 c
430.5823 -121.592 432.0677 -95.9159 433.1287 -95.2793 c
434.1897 -94.6427 434.2958 -107.7107 435.4628 -108.0201 c
436.6299 -108.3296 439.1763 -97.1891 440.1312 -96.4464 c
441.0861 -95.7037 444.9649 -93.3708 445.4954 -92.203 c
446.0259 -91.0353 462 -91.6719 y
462 -91.203 l
36.4812 -91.3289 l
f
1 Ap
462.0921 -91.7037 m
36.4812 -91.7037 L
36.4812 -90.5723 L
462.0921 -90.5723 L
462.0921 -91.7037 L
f
/BBAccumRotation (0.000000) XT
U
u
38.4813 -238.0021 m
36.4812 -238.0021 L
36.4812 -225.0126 L
38.4813 -225.0126 L
38.4813 -238.0021 L
f
/BBAccumRotation (0.000000) XT
41.5306 -238.0021 m
39.4812 -238.0021 L
39.4812 -218.59 L
41.5306 -218.59 L
41.5306 -238.0021 L
f
/BBAccumRotation (0.000000) XT
44.6733 -238.0021 m
42.4812 -238.0021 L
42.4812 -213.6989 L
44.6733 -213.6989 L
44.6733 -238.0021 L
f
/BBAccumRotation (0.000000) XT
47.7225 -238.0021 m
45.4812 -238.0021 L
45.4812 -218.4418 L
47.7225 -218.4418 L
47.7225 -238.0021 L
f
/BBAccumRotation (0.000000) XT
65.7225 -238.0021 m
63.4812 -238.0021 L
63.4812 -218.4418 L
65.7225 -218.4418 L
65.7225 -238.0021 L
f
/BBAccumRotation (0.000000) XT
83.7225 -238.0021 m
81.4812 -238.0021 L
81.4812 -218.4418 L
83.7225 -218.4418 L
83.7225 -238.0021 L
f
/BBAccumRotation (0.000000) XT
50.6784 -238.0021 m
48.4812 -238.0021 L
48.4812 -221.2578 L
50.6784 -221.2578 L
50.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
62.6784 -238.0021 m
60.4812 -238.0021 L
60.4812 -221.2578 L
62.6784 -221.2578 L
62.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
86.6784 -238.0021 m
84.4812 -238.0021 L
84.4812 -221.2578 L
86.6784 -221.2578 L
86.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
89.6784 -238.0021 m
87.4812 -238.0021 L
87.4812 -225.708 L
89.6784 -225.708 L
89.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
92.6784 -238.0021 m
90.4812 -238.0021 L
90.4812 -228.9124 L
92.6784 -228.9124 L
92.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
95.6784 -238.0021 m
93.4812 -238.0021 L
93.4812 -231.7993 L
95.6784 -231.7993 L
95.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
98.6784 -238.0021 m
96.4812 -238.0021 L
96.4812 -233.4931 L
98.6784 -233.4931 L
98.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
101.6784 -238.0021 m
99.4812 -238.0021 L
99.4812 -230.1523 L
101.6784 -230.1523 L
101.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
104.6784 -238.0021 m
102.4812 -238.0021 L
102.4812 -225.665 L
104.6784 -225.665 L
104.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
107.6784 -238.0021 m
105.4812 -238.0021 L
105.4812 -218.6157 L
107.6784 -218.6157 L
107.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
110.6784 -238.0021 m
108.4812 -238.0021 L
108.4812 -211.866 L
110.6784 -211.866 L
110.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
113.6784 -238.0021 m
111.4812 -238.0021 L
111.4812 -205.9345 L
113.6784 -205.9345 L
113.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
116.6784 -238.0021 m
114.4812 -238.0021 L
114.4812 -199.7303 L
116.6784 -199.7303 L
116.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
119.6784 -238.0021 m
117.4812 -238.0021 L
117.4812 -190.2762 L
119.6784 -190.2762 L
119.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
122.6784 -238.0021 m
120.4812 -238.0021 L
120.4812 -180.7193 L
122.6784 -180.7193 L
122.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
125.6784 -238.0021 m
123.4812 -238.0021 L
123.4812 -174.1426 L
125.6784 -174.1426 L
125.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
128.6784 -238.0021 m
126.4812 -238.0021 L
126.4812 -170.5459 L
128.6784 -170.5459 L
128.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
131.6784 -238.0021 m
129.4812 -238.0021 L
129.4812 -180.7039 L
131.6784 -180.7039 L
131.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
134.6784 -238.0021 m
132.4812 -238.0021 L
132.4812 -190.7746 L
134.6784 -190.7746 L
134.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
137.6784 -238.0021 m
135.4812 -238.0021 L
135.4812 -204.1405 L
137.6784 -204.1405 L
137.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
140.6784 -238.0021 m
138.4812 -238.0021 L
138.4812 -214.2616 L
140.6784 -214.2616 L
140.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
143.6784 -238.0021 m
141.4812 -238.0021 L
141.4812 -220.9761 L
143.6784 -220.9761 L
143.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
146.6784 -238.0021 m
144.4812 -238.0021 L
144.4812 -225.5211 L
146.6784 -225.5211 L
146.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
149.6784 -238.0021 m
147.4812 -238.0021 L
147.4812 -221.1373 L
149.6784 -221.1373 L
149.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
152.6784 -238.0021 m
150.4812 -238.0021 L
150.4812 -217.1296 L
152.6784 -217.1296 L
152.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
155.6784 -238.0021 m
153.4812 -238.0021 L
153.4812 -210.2505 L
155.6784 -210.2505 L
155.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
158.6784 -238.0021 m
156.4812 -238.0021 L
156.4812 -206.9028 L
158.6784 -206.9028 L
158.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
161.6784 -238.0021 m
159.4812 -238.0021 L
159.4812 -205.6093 L
161.6784 -205.6093 L
161.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
164.6784 -238.0021 m
162.4812 -238.0021 L
162.4812 -208.2723 L
164.6784 -208.2723 L
164.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
167.6784 -238.0021 m
165.4812 -238.0021 L
165.4812 -219.1522 L
167.6784 -219.1522 L
167.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
170.6784 -238.0021 m
168.4812 -238.0021 L
168.4812 -222.4984 L
170.6784 -222.4984 L
170.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
173.6784 -238.0021 m
171.4812 -238.0021 L
171.4812 -225.4148 L
173.6784 -225.4148 L
173.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
176.6784 -238.0021 m
174.4812 -238.0021 L
174.4812 -228.967 L
176.6784 -228.967 L
176.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
179.6784 -238.0021 m
177.4812 -238.0021 L
177.4812 -231.0974 L
179.6784 -231.0974 L
179.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
182.6784 -238.0021 m
180.4812 -238.0021 L
180.4812 -224.2498 L
182.6784 -224.2498 L
182.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
185.6784 -238.0021 m
183.4812 -238.0021 L
183.4812 -214.6633 L
185.6784 -214.6633 L
185.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
188.6784 -238.0021 m
186.4812 -238.0021 L
186.4812 -206.1944 L
188.6784 -206.1944 L
188.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
191.6784 -238.0021 m
189.4812 -238.0021 L
189.4812 -201.0443 L
191.6784 -201.0443 L
191.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
194.6784 -238.0021 m
192.4812 -238.0021 L
192.4812 -198.3053 L
194.6784 -198.3053 L
194.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
197.6784 -238.0021 m
195.4812 -238.0021 L
195.4812 -195.6424 L
197.6784 -195.6424 L
197.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
200.6784 -238.0021 m
198.4812 -238.0021 L
198.4812 -193.3599 L
200.6784 -193.3599 L
200.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
203.571 -238.0072 m
201.3738 -237.9965 L
201.6609 -206.7923 L
203.8581 -206.8031 L
203.571 -238.0072 L
f
206.6784 -238.0021 m
204.4812 -238.0021 L
204.4812 -214.6633 L
206.6784 -214.6633 L
206.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
209.6784 -238.0021 m
207.4812 -238.0021 L
207.4812 -218.6197 L
209.6784 -218.6197 L
209.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
212.6784 -238.0021 m
210.4812 -238.0021 L
210.4812 -222.2175 L
212.6784 -222.2175 L
212.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
215.6784 -238.0021 m
213.4812 -238.0021 L
213.4812 -224.4781 L
215.6784 -224.4781 L
215.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
218.6784 -238.0021 m
216.4812 -238.0021 L
216.4812 -227.6118 L
218.6784 -227.6118 L
218.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
221.6784 -238.0021 m
219.4812 -238.0021 L
219.4812 -229.5351 L
221.6784 -229.5351 L
221.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
224.6784 -238.0021 m
222.4812 -238.0021 L
222.4812 -232.0865 L
224.6784 -232.0865 L
224.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
227.6784 -238.0021 m
225.4812 -238.0021 L
225.4812 -234.5957 L
227.6784 -234.5957 L
227.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
230.6784 -238.0021 m
228.4812 -238.0021 L
228.4812 -214.2389 L
230.6784 -214.2389 L
230.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
233.6784 -238.0021 m
231.4812 -238.0021 L
231.4812 -208.0257 L
233.6784 -208.0257 L
233.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
236.6784 -238.0021 m
234.4812 -238.0021 L
234.4812 -200.9378 L
236.6784 -200.9378 L
236.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
239.6784 -238.0021 m
237.4812 -238.0021 L
237.4812 -191.8382 L
239.6784 -191.8382 L
239.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
242.6784 -238.0021 m
240.4812 -238.0021 L
240.4812 -188.1101 L
242.6784 -188.1101 L
242.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
245.6784 -238.0021 m
243.4812 -238.0021 L
243.4812 -184.9146 L
245.6784 -184.9146 L
245.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
248.6784 -238.0021 m
246.4812 -238.0021 L
246.4812 -193.2537 L
248.6784 -193.2537 L
248.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
251.6784 -238.0021 m
249.4812 -238.0021 L
249.4812 -197.5445 L
251.6784 -197.5445 L
251.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
254.6784 -238.0021 m
252.4812 -238.0021 L
252.4812 -200.9381 L
254.6784 -200.9381 L
254.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
257.6784 -238.0021 m
255.4812 -238.0021 L
255.4812 -205.0007 L
257.6784 -205.0007 L
257.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
260.6784 -238.0021 m
258.4812 -238.0021 L
258.4812 -209.0331 L
260.6784 -209.0331 L
260.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
263.6784 -238.0021 m
261.4812 -238.0021 L
261.4812 -211.9243 L
263.6784 -211.9243 L
263.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
266.7344 -237.9992 m
264.5371 -238.0048 L
264.4449 -218.591 L
266.6422 -218.5854 L
266.7344 -237.9992 L
f
/BBAccumRotation (0.003467) XT
269.7408 -237.9989 m
267.5436 -238.0051 L
267.4874 -227.5077 L
269.6847 -227.5014 L
269.7408 -237.9989 L
f
/BBAccumRotation (0.003903) XT
272.6784 -238.0021 m
270.4812 -238.0021 L
270.4812 -230.9912 L
272.6784 -230.9912 L
272.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
275.6784 -238.0021 m
273.4812 -238.0021 L
273.4812 -223.2894 L
275.6784 -223.2894 L
275.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
278.6784 -238.0021 m
276.4812 -238.0021 L
276.4812 -219.465 L
278.6784 -219.465 L
278.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
281.6784 -238.0021 m
279.4812 -238.0021 L
279.4812 -214.6633 L
281.6784 -214.6633 L
281.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
284.6784 -238.0021 m
282.4812 -238.0021 L
282.4812 -206.4819 L
284.6784 -206.4819 L
284.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
287.6784 -238.0021 m
285.4812 -238.0021 L
285.4812 -200.9774 L
287.6784 -200.9774 L
287.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
290.6784 -238.0021 m
288.4812 -238.0021 L
288.4812 -195.4103 L
290.6784 -195.4103 L
290.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
293.6784 -238.0021 m
291.4812 -238.0021 L
291.4812 -190.3413 L
293.6784 -190.3413 L
293.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
296.6784 -238.0021 m
294.4812 -238.0021 L
294.4812 -189.0963 L
296.6784 -189.0963 L
296.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
299.6784 -238.0021 m
297.4812 -238.0021 L
297.4812 -201.5463 L
299.6784 -201.5463 L
299.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
302.6784 -238.0021 m
300.4812 -238.0021 L
300.4812 -207.0154 L
302.6784 -207.0154 L
302.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
305.6784 -238.0021 m
303.4812 -238.0021 L
303.4812 -210.7504 L
305.6784 -210.7504 L
305.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
308.6784 -238.0021 m
306.4812 -238.0021 L
306.4812 -216.4419 L
308.6784 -216.4419 L
308.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
311.6784 -238.0021 m
309.4812 -238.0021 L
309.4812 -221.8665 L
311.6784 -221.8665 L
311.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
314.6784 -238.0021 m
312.4812 -238.0021 L
312.4812 -224.9346 L
314.6784 -224.9346 L
314.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
317.6784 -238.0021 m
315.4812 -238.0021 L
315.4812 -221.4663 L
317.6784 -221.4663 L
317.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
320.6784 -238.0021 m
318.4812 -238.0021 L
318.4812 -214.6633 L
320.6784 -214.6633 L
320.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
323.6784 -238.0021 m
321.4812 -238.0021 L
321.4812 -204.3921 L
323.6784 -204.3921 L
323.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
326.6784 -238.0021 m
324.4812 -238.0021 L
324.4812 -199.501 L
326.6784 -199.501 L
326.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
329.6784 -238.0021 m
327.4812 -238.0021 L
327.4812 -194.2542 L
329.6784 -194.2542 L
329.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
332.6784 -238.0021 m
330.4812 -238.0021 L
330.4812 -198.3004 L
332.6784 -198.3004 L
332.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
335.6784 -238.0021 m
333.4812 -238.0021 L
333.4812 -189.6744 L
335.6784 -189.6744 L
335.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
338.6784 -238.0021 m
336.4812 -238.0021 L
336.4812 -196.2996 L
338.6784 -196.2996 L
338.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
341.6784 -238.0021 m
339.4812 -238.0021 L
339.4812 -201.9465 L
341.6784 -201.9465 L
341.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
344.6784 -238.0021 m
342.4812 -238.0021 L
342.4812 -191.7642 L
344.6784 -191.7642 L
344.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
347.6784 -238.0021 m
345.4812 -238.0021 L
345.4812 -205.5037 L
347.6784 -205.5037 L
347.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
350.6784 -238.0021 m
348.4812 -238.0021 L
348.4812 -219.5099 L
350.6784 -219.5099 L
350.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
353.6784 -238.0021 m
351.4812 -238.0021 L
351.4812 -198.9674 L
353.6784 -198.9674 L
353.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
356.6784 -238.0021 m
354.4812 -238.0021 L
354.4812 -204.9256 L
356.6784 -204.9256 L
356.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
359.6784 -238.0021 m
357.4812 -238.0021 L
357.4812 -191.5419 L
359.6784 -191.5419 L
359.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
362.6784 -238.0021 m
360.4812 -238.0021 L
360.4812 -209.1497 L
362.6784 -209.1497 L
362.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
365.6784 -238.0021 m
363.4812 -238.0021 L
363.4812 -219.5492 L
365.6784 -219.5492 L
365.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
368.6784 -238.0021 m
366.4812 -238.0021 L
366.4812 -221.5477 L
368.6784 -221.5477 L
368.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
371.6784 -238.0021 m
369.4812 -238.0021 L
369.4812 -203.0137 L
371.6784 -203.0137 L
371.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
374.6784 -238.0021 m
372.4812 -238.0021 L
372.4812 -197.1888 L
374.6784 -197.1888 L
374.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
377.6784 -238.0021 m
375.4812 -238.0021 L
375.4812 -195.2769 L
377.6784 -195.2769 L
377.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
380.6784 -238.0021 m
378.4812 -238.0021 L
378.4812 -191.6257 L
380.6784 -191.6257 L
380.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
383.6784 -238.0021 m
381.4812 -238.0021 L
381.4812 -186.2506 L
383.6784 -186.2506 L
383.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
386.6784 -238.0021 m
384.4812 -238.0021 L
384.4812 -197.406 L
386.6784 -197.406 L
386.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
389.6784 -238.0021 m
387.4812 -238.0021 L
387.4812 -201.8131 L
389.6784 -201.8131 L
389.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
392.6784 -238.0021 m
390.4812 -238.0021 L
390.4812 -205.8594 L
392.6784 -205.8594 L
392.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
395.6784 -238.0021 m
393.4812 -238.0021 L
393.4812 -209.1891 L
395.6784 -209.1891 L
395.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
398.6784 -238.0021 m
396.4812 -238.0021 L
396.4812 -210.7504 L
398.6784 -210.7504 L
398.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
401.6784 -238.0021 m
399.4812 -238.0021 L
399.4812 -216.264 L
401.6784 -216.264 L
401.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
404.6784 -238.0021 m
402.4812 -238.0021 L
402.4812 -219.5441 L
404.6784 -219.5441 L
404.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
407.6784 -238.0021 m
405.4812 -238.0021 L
405.4812 -222.3112 L
407.6784 -222.3112 L
407.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
410.6784 -238.0021 m
408.4812 -238.0021 L
408.4812 -224.3711 L
410.6784 -224.3711 L
410.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
413.6784 -238.0021 m
411.4812 -238.0021 L
411.4812 -230.107 L
413.6784 -230.107 L
413.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
416.6784 -238.0021 m
414.4812 -238.0021 L
414.4812 -233.694 L
416.6784 -233.694 L
416.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
419.6784 -238.0021 m
417.4812 -238.0021 L
417.4812 -235.2058 L
419.6784 -235.2058 L
419.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
422.6784 -238.0021 m
420.4812 -238.0021 L
420.4812 -228.4472 L
422.6784 -228.4472 L
422.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
425.6784 -238.0021 m
423.4812 -238.0021 L
423.4812 -225.1124 L
425.6784 -225.1124 L
425.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
428.6784 -238.0021 m
426.4812 -238.0021 L
426.4812 -222.306 L
428.6784 -222.306 L
428.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
431.6784 -238.0021 m
429.4812 -238.0021 L
429.4812 -204.0413 L
431.6784 -204.0413 L
431.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
434.6784 -238.0021 m
432.3389 -238.0021 L
432.3389 -198.7728 L
434.6784 -198.7728 L
434.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
437.6784 -238.0021 m
435.4812 -238.0021 L
435.4812 -193.0794 L
437.6784 -193.0794 L
437.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
440.6784 -238.0021 m
438.4812 -238.0021 L
438.4812 -202.9366 L
440.6784 -202.9366 L
440.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
443.6784 -238.0021 m
441.4812 -238.0021 L
441.4812 -209.1705 L
443.6784 -209.1705 L
443.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
446.9324 -238.0021 m
444.4812 -238.0021 L
444.4812 -218.317 L
446.9324 -218.317 L
446.9324 -238.0021 L
f
/BBAccumRotation (0.000000) XT
449.6784 -238.0021 m
447.4812 -238.0021 L
447.4812 -223.0759 L
449.6784 -223.0759 L
449.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
452.6784 -238.0021 m
450.4812 -238.0021 L
450.4812 -227.5797 L
452.6784 -227.5797 L
452.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
455.6784 -238.0021 m
453.4812 -238.0021 L
453.4812 -231.2531 L
455.6784 -231.2531 L
455.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
458.6784 -238.0021 m
456.4812 -238.0021 L
456.4812 -233.0362 L
458.6784 -233.0362 L
458.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
461.6784 -238.0021 m
459.4812 -238.0021 L
459.4812 -234.5241 L
461.6784 -234.5241 L
461.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
464.6784 -238.0021 m
462.4812 -238.0021 L
462.4812 -235.5006 L
464.6784 -235.5006 L
464.6784 -238.0021 L
f
/BBAccumRotation (0.000000) XT
53.5409 -238.0021 m
51.4812 -238.0021 L
51.4812 -204.6579 L
53.5409 -204.6579 L
53.5409 -238.0021 L
f
/BBAccumRotation (0.000000) XT
56.5409 -238.0021 m
54.4812 -238.0021 L
54.4812 -197.9082 L
56.5409 -197.9082 L
56.5409 -238.0021 L
f
/BBAccumRotation (0.000000) XT
68.5409 -238.0021 m
66.4812 -238.0021 L
66.4812 -197.9082 L
68.5409 -197.9082 L
68.5409 -238.0021 L
f
/BBAccumRotation (0.000000) XT
80.5409 -238.0021 m
78.4812 -238.0021 L
78.4812 -197.9082 L
80.5409 -197.9082 L
80.5409 -238.0021 L
f
/BBAccumRotation (0.000000) XT
71.5409 -238.0021 m
69.4812 -238.0021 L
69.4812 -189.5222 L
71.5409 -189.5222 L
71.5409 -238.0021 L
f
/BBAccumRotation (0.000000) XT
74.5409 -238.0021 m
72.4812 -238.0021 L
72.4812 -180.3181 L
74.5409 -180.3181 L
74.5409 -238.0021 L
f
/BBAccumRotation (0.000000) XT
77.5409 -238.0021 m
75.4812 -238.0021 L
75.4812 -174.6593 L
77.5409 -174.6593 L
77.5409 -238.0021 L
f
/BBAccumRotation (0.000000) XT
59.5409 -238.0021 m
57.4812 -238.0021 L
57.4812 -208.7486 L
59.5409 -208.7486 L
59.5409 -238.0021 L
f
/BBAccumRotation (0.000000) XT
38.4813 -237.7005 m
36.4812 -237.7005 L
36.4812 -250.69 L
38.4813 -250.69 L
38.4813 -237.7005 L
f
/BBAccumRotation (0.000000) XT
41.5306 -237.7005 m
39.4812 -237.7005 L
39.4812 -257.1126 L
41.5306 -257.1126 L
41.5306 -237.7005 L
f
/BBAccumRotation (0.000000) XT
44.6733 -237.7005 m
42.4812 -237.7005 L
42.4812 -262.0037 L
44.6733 -262.0037 L
44.6733 -237.7005 L
f
/BBAccumRotation (0.000000) XT
47.7225 -237.7005 m
45.4812 -237.7005 L
45.4812 -257.2609 L
47.7225 -257.2609 L
47.7225 -237.7005 L
f
/BBAccumRotation (0.000000) XT
65.7225 -237.7005 m
63.4812 -237.7005 L
63.4812 -257.2609 L
65.7225 -257.2609 L
65.7225 -237.7005 L
f
/BBAccumRotation (0.000000) XT
83.7225 -237.7005 m
81.4812 -237.7005 L
81.4812 -257.2609 L
83.7225 -257.2609 L
83.7225 -237.7005 L
f
/BBAccumRotation (0.000000) XT
50.6784 -237.7005 m
48.4812 -237.7005 L
48.4812 -254.4448 L
50.6784 -254.4448 L
50.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
62.6784 -237.7005 m
60.4812 -237.7005 L
60.4812 -254.4448 L
62.6784 -254.4448 L
62.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
86.6784 -237.7005 m
84.4812 -237.7005 L
84.4812 -254.4448 L
86.6784 -254.4448 L
86.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
89.6784 -237.7005 m
87.4812 -237.7005 L
87.4812 -249.9946 L
89.6784 -249.9946 L
89.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
92.6784 -237.7005 m
90.4812 -237.7005 L
90.4812 -246.7902 L
92.6784 -246.7902 L
92.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
95.6784 -237.7005 m
93.4812 -237.7005 L
93.4812 -243.9033 L
95.6784 -243.9033 L
95.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
98.6784 -237.7005 m
96.4812 -237.7005 L
96.4812 -242.2095 L
98.6784 -242.2095 L
98.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
101.6784 -237.7005 m
99.4812 -237.7005 L
99.4812 -245.5503 L
101.6784 -245.5503 L
101.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
104.6784 -237.7005 m
102.4812 -237.7005 L
102.4812 -250.0376 L
104.6784 -250.0376 L
104.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
107.6784 -237.7005 m
105.4812 -237.7005 L
105.4812 -257.0869 L
107.6784 -257.0869 L
107.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
110.6784 -237.7005 m
108.4812 -237.7005 L
108.4812 -263.8366 L
110.6784 -263.8366 L
110.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
113.6784 -237.7005 m
111.4812 -237.7005 L
111.4812 -269.7681 L
113.6784 -269.7681 L
113.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
116.6784 -237.7005 m
114.4812 -237.7005 L
114.4812 -275.9724 L
116.6784 -275.9724 L
116.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
119.6784 -237.7005 m
117.4812 -237.7005 L
117.4812 -285.4265 L
119.6784 -285.4265 L
119.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
122.6784 -237.7005 m
120.4812 -237.7005 L
120.4812 -294.9833 L
122.6784 -294.9833 L
122.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
125.6784 -237.7005 m
123.4812 -237.7005 L
123.4812 -301.5601 L
125.6784 -301.5601 L
125.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
128.6784 -237.7005 m
126.4812 -237.7005 L
126.4812 -305.1567 L
128.6784 -305.1567 L
128.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
131.6784 -237.7005 m
129.4812 -237.7005 L
129.4812 -294.9987 L
131.6784 -294.9987 L
131.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
134.6784 -237.7005 m
132.4812 -237.7005 L
132.4812 -284.928 L
134.6784 -284.928 L
134.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
137.6784 -237.7005 m
135.4812 -237.7005 L
135.4812 -271.5622 L
137.6784 -271.5622 L
137.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
140.6784 -237.7005 m
138.4812 -237.7005 L
138.4812 -261.441 L
140.6784 -261.441 L
140.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
143.6784 -237.7005 m
141.4812 -237.7005 L
141.4812 -254.7265 L
143.6784 -254.7265 L
143.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
146.6784 -237.7005 m
144.4812 -237.7005 L
144.4812 -250.1816 L
146.6784 -250.1816 L
146.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
149.6784 -237.7005 m
147.4812 -237.7005 L
147.4812 -254.5653 L
149.6784 -254.5653 L
149.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
152.6784 -237.7005 m
150.4812 -237.7005 L
150.4812 -258.573 L
152.6784 -258.573 L
152.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
155.6784 -237.7005 m
153.4812 -237.7005 L
153.4812 -265.4522 L
155.6784 -265.4522 L
155.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
158.6784 -237.7005 m
156.4812 -237.7005 L
156.4812 -268.7999 L
158.6784 -268.7999 L
158.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
161.6784 -237.7005 m
159.4812 -237.7005 L
159.4812 -270.0933 L
161.6784 -270.0933 L
161.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
164.6784 -237.7005 m
162.4812 -237.7005 L
162.4812 -267.4304 L
164.6784 -267.4304 L
164.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
167.6784 -237.7005 m
165.4812 -237.7005 L
165.4812 -256.5504 L
167.6784 -256.5504 L
167.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
170.6784 -237.7005 m
168.4812 -237.7005 L
168.4812 -253.2043 L
170.6784 -253.2043 L
170.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
173.6784 -237.7005 m
171.4812 -237.7005 L
171.4812 -250.2878 L
173.6784 -250.2878 L
173.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
176.6784 -237.7005 m
174.4812 -237.7005 L
174.4812 -246.7356 L
176.6784 -246.7356 L
176.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
179.6784 -237.7005 m
177.4812 -237.7005 L
177.4812 -244.6053 L
179.6784 -244.6053 L
179.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
182.6784 -237.7005 m
180.4812 -237.7005 L
180.4812 -251.4528 L
182.6784 -251.4528 L
182.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
185.6784 -237.7005 m
183.4812 -237.7005 L
183.4812 -261.0393 L
185.6784 -261.0393 L
185.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
188.6784 -237.7005 m
186.4812 -237.7005 L
186.4812 -269.5083 L
188.6784 -269.5083 L
188.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
191.6784 -237.7005 m
189.4812 -237.7005 L
189.4812 -274.6583 L
191.6784 -274.6583 L
191.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
194.6784 -237.7005 m
192.4812 -237.7005 L
192.4812 -277.3973 L
194.6784 -277.3973 L
194.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
197.6784 -237.7005 m
195.4812 -237.7005 L
195.4812 -280.0602 L
197.6784 -280.0602 L
197.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
200.6784 -237.7005 m
198.4812 -237.7005 L
198.4812 -282.3428 L
200.6784 -282.3428 L
200.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
203.571 -237.6954 m
201.3738 -237.7062 L
201.6609 -268.9103 L
203.8581 -268.8996 L
203.571 -237.6954 L
f
/BBAccumRotation (0.006714) XT
206.6784 -237.7005 m
204.4812 -237.7005 L
204.4812 -261.0393 L
206.6784 -261.0393 L
206.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
209.6784 -237.7005 m
207.4812 -237.7005 L
207.4812 -257.083 L
209.6784 -257.083 L
209.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
212.6784 -237.7005 m
210.4812 -237.7005 L
210.4812 -253.4852 L
212.6784 -253.4852 L
212.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
215.6784 -237.7005 m
213.4812 -237.7005 L
213.4812 -251.2245 L
215.6784 -251.2245 L
215.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
218.6784 -237.7005 m
216.4812 -237.7005 L
216.4812 -248.0908 L
218.6784 -248.0908 L
218.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
221.6784 -237.7005 m
219.4812 -237.7005 L
219.4812 -246.1676 L
221.6784 -246.1676 L
221.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
224.6784 -237.7005 m
222.4812 -237.7005 L
222.4812 -243.6162 L
224.6784 -243.6162 L
224.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
227.6784 -237.7005 m
225.4812 -237.7005 L
225.4812 -241.107 L
227.6784 -241.107 L
227.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
230.6784 -237.7005 m
228.4812 -237.7005 L
228.4812 -261.4638 L
230.6784 -261.4638 L
230.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
233.6784 -237.7005 m
231.4812 -237.7005 L
231.4812 -267.6769 L
233.6784 -267.6769 L
233.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
236.6784 -237.7005 m
234.4812 -237.7005 L
234.4812 -274.7648 L
236.6784 -274.7648 L
236.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
239.6784 -237.7005 m
237.4812 -237.7005 L
237.4812 -283.8644 L
239.6784 -283.8644 L
239.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
242.6784 -237.7005 m
240.4812 -237.7005 L
240.4812 -287.5925 L
242.6784 -287.5925 L
242.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
245.6784 -237.7005 m
243.4812 -237.7005 L
243.4812 -290.788 L
245.6784 -290.788 L
245.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
248.6784 -237.7005 m
246.4812 -237.7005 L
246.4812 -282.449 L
248.6784 -282.449 L
248.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
251.6784 -237.7005 m
249.4812 -237.7005 L
249.4812 -278.1582 L
251.6784 -278.1582 L
251.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
254.6784 -237.7005 m
252.4812 -237.7005 L
252.4812 -274.7645 L
254.6784 -274.7645 L
254.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
257.6784 -237.7005 m
255.4812 -237.7005 L
255.4812 -270.702 L
257.6784 -270.702 L
257.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
260.6784 -237.7005 m
258.4812 -237.7005 L
258.4812 -266.6695 L
260.6784 -266.6695 L
260.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
263.6784 -237.7005 m
261.4812 -237.7005 L
261.4812 -263.7783 L
263.6784 -263.7783 L
263.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
266.7344 -237.7034 m
264.5371 -237.6978 L
264.4449 -257.1116 L
266.6422 -257.1172 L
266.7344 -237.7034 L
f
269.7408 -237.7038 m
267.5436 -237.6975 L
267.4874 -248.1949 L
269.6847 -248.2012 L
269.7408 -237.7038 L
f
272.6784 -237.7005 m
270.4812 -237.7005 L
270.4812 -244.7115 L
272.6784 -244.7115 L
272.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
275.6784 -237.7005 m
273.4812 -237.7005 L
273.4812 -252.4133 L
275.6784 -252.4133 L
275.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
278.6784 -237.7005 m
276.4812 -237.7005 L
276.4812 -256.2377 L
278.6784 -256.2377 L
278.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
281.6784 -237.7005 m
279.4812 -237.7005 L
279.4812 -261.0393 L
281.6784 -261.0393 L
281.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
284.6784 -237.7005 m
282.4812 -237.7005 L
282.4812 -269.2208 L
284.6784 -269.2208 L
284.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
287.6784 -237.7005 m
285.4812 -237.7005 L
285.4812 -274.7252 L
287.6784 -274.7252 L
287.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
290.6784 -237.7005 m
288.4812 -237.7005 L
288.4812 -280.2924 L
290.6784 -280.2924 L
290.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
293.6784 -237.7005 m
291.4812 -237.7005 L
291.4812 -285.3613 L
293.6784 -285.3613 L
293.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
296.6784 -237.7005 m
294.4812 -237.7005 L
294.4812 -286.6063 L
296.6784 -286.6063 L
296.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
299.6784 -237.7005 m
297.4812 -237.7005 L
297.4812 -274.1563 L
299.6784 -274.1563 L
299.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
302.6784 -237.7005 m
300.4812 -237.7005 L
300.4812 -268.6872 L
302.6784 -268.6872 L
302.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
305.6784 -237.7005 m
303.4812 -237.7005 L
303.4812 -264.9522 L
305.6784 -264.9522 L
305.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
308.6784 -237.7005 m
306.4812 -237.7005 L
306.4812 -259.2608 L
308.6784 -259.2608 L
308.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
311.6784 -237.7005 m
309.4812 -237.7005 L
309.4812 -253.8361 L
311.6784 -253.8361 L
311.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
314.6784 -237.7005 m
312.4812 -237.7005 L
312.4812 -250.7681 L
314.6784 -250.7681 L
314.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
317.6784 -237.7005 m
315.4812 -237.7005 L
315.4812 -254.2363 L
317.6784 -254.2363 L
317.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
320.6784 -237.7005 m
318.4812 -237.7005 L
318.4812 -261.0393 L
320.6784 -261.0393 L
320.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
323.6784 -237.7005 m
321.4812 -237.7005 L
321.4812 -271.3106 L
323.6784 -271.3106 L
323.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
326.6784 -237.7005 m
324.4812 -237.7005 L
324.4812 -276.2017 L
326.6784 -276.2017 L
326.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
329.6784 -237.7005 m
327.4812 -237.7005 L
327.4812 -281.4484 L
329.6784 -281.4484 L
329.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
332.6784 -237.7005 m
330.4812 -237.7005 L
330.4812 -277.4022 L
332.6784 -277.4022 L
332.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
335.6784 -237.7005 m
333.4812 -237.7005 L
333.4812 -286.0283 L
335.6784 -286.0283 L
335.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
338.6784 -237.7005 m
336.4812 -237.7005 L
336.4812 -279.4031 L
338.6784 -279.4031 L
338.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
341.6784 -237.7005 m
339.4812 -237.7005 L
339.4812 -273.7561 L
341.6784 -273.7561 L
341.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
344.6784 -237.7005 m
342.4812 -237.7005 L
342.4812 -283.9384 L
344.6784 -283.9384 L
344.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
347.6784 -237.7005 m
345.4812 -237.7005 L
345.4812 -270.199 L
347.6784 -270.199 L
347.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
350.6784 -237.7005 m
348.4812 -237.7005 L
348.4812 -256.1927 L
350.6784 -256.1927 L
350.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
353.6784 -237.7005 m
351.4812 -237.7005 L
351.4812 -276.7352 L
353.6784 -276.7352 L
353.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
356.6784 -237.7005 m
354.4812 -237.7005 L
354.4812 -270.777 L
356.6784 -270.777 L
356.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
359.6784 -237.7005 m
357.4812 -237.7005 L
357.4812 -284.1608 L
359.6784 -284.1608 L
359.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
362.6784 -237.7005 m
360.4812 -237.7005 L
360.4812 -266.5529 L
362.6784 -266.5529 L
362.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
365.6784 -237.7005 m
363.4812 -237.7005 L
363.4812 -256.1534 L
365.6784 -256.1534 L
365.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
368.6784 -237.7005 m
366.4812 -237.7005 L
366.4812 -254.155 L
368.6784 -254.155 L
368.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
371.6784 -237.7005 m
369.4812 -237.7005 L
369.4812 -272.689 L
371.6784 -272.689 L
371.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
374.6784 -237.7005 m
372.4812 -237.7005 L
372.4812 -278.5138 L
374.6784 -278.5138 L
374.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
377.6784 -237.7005 m
375.4812 -237.7005 L
375.4812 -280.4258 L
377.6784 -280.4258 L
377.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
380.6784 -237.7005 m
378.4812 -237.7005 L
378.4812 -284.077 L
380.6784 -284.077 L
380.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
383.6784 -237.7005 m
381.4812 -237.7005 L
381.4812 -289.452 L
383.6784 -289.452 L
383.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
386.6784 -237.7005 m
384.4812 -237.7005 L
384.4812 -278.2966 L
386.6784 -278.2966 L
386.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
389.6784 -237.7005 m
387.4812 -237.7005 L
387.4812 -273.8895 L
389.6784 -273.8895 L
389.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
392.6784 -237.7005 m
390.4812 -237.7005 L
390.4812 -269.8433 L
392.6784 -269.8433 L
392.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
395.6784 -237.7005 m
393.4812 -237.7005 L
393.4812 -266.5136 L
395.6784 -266.5136 L
395.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
398.6784 -237.7005 m
396.4812 -237.7005 L
396.4812 -264.9522 L
398.6784 -264.9522 L
398.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
401.6784 -237.7005 m
399.4812 -237.7005 L
399.4812 -259.4386 L
401.6784 -259.4386 L
401.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
404.6784 -237.7005 m
402.4812 -237.7005 L
402.4812 -256.1585 L
404.6784 -256.1585 L
404.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
407.6784 -237.7005 m
405.4812 -237.7005 L
405.4812 -253.3915 L
407.6784 -253.3915 L
407.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
410.6784 -237.7005 m
408.4812 -237.7005 L
408.4812 -251.3315 L
410.6784 -251.3315 L
410.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
413.6784 -237.7005 m
411.4812 -237.7005 L
411.4812 -245.5956 L
413.6784 -245.5956 L
413.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
416.6784 -237.7005 m
414.4812 -237.7005 L
414.4812 -242.0086 L
416.6784 -242.0086 L
416.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
419.6784 -237.7005 m
417.4812 -237.7005 L
417.4812 -240.4968 L
419.6784 -240.4968 L
419.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
422.6784 -237.7005 m
420.4812 -237.7005 L
420.4812 -247.2554 L
422.6784 -247.2554 L
422.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
425.6784 -237.7005 m
423.4812 -237.7005 L
423.4812 -250.5902 L
425.6784 -250.5902 L
425.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
428.6784 -237.7005 m
426.4812 -237.7005 L
426.4812 -253.3966 L
428.6784 -253.3966 L
428.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
431.6784 -237.7005 m
429.4812 -237.7005 L
429.4812 -271.6614 L
431.6784 -271.6614 L
431.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
434.6784 -237.7005 m
432.3389 -237.7005 L
432.3389 -276.9299 L
434.6784 -276.9299 L
434.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
437.6784 -237.7005 m
435.4812 -237.7005 L
435.4812 -282.6233 L
437.6784 -282.6233 L
437.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
440.6784 -237.7005 m
438.4812 -237.7005 L
438.4812 -272.766 L
440.6784 -272.766 L
440.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
443.6784 -237.7005 m
441.4812 -237.7005 L
441.4812 -266.5321 L
443.6784 -266.5321 L
443.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
446.9324 -237.7005 m
444.4812 -237.7005 L
444.4812 -257.3856 L
446.9324 -257.3856 L
446.9324 -237.7005 L
f
/BBAccumRotation (0.000000) XT
449.6784 -237.7005 m
447.4812 -237.7005 L
447.4812 -252.6267 L
449.6784 -252.6267 L
449.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
452.6784 -237.7005 m
450.4812 -237.7005 L
450.4812 -248.123 L
452.6784 -248.123 L
452.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
455.6784 -237.7005 m
453.4812 -237.7005 L
453.4812 -244.4496 L
455.6784 -244.4496 L
455.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
458.6784 -237.7005 m
456.4812 -237.7005 L
456.4812 -242.6664 L
458.6784 -242.6664 L
458.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
461.6784 -237.7005 m
459.4812 -237.7005 L
459.4812 -241.1786 L
461.6784 -241.1786 L
461.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
464.6784 -237.7005 m
462.4812 -237.7005 L
462.4812 -240.202 L
464.6784 -240.202 L
464.6784 -237.7005 L
f
/BBAccumRotation (0.000000) XT
53.5409 -237.7005 m
51.4812 -237.7005 L
51.4812 -271.0448 L
53.5409 -271.0448 L
53.5409 -237.7005 L
f
/BBAccumRotation (0.000000) XT
56.5409 -237.7005 m
54.4812 -237.7005 L
54.4812 -277.7945 L
56.5409 -277.7945 L
56.5409 -237.7005 L
f
/BBAccumRotation (0.000000) XT
68.5409 -237.7005 m
66.4812 -237.7005 L
66.4812 -277.7945 L
68.5409 -277.7945 L
68.5409 -237.7005 L
f
/BBAccumRotation (0.000000) XT
80.5409 -237.7005 m
78.4812 -237.7005 L
78.4812 -277.7945 L
80.5409 -277.7945 L
80.5409 -237.7005 L
f
/BBAccumRotation (0.000000) XT
71.5409 -237.7005 m
69.4812 -237.7005 L
69.4812 -286.1804 L
71.5409 -286.1804 L
71.5409 -237.7005 L
f
/BBAccumRotation (0.000000) XT
74.5409 -237.7005 m
72.4812 -237.7005 L
72.4812 -295.3845 L
74.5409 -295.3845 L
74.5409 -237.7005 L
f
/BBAccumRotation (0.000000) XT
77.5409 -237.7005 m
75.4812 -237.7005 L
75.4812 -301.0434 L
77.5409 -301.0434 L
77.5409 -237.7005 L
f
/BBAccumRotation (0.000000) XT
59.5409 -237.7005 m
57.4812 -237.7005 L
57.4812 -266.9541 L
59.5409 -266.9541 L
59.5409 -237.7005 L
f
/BBAccumRotation (0.000000) XT
U
u
0 Ap
328.4736 -463.4851 m
326.8408 -463.4851 326.4141 -462.187 323.1768 -410.7691 c
321.3682 -382.0296 318.9424 -343.498 316.8184 -335.6165 C
314.6914 -343.0617 311.9521 -377.7268 309.7139 -406.0415 c
305.9092 -454.1866 304.9355 -462.7643 303.2061 -463.404 c
302.8242 -463.5442 302.3838 -463.4942 302.0537 -463.2727 c
300.4541 -462.1977 299.3848 -453.4543 296.7725 -425.9244 c
295.5166 -412.6823 293.9951 -396.6462 292.75 -391.4463 C
291.7197 -395.8975 290.7412 -408.2548 289.9297 -418.4964 c
287.9492 -443.4891 287.1777 -448.6595 285.3428 -449.2319 c
284.8652 -449.3811 284.3496 -449.2745 283.9658 -448.9465 c
282.3408 -447.5606 281.7461 -436.2546 280.7764 -410.7855 c
280.1475 -394.2746 279.3018 -372.0464 277.6973 -367.7591 C
275.6768 -371.1697 273.4307 -387.2493 271.9063 -398.1649 c
269.5791 -414.8333 268.8115 -419.1254 267.4473 -419.8626 c
267.1406 -420.0283 266.7686 -420.0726 266.4287 -419.9799 c
264.873 -419.5608 264.29 -417.0244 262.9531 -407.8776 c
262.2715 -403.2107 261.1543 -395.5613 259.8809 -394.1688 C
258.5107 -396.3961 257.373 -409.2651 256.4512 -419.6945 c
254.7559 -438.8812 253.7754 -447.395 251.502 -448.402 c
251.0479 -448.6045 250.5298 -448.5906 250.0781 -448.3724 c
247.4795 -447.1079 246.229 -431.6016 244.2397 -394.9954 c
243.6792 -384.68 243.1045 -374.1039 242.5513 -368.8424 C
241.4585 -373.9858 239.8193 -384.2954 238.3296 -393.6702 c
233.6323 -423.2191 232.6416 -427.2898 231.1958 -427.7982 c
230.8213 -427.9303 230.4033 -427.886 230.0771 -427.6793 c
228.9258 -426.9528 228.2866 -423.2757 226.356 -409.047 c
225.1367 -400.0601 223.335 -386.7777 221.769 -384.047 C
219.8252 -387.1599 216.0576 -403.8487 213.5132 -415.1186 c
208.7368 -436.2759 208.2905 -437.0451 206.9683 -437.1976 c
206.5815 -437.2362 206.0674 -437.1165 205.7822 -436.6326 c
205.2148 -435.6699 204.4814 -429.6237 202.6816 -413.8631 c
200.3647 -393.5743 196.1011 -356.2334 192.79 -352.5128 C
190.0771 -356.1776 187.6777 -390.4606 185.9141 -415.6566 c
183.4546 -450.799 182.6924 -457.58 181.1187 -458.3344 c
180.7793 -458.4976 180.3706 -458.505 180.0239 -458.3557 c
178.4375 -457.671 177.459 -450.8703 173.4819 -412.875 c
170.6279 -385.6067 166.7539 -348.6028 163.8228 -344.0671 C
161.0967 -347.9722 159.4878 -377.1528 158.5103 -394.8741 c
157.0073 -422.1333 156.5854 -424.5918 155.1001 -425.0232 c
154.646 -425.1536 154.1563 -425.0355 153.8228 -424.7107 c
152.4185 -423.3462 150.6753 -409.6932 147.0317 -378.8659 c
144.5903 -358.2072 141.6196 -333.0743 139.7319 -326.1728 C
138.2935 -333.2728 136.3174 -359.092 134.3984 -384.156 c
130.0112 -441.4701 127.9795 -462.0451 125.3154 -463.317 c
124.9404 -463.4966 124.5059 -463.5065 124.1245 -463.3416 c
121.6104 -462.2616 119.811 -448.5783 115.3252 -405.1862 c
112.9434 -382.1486 110.0151 -353.8298 107.8486 -348.6668 C
105.7769 -353.706 103.0181 -381.8861 100.7749 -404.8041 c
97.0107 -443.2594 94.9624 -461.5547 92.4521 -463.1875 c
92.1426 -463.3892 91.77 -463.4712 91.4097 -463.4179 c
88.8511 -463.0472 87.082 -453.793 80.8936 -408.4073 c
77.498 -383.5025 73.3062 -352.7613 70.6265 -348.4568 C
68.1963 -352.7301 66.3735 -382.5971 65.0273 -404.654 c
62.8481 -440.3655 62.0723 -447.2211 60.144 -447.805 c
59.6782 -447.9477 59.165 -447.8312 58.8052 -447.5024 c
56.6758 -445.5605 55.1602 -430.8218 52.917 -406.7804 c
51.7842 -394.6363 50.519 -381.0767 49.4644 -376.8707 C
47.7734 -381.2498 45.2168 -397.0054 43.4761 -411.6498 C
41.4858 -411.4825 L
41.4966 -411.3931 42.5674 -402.4169 43.9727 -393.4702 c
46.8955 -374.855 48.3389 -374.4934 49.2939 -374.2548 c
49.6299 -374.1703 49.9946 -374.2195 50.2925 -374.3917 c
51.7813 -375.2495 52.6147 -382.0362 54.9111 -406.6492 c
56.2383 -420.8746 58.0005 -439.7669 59.6543 -445.0496 C
60.8809 -439.7816 62.0156 -421.1936 63.0303 -404.5679 c
65.6465 -361.7014 67.0527 -347.3014 70.2236 -346.501 c
70.623 -346.4018 71.043 -346.4584 71.4092 -346.6601 c
74.4102 -348.3199 77.3462 -367.6247 82.8804 -408.2163 c
85.9678 -430.8595 89.4399 -456.3245 91.6128 -461.171 C
93.7559 -456.0112 96.5269 -427.699 98.7817 -404.6663 c
102.6235 -365.4179 104.5728 -348.064 107.1123 -346.6002 c
107.5029 -346.3739 107.9893 -346.3386 108.4131 -346.5076 c
110.9775 -347.5253 112.7959 -361.3054 117.3174 -405.041 c
119.6572 -427.6719 122.5273 -455.4314 124.6621 -461.0201 C
127.0313 -454.2194 129.9932 -415.5237 132.4028 -384.0478 c
136.6123 -329.0569 137.4766 -323.383 139.3457 -323.005 c
139.6836 -322.9377 140.0273 -322.9968 140.3193 -323.1706 c
142.2886 -324.3457 144.2197 -338.066 149.022 -378.7002 c
151.021 -395.6154 153.2432 -414.4167 154.647 -421.1714 C
155.3262 -416.3159 155.9272 -405.4142 156.5127 -394.7962 c
158.1831 -364.497 159.5366 -344.4788 162.9893 -342.3573 c
163.4238 -342.0908 163.9478 -342.0416 164.4258 -342.2236 c
167.7158 -343.4767 170.3774 -364.0345 175.4741 -412.7282 c
177.3198 -430.3592 179.2183 -448.4955 180.5225 -454.8131 C
181.5938 -448.7636 182.772 -431.928 183.9175 -415.5582 c
187.0215 -371.2132 188.8262 -352.4218 191.9702 -350.8538 c
192.439 -350.6201 192.9858 -350.6037 193.4712 -350.8112 c
197.043 -352.3332 200.0459 -373.1846 204.6724 -413.7032 c
205.5957 -421.7873 206.481 -429.5392 207.0767 -433.4148 C
208.2129 -429.5794 209.9604 -421.8389 211.5483 -414.8062 c
217.4629 -388.6081 219.3135 -382.4889 221.4507 -382.0698 c
221.8477 -381.9911 222.2607 -382.0641 222.6143 -382.2732 c
224.6011 -383.4492 225.9307 -391.0731 228.3433 -408.8567 c
229.1597 -414.8759 230.061 -421.5183 230.7983 -424.6706 C
232.1846 -419.6346 234.4609 -405.3133 236.3472 -393.448 c
239.4785 -373.7471 240.8584 -365.6188 241.9102 -364.5585 c
242.207 -364.2592 242.6738 -364.1411 243.1006 -364.2633 c
244.3579 -364.6184 244.645 -365.6114 246.2378 -394.9184 c
247.2661 -413.8435 248.7949 -441.9752 250.8501 -446.4757 C
252.3389 -443.5342 253.5527 -429.7951 254.457 -419.5699 c
256.2686 -399.0711 257.1191 -393.0199 259.2646 -392.4205 c
259.7637 -392.2803 260.2891 -392.3377 260.7422 -392.5796 c
262.7559 -393.6481 263.6709 -398.9948 264.9385 -407.6726 c
265.4307 -411.0372 266.0654 -415.3884 266.7148 -417.4148 C
267.6426 -414.283 268.8418 -405.6905 269.9199 -397.9698 c
272.4795 -379.6441 274.3535 -367.5074 276.9785 -365.8484 c
277.3965 -365.5836 277.9189 -365.5327 278.373 -365.7164 c
280.7266 -366.6636 281.5 -377.2422 282.7754 -410.7322 c
283.3262 -425.2102 283.9414 -441.3741 284.959 -446.3723 C
286.0635 -441.9998 287.0869 -429.071 287.9336 -418.3849 c
289.4473 -399.2859 290.3252 -390.1342 291.8379 -388.7286 c
292.1807 -388.4121 292.6768 -388.294 293.1318 -388.4252 c
294.9385 -388.941 295.833 -394.8774 298.7666 -425.7908 c
299.9854 -438.6401 301.4531 -454.1087 302.6826 -459.8523 C
304.0537 -452.3046 305.9863 -427.8532 307.7188 -405.93 c
311.0518 -363.7507 313.4141 -335.906 315.7822 -333.2777 c
316.2041 -332.8095 316.7803 -332.7512 317.1777 -332.8538 c
318.2559 -333.1309 319.4775 -333.445 321.6182 -359.0355 c
322.8516 -373.7849 324.0322 -392.5419 325.1738 -410.6805 c
326.4541 -431.0186 327.7715 -451.9331 328.7734 -459.3988 C
330.3955 -452.1783 332.9854 -432.1445 335.1357 -415.5114 c
337.9688 -393.603 339.7607 -380.164 340.7656 -378.2746 c
341.1719 -377.5095 341.8906 -377.5391 342.1025 -377.5653 c
343.7842 -377.7769 344.6025 -380.7184 348.7832 -409.193 c
350.1475 -418.4841 351.6553 -428.7487 352.7061 -433.4148 C
354.0254 -427.4743 356.2939 -411.7589 358.5 -396.4707 c
364.4766 -355.0664 368.9854 -325.5783 372.5957 -323.2534 c
373.0313 -322.9722 373.4492 -322.9549 373.7217 -322.9861 c
375.0293 -323.1436 376.6563 -323.3387 379.5322 -348.4371 c
381.1943 -362.9479 382.8369 -381.855 384.4248 -400.1388 c
386.5205 -424.2573 388.8682 -451.2869 390.6133 -457.7866 C
392.5332 -450.7957 394.8037 -419.8774 396.6602 -394.5969 c
398.7734 -365.8238 400.7695 -338.6458 402.6582 -334.8809 c
403.1113 -333.9797 403.8125 -333.9215 404.1934 -333.9682 c
405.2959 -334.1027 406.3369 -334.2298 408.9385 -350.5939 c
410.4424 -360.054 412.1299 -372.8656 413.7617 -385.2557 c
416.5664 -406.5475 420.0381 -432.9022 422.0566 -436.1152 C
424.3945 -434.0486 428.3125 -417.227 430.6836 -407.0428 c
434.5645 -390.3777 435.0869 -389.1641 436.5801 -389.1641 c
438.2041 -389.1641 438.7217 -390.787 440.8428 -402.5202 c
442.0215 -409.0437 444.2168 -421.1878 446.0859 -421.9619 C
447.6963 -421.5708 449.8086 -412.638 450.8242 -408.345 c
452.4668 -401.4017 453.0127 -399.5959 454.2031 -399.1892 c
454.6074 -399.0481 455.0605 -399.0686 455.4795 -399.2449 c
457.7832 -400.2069 460.4893 -408.0301 461.5459 -411.3497 C
459.6143 -411.7827 L
458.1914 -407.3159 456.084 -402.2767 454.9092 -401.0097 C
454.3096 -402.2299 453.4746 -405.7635 452.7861 -408.6722 c
450.8418 -416.8924 449.3906 -422.3605 447.0264 -423.4315 c
446.4795 -423.6783 445.8926 -423.7078 445.3311 -423.5168 c
442.8389 -422.6672 441.3838 -416.7054 438.8652 -402.772 c
438.1475 -398.7988 437.291 -394.0598 436.5957 -391.8473 C
435.6182 -394.6035 434.0557 -401.3147 432.6465 -407.3651 c
427.8154 -428.1099 425.3467 -436.9278 422.5645 -437.8332 c
422.0293 -438.0062 421.4541 -437.939 420.9844 -437.6454 c
418.6836 -436.2136 416.4111 -420.6384 411.7744 -385.4402 c
409.2197 -366.0518 406.1006 -342.3688 404.1191 -336.6596 C
402.4473 -343.088 400.5225 -369.2959 398.6563 -394.7002 c
395.041 -443.936 393.5371 -459.4349 391.1729 -460.4903 c
390.7939 -460.6601 390.3467 -460.651 389.9736 -460.4674 c
387.874 -459.4284 386.4014 -445.9795 382.4307 -400.261 c
379.8369 -370.4112 376.3193 -329.9139 373.4746 -324.9501 C
370.1553 -329.6785 364.3633 -369.8093 360.4863 -396.6733 c
354.8809 -435.5116 354.374 -436.9172 352.9053 -437.1624 c
352.4316 -437.2395 351.9619 -437.0492 351.709 -436.672 c
350.6055 -435.0278 349.124 -425.2364 346.7988 -409.398 c
345.2275 -398.6955 343.3369 -385.8199 342.0498 -380.9308 C
340.9189 -386.3398 338.9951 -401.2237 337.124 -415.6927 c
331.2148 -461.4022 330.4258 -463.4466 328.6035 -463.4835 c
328.5596 -463.4843 328.5166 -463.4851 328.4736 -463.4851 C
f
U
u
469 -412 m
28 -412 L
28 -410 L
469 -410 L
469 -412 L
f
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
